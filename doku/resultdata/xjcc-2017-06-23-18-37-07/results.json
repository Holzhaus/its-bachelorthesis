[
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "cobravsmongoose",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "cobravsmongoose",
    "Result": "ERROR",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "cobravsmongoose",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "greencapexml",
    "Result": "ERROR",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "greencapexml",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "greencapexml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "jsonlib",
    "Result": "ERROR",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "jsonlib",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "jsonlib",
    "Result": "FAILED",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "jsonml",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "jsonml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "jsonmlpatched",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "jsonmlpatched",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "jxon",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "jxon",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "newtonsoftjson",
    "Result": "ERROR",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "newtonsoftjson",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "newtonsoftjson",
    "Result": "FAILED",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "orgjsonxml",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "orgjsonxml",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "pesterfish",
    "Result": "FAILED",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "pesterfish",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "pesterfishdefused",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "pesterfishdefused",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "x2js",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "x2js",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "x2jsabdmob",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "x2jsabdmob",
    "Result": "ERROR",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "x2jsabdmob",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-abdera",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-abdera",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-badgerfish",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-cobra",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-cobra",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-gdata",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-gdata",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-gdata",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-parker",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-parker",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  },
  {
    "Basename": "basic-attribute-multiple.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Attribute (multiple)"
  },
  {
    "Basename": "basic-attribute.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Attribute"
  },
  {
    "Basename": "basic-cdata-close-in-textnode.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "CDATA close in Text Node"
  },
  {
    "Basename": "basic-cdata-escaped.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Escaped CDATA section"
  },
  {
    "Basename": "basic-cdata-with-markup.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "CDATA section with Markup"
  },
  {
    "Basename": "basic-cdata.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "CDATA support"
  },
  {
    "Basename": "basic-comments.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Comments [OPTIONAL]"
  },
  {
    "Basename": "basic-deepnesting.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Deep nesting"
  },
  {
    "Basename": "basic-duplicate-childtags-order.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Duplicate Child tag Names (Alternating Order)"
  },
  {
    "Basename": "basic-duplicate-childtags-xmlnsprefix.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Duplicate child tag names (different NS prefix)"
  },
  {
    "Basename": "basic-duplicate-childtags.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Duplicate child tag names"
  },
  {
    "Basename": "basic-element-order.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Element Order"
  },
  {
    "Basename": "basic-emptyelement.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Empty Elements"
  },
  {
    "Basename": "basic-mixedcontent.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Mixed Content"
  },
  {
    "Basename": "basic-pi-attrdata.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Attibute Data)"
  },
  {
    "Basename": "basic-pi-markup.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Markup)"
  },
  {
    "Basename": "basic-pi-outside-root.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions outside root"
  },
  {
    "Basename": "basic-pi-simpledata.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Arbitrary Data)"
  },
  {
    "Basename": "basic-pi-whitespace.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Whitespace)"
  },
  {
    "Basename": "basic-pi.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Processing Instructions (Basic)"
  },
  {
    "Basename": "basic-root-attr.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Root Element Attribute"
  },
  {
    "Basename": "basic-root-tagname.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Root Element Tag Name"
  },
  {
    "Basename": "basic-simple.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Simple Element List"
  },
  {
    "Basename": "basic-typeinference-binary32-attr.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Type Inference with floats (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary32.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Type Inference with floats"
  },
  {
    "Basename": "basic-typeinference-binary64-attr.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Type Inference with doubles (Attr)"
  },
  {
    "Basename": "basic-typeinference-binary64.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Type Inference with doubles"
  },
  {
    "Basename": "basic-typeinference-bool-attr.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Type Inference with Boolean values (Attr)"
  },
  {
    "Basename": "basic-typeinference-bool.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Type Inference with Boolean values"
  },
  {
    "Basename": "basic-typeinference-integer-attr.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Type Inference with Big Integers (Attr)"
  },
  {
    "Basename": "basic-typeinference-integer.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Type Inference with Big Integers"
  },
  {
    "Basename": "basic-whitespace-indentation.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Whitespace (Indentation)"
  },
  {
    "Basename": "basic-whitespace-mixedcontent.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Whitespace (Mixed Content)"
  },
  {
    "Basename": "basic-whitespace.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Whitespace (Clean/Dirty)"
  },
  {
    "Basename": "basic-xmlns-multiple.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Namespace declaration (multiple)"
  },
  {
    "Basename": "basic-xmlns-prefix.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Namespace declaration with prefix"
  },
  {
    "Basename": "basic-xmlns.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Namespace declaration"
  },
  {
    "Basename": "chars-u000009-u00000D.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "C0 set (u000009, 00000A & 00000D)"
  },
  {
    "Basename": "chars-u000020-u00007E.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "ASCII printable (u000020-00007E)"
  },
  {
    "Basename": "chars-u00007F-u000084.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Discouraged (u00007F-000084)"
  },
  {
    "Basename": "chars-u000085-u000085.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "NEL Control Char (u000085-000085)"
  },
  {
    "Basename": "chars-u000086-u00009F.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Discouraged (u000086-00009F)"
  },
  {
    "Basename": "chars-u0000A0-u000FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane I (u0000A0-000FFF)"
  },
  {
    "Basename": "chars-u001000-u001FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane II (u001000-001FFF)"
  },
  {
    "Basename": "chars-u002000-u002FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane III (u002000-002FFF)"
  },
  {
    "Basename": "chars-u003000-u003FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane IV (u003000-003FFF)"
  },
  {
    "Basename": "chars-u004000-u004FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane V (u004000-004FFF)"
  },
  {
    "Basename": "chars-u005000-u005FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane VI (u005000-005FFF)"
  },
  {
    "Basename": "chars-u006000-u006FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane VII (u006000-006FFF)"
  },
  {
    "Basename": "chars-u007000-u007FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane VIII (u007000-007FFF)"
  },
  {
    "Basename": "chars-u008000-u008FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane IX (u008000-008FFF)"
  },
  {
    "Basename": "chars-u009000-u009FFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane X (u009000-009FFF)"
  },
  {
    "Basename": "chars-u00A000-u00AFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XI (u00A000-00AFFF)"
  },
  {
    "Basename": "chars-u00B000-u00BFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XII (u00B000-00BFFF)"
  },
  {
    "Basename": "chars-u00C000-u00CFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XIII (u00C000-00CFFF)"
  },
  {
    "Basename": "chars-u00D000-u00D7FF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XIV (u00D000-00D7FF)"
  },
  {
    "Basename": "chars-u00E000-u00EFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XV (u00E000-00EFFF)"
  },
  {
    "Basename": "chars-u00F000-u00FDCF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XVI (u00F000-00FDCF)"
  },
  {
    "Basename": "chars-u00FDD0-u00FDEF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane Discouraged (u00FDD0-00FDEF)"
  },
  {
    "Basename": "chars-u00FDF0-u00FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "BMP plane XVII (u00FDF0-00FFFD)"
  },
  {
    "Basename": "chars-u010000-u01FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SMP plane (u010000-01FFFD)"
  },
  {
    "Basename": "chars-u01FFFE-u01FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SMP plane Discouraged (u01FFFE-01FFFF)"
  },
  {
    "Basename": "chars-u020000-u02FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SIP plane (u020000-02FFFD)"
  },
  {
    "Basename": "chars-u02FFFE-u02FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SIP plane Discouraged (u02FFFE-02FFFF)"
  },
  {
    "Basename": "chars-u030000-u03FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 3 (u030000-03FFFD)"
  },
  {
    "Basename": "chars-u03FFFE-u03FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 3 Discouraged (u03FFFE-03FFFF)"
  },
  {
    "Basename": "chars-u040000-u04FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 4 (u040000-04FFFD)"
  },
  {
    "Basename": "chars-u04FFFE-u04FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 4 Discouraged (u04FFFE-04FFFF)"
  },
  {
    "Basename": "chars-u050000-u05FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 5 (u050000-05FFFD)"
  },
  {
    "Basename": "chars-u05FFFE-u05FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 5 Discouraged (u05FFFE-05FFFF)"
  },
  {
    "Basename": "chars-u060000-u06FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 6 (u060000-06FFFD)"
  },
  {
    "Basename": "chars-u06FFFE-u06FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 6 Discouraged (u06FFFE-06FFFF)"
  },
  {
    "Basename": "chars-u070000-u07FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 7 (u070000-07FFFD)"
  },
  {
    "Basename": "chars-u07FFFE-u07FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 7 Discouraged (u07FFFE-07FFFF)"
  },
  {
    "Basename": "chars-u080000-u08FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 8 (u080000-08FFFD)"
  },
  {
    "Basename": "chars-u08FFFE-u08FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 8 Discouraged (u08FFFE-08FFFF)"
  },
  {
    "Basename": "chars-u090000-u09FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 9 (u090000-09FFFD)"
  },
  {
    "Basename": "chars-u09FFFE-u09FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 9 Discouraged (u09FFFE-09FFFF)"
  },
  {
    "Basename": "chars-u0A0000-u0AFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 10 (u0A0000-0AFFFD)"
  },
  {
    "Basename": "chars-u0AFFFE-u0AFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 10 Discouraged (u0AFFFE-0AFFFF)"
  },
  {
    "Basename": "chars-u0B0000-u0BFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 11 (u0B0000-0BFFFD)"
  },
  {
    "Basename": "chars-u0BFFFE-u0BFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 11 Discouraged (u0BFFFE-0BFFFF)"
  },
  {
    "Basename": "chars-u0C0000-u0CFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 12 (u0C0000-0CFFFD)"
  },
  {
    "Basename": "chars-u0CFFFE-u0CFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 12 Discouraged (u0CFFFE-0CFFFF)"
  },
  {
    "Basename": "chars-u0D0000-u0DFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Unassigned plane 13 (u0D0000-0DFFFD)"
  },
  {
    "Basename": "chars-u0DFFFE-u0DFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "Plane 13 Discouraged (u0DFFFE-0DFFFF)"
  },
  {
    "Basename": "chars-u0E0000-u0EFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SSP plane (u0E0000-0EFFFD)"
  },
  {
    "Basename": "chars-u0EFFFE-u0EFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SSP plane Discouraged (u0EFFFE-0EFFFF)"
  },
  {
    "Basename": "chars-u0F0000-u0FFFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane (u0F0000-0FFFFD)"
  },
  {
    "Basename": "chars-u0FFFFE-u0FFFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SPUA-A plane Discouraged (u0FFFFE-0FFFFF)"
  },
  {
    "Basename": "chars-u100000-u10FFFD.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane (u100000-10FFFD)"
  },
  {
    "Basename": "chars-u10FFFE-u10FFFF.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SPUA-B plane Discouraged (u10FFFE-10FFFF)"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-word2003xml.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "MSWord 2003 XML file"
  },
  {
    "Basename": "complex-Office-Open-XML-Part-1-Fundamentals-wordxml.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "MSWord XML file"
  },
  {
    "Basename": "complex-OpenDocument-v1.0ed2-cs1.fodt",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "OpenDocument sample file"
  },
  {
    "Basename": "complex-REC-xml-20081126.xhtml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "XML 1.0 5th Edition (XHTML version)"
  },
  {
    "Basename": "complex-REC-xml-20081126.xml",
    "Converter": "xmljson-yahoo",
    "Result": "ERROR",
    "Testcase": "XML 1.0 5th Edition (XML version)"
  },
  {
    "Basename": "complex-car.svg",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SVG Car Demo"
  },
  {
    "Basename": "complex-docbook-docs-howto.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "DocBook V5.0 transition guide"
  },
  {
    "Basename": "complex-musicbrainz-ws-2-release-query-release-JSOP.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "MusicBrainz.org API Response"
  },
  {
    "Basename": "complex-photos.svg",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "SVG Photos Demo"
  },
  {
    "Basename": "complex-sample-rss-091.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "RSS 0.91 sample document"
  },
  {
    "Basename": "complex-sample-rss-092.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "RSS 0.92 sample document"
  },
  {
    "Basename": "complex-sample-rss-2.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "RSS 2.0 sample document"
  },
  {
    "Basename": "complex-thesis-example-xmltree.xml",
    "Converter": "xmljson-yahoo",
    "Result": "FAILED",
    "Testcase": "XML tree Example (Thesis)"
  },
  {
    "Basename": "dos-billion-laughs-pe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack (PE Version)"
  },
  {
    "Basename": "dos-billion-laughs.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Billion Laughs Attack"
  },
  {
    "Basename": "dos-entity-recursion-pe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack (PE)"
  },
  {
    "Basename": "dos-entity-recursion.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Entity Recursion Attack"
  },
  {
    "Basename": "dos-quadratic-blowup.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Quadratic Blowup Attack"
  },
  {
    "Basename": "fsa-doctype-pe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "Doctype Parameter Entity FSA Attack"
  },
  {
    "Basename": "fsa-external-pe-dtd.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "External PE DTD FSA Attack"
  },
  {
    "Basename": "fsa-xinclude.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XInclude FSA Attack"
  },
  {
    "Basename": "fsa-xslt.xsl",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XSLT FSA Attack"
  },
  {
    "Basename": "fsa-xxe-pe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XXE FSA Attack (PE)"
  },
  {
    "Basename": "fsa-xxe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XXE FSA Attack"
  },
  {
    "Basename": "ssrf-doctype.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "DOCTYPE URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation-nonamespace.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "SchemaLocation NoNamespace URL Invocation"
  },
  {
    "Basename": "ssrf-schemalocation.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "SchemaLocation URL Invocation"
  },
  {
    "Basename": "ssrf-xinclude.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XInclude URL Invocation"
  },
  {
    "Basename": "ssrf-xxe-pe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XXE URL Invocation (PE)"
  },
  {
    "Basename": "ssrf-xxe.xml",
    "Converter": "xmljson-yahoo",
    "Result": "OK",
    "Testcase": "XXE URL Invocation"
  }
]