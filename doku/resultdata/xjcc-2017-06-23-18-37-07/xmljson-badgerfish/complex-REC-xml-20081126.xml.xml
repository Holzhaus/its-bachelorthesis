<spec w3c-doctype="rec" xml:lang="en"><back><div1 id="sec-bibliography"><div2 id="sec-existing-stds"><blist><bibl href="http://www.iana.org/assignments/character-sets" id="IANA" key="IANA-CHARSETS">(Internet
Assigned Numbers Authority)<titleref>Official Names for Character Sets</titleref></bibl><bibl href="http://www.ietf.org/rfc/rfc2119.txt" id="rfc2119" key="IETF RFC 2119">IETF
(Internet Engineering Task Force).<titleref>RFC 2119: Key words for use in RFCs to Indicate Requirement Levels</titleref></bibl><bibl diff="chg" id="RFC1766" key="IETF BCP 47"><loc href="E01" role="erratumref" /><titleref>BCP 47, consisting of<loc href="http://tools.ietf.org/html/rfc4646">RFC 4646: Tags for Identifying Languages</loc><loc href="http://tools.ietf.org/html/rfc4647">RFC 4647: Matching of Language Tags</loc></titleref></bibl><bibl href="http://www.ietf.org/rfc/rfc3986.txt" id="rfc3986" key="IETF RFC 3986">IETF (Internet Engineering Task Force).<titleref>RFC 3986: Uniform Resource Identifier (URI): Generic Syntax</titleref></bibl><bibl id="ISO10646" key="ISO/IEC 10646">ISO (International
Organization for Standardization).<loc href="http://www.iso.org/iso/home.htm">http://www.iso.org/iso/home.htm</loc><titleref>ISO/IEC 10646-1:2000. Information
technology — Universal Multiple-Octet Coded Character Set (UCS) —
Part 1: Architecture and Basic Multilingual Plane</titleref><titleref>ISO/IEC 10646-2:2001.
Information technology — Universal Multiple-Octet Coded Character Set (UCS) — Part 2:
Supplementary Planes</titleref></bibl><bibl id="ISO10646-2000" key="ISO/IEC 10646:2000">ISO (International
Organization for Standardization).<titleref>ISO/IEC 10646-1:2000. Information
technology — Universal Multiple-Octet Coded Character Set (UCS) —
Part 1: Architecture and Basic Multilingual Plane.</titleref></bibl><bibl id="Unicode" key="Unicode">The Unicode Consortium.<emph>The Unicode
Standard, Version<phrase diff="chg"><loc href="E11" role="erratumref" /></phrase></emph><phrase diff="del"><loc href="E11" role="erratumref" /></phrase><phrase diff="add"><loc href="E11" role="erratumref" /></phrase></bibl><bibl href="http://unicode.org/reports/tr15/" id="unipart15" key="UnicodeNormal">The Unicode
Consortium.<titleref>Unicode normalization forms</titleref></bibl><bibl diff="del" id="Unicode3" key="Unicode3"><emph>The Unicode Standard, Version 3.2</emph><emph>The Unicode Standard, Version 3.0</emph><emph>Unicode
Standard Annex #27: Unicode 3.1</emph><emph>Unicode Standard Annex #28: Unicode
3.2</emph><loc href="E11" role="erratumref" /><loc href="http://www.unicode.org/reports/tr27/">http://www.unicode.org/reports/tr27</loc><loc href="http://www.unicode.org/reports/tr28/">http://www.unicode.org/reports/tr28</loc></bibl></blist><head>Normative References</head></div2><div2 id="null"><blist><bibl id="Aho" key="Aho/Ullman">Aho, Alfred V., Ravi Sethi, and Jeffrey D.
Ullman.<titleref>Compilers: Principles, Techniques, and Tools</titleref></bibl><bibl href="ftp://ftp.informatik.uni-freiburg.de/documents/papers/brueggem/habil.ps" id="ABK" key="Brüggemann-Klein">Brüggemann-Klein,
Anne.<titleref>Formal Models in Document Processing</titleref></bibl><bibl id="ABKDW" key="Brüggemann-Klein and Wood">Brüggemann-Klein,
Anne, and Derick Wood.<titleref>Deterministic Regular Languages</titleref><titleref>One-Unambiguous
Regular Languages</titleref></bibl><bibl href="http://www.w3.org/TR/NOTE-sgml-xml-971215" id="Clark" key="Clark">James Clark.<titleref>Comparison of SGML and XML</titleref></bibl><bibl diff="chg" href="http://www.iana.org/assignments/language-subtag-registry" id="IANA-LANGCODES" key="IANA-LANGCODES"><loc href="E01" role="erratumref" /><titleref>Registry of Language Tags</titleref></bibl><bibl href="http://www.ietf.org/rfc/rfc2141.txt" id="RFC2141" key="IETF RFC 2141">IETF
(Internet Engineering Task Force).<titleref>RFC 2141: URN Syntax</titleref></bibl><bibl href="http://www.ietf.org/rfc/rfc3023.txt" id="rfc2376" key="IETF RFC 3023">IETF
(Internet Engineering Task Force).<titleref>RFC 3023: XML Media Types</titleref></bibl><bibl href="http://www.ietf.org/rfc/rfc2781.txt" id="rfc2781" key="IETF RFC 2781">IETF
(Internet Engineering Task Force).<titleref>RFC 2781: UTF-16, an encoding
of ISO 10646</titleref></bibl><bibl id="ISO639" key="ISO 639">(International Organization for Standardization).<titleref>ISO 639:1988 (E).
Code for the representation of names of languages.</titleref></bibl><bibl id="ISO3166" key="ISO 3166">(International Organization for Standardization).<titleref>ISO 3166-1:1997
(E). Codes for the representation of names of countries and their subdivisions —
Part 1: Country codes</titleref></bibl><bibl id="ISO8879" key="ISO 8879">ISO (International Organization for Standardization).<titleref>ISO
8879:1986(E). Information processing — Text and Office Systems —
Standard Generalized Markup Language (SGML).</titleref></bibl><bibl id="ISO10744" key="ISO/IEC 10744">ISO (International Organization for
Standardization).<emph>Extended Facilities
Annexe.</emph><titleref>ISO/IEC 10744-1992 (E). Information technology —
Hypermedia/Time-based Structuring Language (HyTime).</titleref></bibl><bibl href="http://www.sgmlsource.com/8879/n0029.htm" id="websgml" key="WEBSGML">ISO
(International Organization for Standardization).<titleref>ISO 8879:1986
TC2. Information technology — Document Description and Processing Languages</titleref></bibl><bibl href="http://www.w3.org/TR/xml-names/" id="xml-names" key="XML Names">Tim Bray,
Dave Hollander, and Andrew Layman, editors.<titleref>Namespaces in XML</titleref></bibl></blist><head>Other References</head></div2><head>References</head></div1><div1 id="CharClasses"><head>Character Classes</head><p diff="add"><loc href="E09" role="erratumref" /><loc href="http://www.w3.org/TR/2006/REC-xml-20060816/">Fourth Edition</loc><nt def="NT-NameStartChar">[4]</nt><nt def="NT-Name">[5]</nt></p><p>Following the characteristics defined in the Unicode standard, characters
are classed as base characters (among others, these contain the alphabetic
characters of the Latin alphabet), ideographic characters, and combining characters (among
others, this class contains most diacritics). Digits and extenders are also
distinguished.</p><p>The character classes defined here can be derived from the Unicode 2.0
character database as follows:</p><scrap id="CHARACTERS" lang="ebnf"><head>Characters</head><prodgroup pcw3="3" pcw4="15"><prod id="NT-Letter" num="84"><lhs>Letter</lhs><rhs><nt def="NT-BaseChar">BaseChar</nt><nt def="NT-Ideographic">Ideographic</nt></rhs></prod><prod id="NT-BaseChar" num="85"><lhs>BaseChar</lhs><rhs>[#x0041-#x005A] | [#x0061-#x007A] | [#x00C0-#x00D6]
| [#x00D8-#x00F6] | [#x00F8-#x00FF] | [#x0100-#x0131] | [#x0134-#x013E]
| [#x0141-#x0148] | [#x014A-#x017E] | [#x0180-#x01C3] | [#x01CD-#x01F0]
| [#x01F4-#x01F5] | [#x01FA-#x0217] | [#x0250-#x02A8] | [#x02BB-#x02C1]
| #x0386 | [#x0388-#x038A] | #x038C | [#x038E-#x03A1]
| [#x03A3-#x03CE] | [#x03D0-#x03D6] | #x03DA | #x03DC
| #x03DE | #x03E0 | [#x03E2-#x03F3] | [#x0401-#x040C]
| [#x040E-#x044F] | [#x0451-#x045C] | [#x045E-#x0481] | [#x0490-#x04C4]
| [#x04C7-#x04C8] | [#x04CB-#x04CC] | [#x04D0-#x04EB] | [#x04EE-#x04F5]
| [#x04F8-#x04F9] | [#x0531-#x0556] | #x0559 | [#x0561-#x0586]
| [#x05D0-#x05EA] | [#x05F0-#x05F2] | [#x0621-#x063A] | [#x0641-#x064A]
| [#x0671-#x06B7] | [#x06BA-#x06BE] | [#x06C0-#x06CE] | [#x06D0-#x06D3]
| #x06D5 | [#x06E5-#x06E6] | [#x0905-#x0939] | #x093D
| [#x0958-#x0961] | [#x0985-#x098C] | [#x098F-#x0990] | [#x0993-#x09A8]
| [#x09AA-#x09B0] | #x09B2 | [#x09B6-#x09B9] | [#x09DC-#x09DD]
| [#x09DF-#x09E1] | [#x09F0-#x09F1] | [#x0A05-#x0A0A] | [#x0A0F-#x0A10]
| [#x0A13-#x0A28] | [#x0A2A-#x0A30] | [#x0A32-#x0A33] | [#x0A35-#x0A36]
| [#x0A38-#x0A39] | [#x0A59-#x0A5C] | #x0A5E | [#x0A72-#x0A74]
| [#x0A85-#x0A8B] | #x0A8D | [#x0A8F-#x0A91] | [#x0A93-#x0AA8]
| [#x0AAA-#x0AB0] | [#x0AB2-#x0AB3] | [#x0AB5-#x0AB9] | #x0ABD
| #x0AE0 | [#x0B05-#x0B0C] | [#x0B0F-#x0B10] | [#x0B13-#x0B28]
| [#x0B2A-#x0B30] | [#x0B32-#x0B33] | [#x0B36-#x0B39] | #x0B3D
| [#x0B5C-#x0B5D] | [#x0B5F-#x0B61] | [#x0B85-#x0B8A] | [#x0B8E-#x0B90]
| [#x0B92-#x0B95] | [#x0B99-#x0B9A] | #x0B9C | [#x0B9E-#x0B9F]
| [#x0BA3-#x0BA4] | [#x0BA8-#x0BAA] | [#x0BAE-#x0BB5] | [#x0BB7-#x0BB9]
| [#x0C05-#x0C0C] | [#x0C0E-#x0C10] | [#x0C12-#x0C28] | [#x0C2A-#x0C33]
| [#x0C35-#x0C39] | [#x0C60-#x0C61] | [#x0C85-#x0C8C] | [#x0C8E-#x0C90]
| [#x0C92-#x0CA8] | [#x0CAA-#x0CB3] | [#x0CB5-#x0CB9] | #x0CDE
| [#x0CE0-#x0CE1] | [#x0D05-#x0D0C] | [#x0D0E-#x0D10] | [#x0D12-#x0D28]
| [#x0D2A-#x0D39] | [#x0D60-#x0D61] | [#x0E01-#x0E2E] | #x0E30
| [#x0E32-#x0E33] | [#x0E40-#x0E45] | [#x0E81-#x0E82] | #x0E84
| [#x0E87-#x0E88] | #x0E8A | #x0E8D | [#x0E94-#x0E97]
| [#x0E99-#x0E9F] | [#x0EA1-#x0EA3] | #x0EA5 | #x0EA7
| [#x0EAA-#x0EAB] | [#x0EAD-#x0EAE] | #x0EB0 | [#x0EB2-#x0EB3]
| #x0EBD | [#x0EC0-#x0EC4] | [#x0F40-#x0F47] | [#x0F49-#x0F69]
| [#x10A0-#x10C5] | [#x10D0-#x10F6] | #x1100 | [#x1102-#x1103]
| [#x1105-#x1107] | #x1109 | [#x110B-#x110C] | [#x110E-#x1112]
| #x113C | #x113E | #x1140 | #x114C | #x114E | #x1150
| [#x1154-#x1155] | #x1159 | [#x115F-#x1161] | #x1163
| #x1165 | #x1167 | #x1169 | [#x116D-#x116E] | [#x1172-#x1173]
| #x1175 | #x119E | #x11A8 | #x11AB | [#x11AE-#x11AF]
| [#x11B7-#x11B8] | #x11BA | [#x11BC-#x11C2] | #x11EB
| #x11F0 | #x11F9 | [#x1E00-#x1E9B] | [#x1EA0-#x1EF9]
| [#x1F00-#x1F15] | [#x1F18-#x1F1D] | [#x1F20-#x1F45] | [#x1F48-#x1F4D]
| [#x1F50-#x1F57] | #x1F59 | #x1F5B | #x1F5D | [#x1F5F-#x1F7D]
| [#x1F80-#x1FB4] | [#x1FB6-#x1FBC] | #x1FBE | [#x1FC2-#x1FC4]
| [#x1FC6-#x1FCC] | [#x1FD0-#x1FD3] | [#x1FD6-#x1FDB] | [#x1FE0-#x1FEC]
| [#x1FF2-#x1FF4] | [#x1FF6-#x1FFC] | #x2126 | [#x212A-#x212B]
| #x212E | [#x2180-#x2182] | [#x3041-#x3094] | [#x30A1-#x30FA]
| [#x3105-#x312C] | [#xAC00-#xD7A3]</rhs></prod><prod id="NT-Ideographic" num="86"><lhs>Ideographic</lhs><rhs>[#x4E00-#x9FA5] | #x3007 | [#x3021-#x3029]</rhs></prod><prod id="NT-CombiningChar" num="87"><lhs>CombiningChar</lhs><rhs>[#x0300-#x0345] | [#x0360-#x0361] | [#x0483-#x0486]
| [#x0591-#x05A1] | [#x05A3-#x05B9] | [#x05BB-#x05BD] | #x05BF
| [#x05C1-#x05C2] | #x05C4 | [#x064B-#x0652] | #x0670
| [#x06D6-#x06DC] | [#x06DD-#x06DF] | [#x06E0-#x06E4] | [#x06E7-#x06E8]
| [#x06EA-#x06ED] | [#x0901-#x0903] | #x093C | [#x093E-#x094C]
| #x094D | [#x0951-#x0954] | [#x0962-#x0963] | [#x0981-#x0983]
| #x09BC | #x09BE | #x09BF | [#x09C0-#x09C4] | [#x09C7-#x09C8]
| [#x09CB-#x09CD] | #x09D7 | [#x09E2-#x09E3] | #x0A02
| #x0A3C | #x0A3E | #x0A3F | [#x0A40-#x0A42] | [#x0A47-#x0A48]
| [#x0A4B-#x0A4D] | [#x0A70-#x0A71] | [#x0A81-#x0A83] | #x0ABC
| [#x0ABE-#x0AC5] | [#x0AC7-#x0AC9] | [#x0ACB-#x0ACD] | [#x0B01-#x0B03]
| #x0B3C | [#x0B3E-#x0B43] | [#x0B47-#x0B48] | [#x0B4B-#x0B4D]
| [#x0B56-#x0B57] | [#x0B82-#x0B83] | [#x0BBE-#x0BC2] | [#x0BC6-#x0BC8]
| [#x0BCA-#x0BCD] | #x0BD7 | [#x0C01-#x0C03] | [#x0C3E-#x0C44]
| [#x0C46-#x0C48] | [#x0C4A-#x0C4D] | [#x0C55-#x0C56] | [#x0C82-#x0C83]
| [#x0CBE-#x0CC4] | [#x0CC6-#x0CC8] | [#x0CCA-#x0CCD] | [#x0CD5-#x0CD6]
| [#x0D02-#x0D03] | [#x0D3E-#x0D43] | [#x0D46-#x0D48] | [#x0D4A-#x0D4D]
| #x0D57 | #x0E31 | [#x0E34-#x0E3A] | [#x0E47-#x0E4E]
| #x0EB1 | [#x0EB4-#x0EB9] | [#x0EBB-#x0EBC] | [#x0EC8-#x0ECD]
| [#x0F18-#x0F19] | #x0F35 | #x0F37 | #x0F39 | #x0F3E
| #x0F3F | [#x0F71-#x0F84] | [#x0F86-#x0F8B] | [#x0F90-#x0F95]
| #x0F97 | [#x0F99-#x0FAD] | [#x0FB1-#x0FB7] | #x0FB9
| [#x20D0-#x20DC] | #x20E1 | [#x302A-#x302F] | #x3099
| #x309A</rhs></prod><prod id="NT-Digit" num="88"><lhs>Digit</lhs><rhs>[#x0030-#x0039] | [#x0660-#x0669] | [#x06F0-#x06F9]
| [#x0966-#x096F] | [#x09E6-#x09EF] | [#x0A66-#x0A6F] | [#x0AE6-#x0AEF]
| [#x0B66-#x0B6F] | [#x0BE7-#x0BEF] | [#x0C66-#x0C6F] | [#x0CE6-#x0CEF]
| [#x0D66-#x0D6F] | [#x0E50-#x0E59] | [#x0ED0-#x0ED9] | [#x0F20-#x0F29]</rhs></prod><prod id="NT-Extender" num="89"><lhs>Extender</lhs><rhs>#x00B7 | #x02D0 | #x02D1 | #x0387 | #x0640
| #x0E46 | #x0EC6 | #x3005 | [#x3031-#x3035] | [#x309D-#x309E]
| [#x30FC-#x30FE]</rhs></prod></prodgroup></scrap><ulist><item><p>Name start characters must have one of the categories Ll, Lu, Lo,
Lt, Nl.</p></item><item><p>Name characters other than Name-start characters must have one of
the categories Mc, Me, Mn, Lm, or Nd.</p></item><item><p>Characters in the compatibility area (i.e. with character code greater
than #xF900 and less than #xFFFE) are not allowed in XML names.</p></item><item><p>Characters which have a font or compatibility decomposition (i.e.
those with a<quote>compatibility formatting tag</quote><quote>&lt;</quote></p></item><item><p>The following characters are treated as name-start characters rather
than name characters, because the property file classifies them as Alphabetic:
[#x02BB-#x02C1], #x0559, #x06E5, #x06E6.</p></item><item><p>Characters #x20DD-#x20E0 are excluded (in accordance with Unicode 2.0,
section 5.14).</p></item><item><p>Character #x00B7 is classified as an extender, because the property
list so identifies it.</p></item><item><p>Character #x0387 is added as a name character, because #x00B7 is
its canonical equivalent.</p></item><item><p>Characters ':' and '_' are allowed as name-start characters.</p></item><item><p>Characters '-' and '.' are allowed as name characters.</p></item></ulist></div1><inform-div1 id="sec-xml-and-sgml"><head>XML and SGML</head><p>XML
is designed to be a subset of SGML, in that every XML document should also
be a conforming SGML document. For a detailed comparison of the additional
restrictions that XML places on documents beyond those of SGML, see<bibref ref="Clark" /></p></inform-div1><inform-div1 id="sec-entexpand"><eg>&lt;!ENTITY example "&lt;p&gt;An ampersand (&amp;#38;#38;) may be escaped
numerically (&amp;#38;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p&gt;" &gt;</eg><eg>&lt;p&gt;An ampersand (&amp;#38;) may be escaped
numerically (&amp;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p&gt;</eg><eg>An ampersand (&amp;) may be escaped
numerically (&amp;#38;) or with a general entity
(&amp;amp;).</eg><eg>1 &lt;?xml version='1.0'?&gt;
2 &lt;!DOCTYPE test [
3 &lt;!ELEMENT test (#PCDATA) &gt;
4 &lt;!ENTITY % xx '&amp;#37;zz;'&gt;
5 &lt;!ENTITY % zz '&amp;#60;!ENTITY tricky "error-prone" &gt;' &gt;
6 %xx;
7 ]&gt;
8 &lt;test&gt;This sample shows a &amp;tricky; method.&lt;/test&gt;</eg><eg diff="add"><loc href="E07" role="erratumref" /></eg><eg diff="add"><loc href="E07" role="erratumref" /></eg><head>Expansion of Entity and Character References</head><p>This appendix contains some examples illustrating the sequence of entity-
and character-reference recognition and expansion, as specified in<specref ref="entproc" /></p><p>If the DTD contains the declaration</p><p>then the XML processor will recognize the character references when it
parses the entity declaration, and resolve them before storing the following
string as the value of the entity<quote><code>example</code></quote></p><p>A reference in the document to<el>p</el><el>p</el><quote><code>&amp;example;</code></quote></p><p>A more complex example will illustrate the rules and their effects fully.
In the following example, the line numbers are solely for reference.</p><p>This produces the following:</p><p diff="add"><loc href="E07" role="erratumref" /></p><p diff="add"><loc href="E07" role="erratumref" /><specref ref="sec-predefined-ent" /><titleref href="#bypass">bypassed</titleref></p><p diff="add"><loc href="E07" role="erratumref" /></p><p diff="add"><loc href="E07" role="erratumref" /><titleref href="#CleanAttrVals">WFC: No &lt; in Attribute Values</titleref></p><ulist spacing="compact"><item><p>in line 4, the reference to character 37 is expanded immediately,
and the parameter entity<quote><code>xx</code></quote><quote><code>%zz;</code></quote><quote><code>zz</code></quote><quote><code>zz</code></quote></p></item><item><p>in line 5, the character reference<quote><code>&amp;#60;</code></quote><quote><code>zz</code></quote><quote><code>&lt;!ENTITY tricky "error-prone"
&gt;</code></quote></p></item><item><p>in line 6, the reference to<quote><code>xx</code></quote><quote><code>xx</code></quote><quote><code>%zz;</code></quote><quote><code>zz</code></quote><quote><code>&lt;!ENTITY tricky "error-prone"
&gt;</code></quote><quote><code>tricky</code></quote><quote><code>error-prone</code></quote></p></item><item><p>in line 8, the reference to the general entity<el>test</el><emph>This sample
shows a error-prone method.</emph><quote><code>tricky</code></quote></p></item></ulist></inform-div1><inform-div1 id="determinism"><head>Deterministic Content Models</head><p>As
noted in<quote>unambiguous</quote><specref ref="sec-element-content" /><termref def="dt-compat">for compatibility</termref></p><p>For example, the content model<code>((b, c) | (b, d))</code><code>(b,
(c | d))</code><el>b</el><el>b</el><el>b</el><el>b</el><el>b</el><el>c</el><el>d</el></p><p>More formally: a finite state automaton may be constructed from the content
model using the standard algorithms, e.g. algorithm 3.5 in section 3.9 of
Aho, Sethi, and Ullman<bibref ref="Aho" /></p><p>Algorithms exist which allow many but not all non-deterministic content
models to be reduced automatically to equivalent deterministic models; see
Brüggemann-Klein 1991<bibref ref="ABK" /></p></inform-div1><inform-div1 id="sec-guessing"><div2 id="sec-guessing-no-ext-info"><head>Detection Without External Encoding Information</head><note><p>In cases above which do not require reading the encoding declaration to
determine the encoding, section 4.3.3 still requires that the encoding declaration,
if present, be read and that the encoding name be checked to match the actual
encoding of the entity. Also, it is possible that new character encodings
will be invented that will make it necessary to use the encoding declaration
to determine the encoding, in cases where this is not required at present.</p></note><p>Because each XML entity not accompanied by external
encoding information and not in UTF-8 or UTF-16 encoding must
begin with an XML encoding declaration, in which the first characters must
be '<code>&lt;?xml</code><quote><code>#x0000003C</code></quote><quote><code>#x0000003F</code></quote><quote><code>#xFEFF</code></quote><var>##</var><var>##</var></p><p>With a Byte Order Mark:</p><p>Without a Byte Order Mark:</p><p>This level of autodetection is enough to read the XML encoding declaration
and parse the character-encoding identifier, which is still necessary to distinguish
the individual members of each family of encodings (e.g. to tell UTF-8 from
8859, and the parts of 8859 from each other, or to distinguish the specific
EBCDIC code page in use, and so on).</p><p>Because the contents of the encoding declaration are restricted to characters
from the ASCII repertoire (however encoded),
a processor can reliably read the entire encoding declaration as soon as it
has detected which family of encodings is in use. Since in practice, all widely
used character encodings fall into one of the categories above, the XML encoding
declaration allows reasonably reliable in-band labeling of character encodings,
even when external sources of information at the operating-system or transport-protocol
level are unreliable. Character encodings such as UTF-7
that make overloaded usage of ASCII-valued bytes may fail to be reliably detected.</p><p>Once the processor has detected the character encoding in use, it can act
appropriately, whether by invoking a separate input routine for each case,
or by calling the proper conversion function on each character of input.</p><p>Like any self-labeling system, the XML encoding declaration will not work
if any software changes the entity's character set or encoding without updating
the encoding declaration. Implementors of character-encoding routines should
be careful to ensure the accuracy of the internal and external information
used to label the entity.</p><table border="1" frame="border"><tbody><tr><td><code>00 00 FE
FF</code></td><td>UCS-4, big-endian machine (1234 order)</td></tr><tr><td><code>FF
FE 00 00</code></td><td>UCS-4, little-endian machine (4321 order)</td></tr><tr><td><code>00 00 FF FE</code></td><td>UCS-4, unusual octet order (2143)</td></tr><tr><td><code>FE FF 00 00</code></td><td>UCS-4, unusual octet order (3412)</td></tr><tr><td><code>FE FF ## ##</code></td><td>UTF-16, big-endian</td></tr><tr><td><code>FF FE ## ##</code></td><td>UTF-16, little-endian</td></tr><tr><td><code>EF BB BF</code></td><td>UTF-8</td></tr></tbody></table><table border="1" frame="border"><tbody><tr><td><code>00 00 00 3C</code></td><td rowspan="4">UCS-4 or other encoding with a 32-bit code unit and ASCII
characters encoded as ASCII values, in respectively big-endian (1234), little-endian
(4321) and two unusual byte orders (2143 and 3412). The encoding declaration
must be read to determine which of UCS-4 or other supported 32-bit encodings
applies.</td></tr><tr><td><code>3C 00 00 00</code></td></tr><tr><td><code>00 00 3C 00</code></td></tr><tr><td><code>00 3C 00 00</code></td></tr><tr><td><code>00 3C 00 3F</code></td><td>UTF-16BE or big-endian ISO-10646-UCS-2
or other encoding with a 16-bit code unit in big-endian order and ASCII characters
encoded as ASCII values (the encoding declaration must be read to determine
which)</td></tr><tr><td><code>3C 00 3F 00</code></td><td>UTF-16LE or little-endian
ISO-10646-UCS-2 or other encoding with a 16-bit code unit in little-endian
order and ASCII characters encoded as ASCII values (the encoding declaration
must be read to determine which)</td></tr><tr><td><code>3C 3F 78 6D</code></td><td>UTF-8, ISO 646, ASCII, some part of ISO 8859, Shift-JIS, EUC, or any other
7-bit, 8-bit, or mixed-width encoding which ensures that the characters of
ASCII have their normal positions, width, and values; the actual encoding
declaration must be read to detect which of these applies, but since all of
these encodings use the same bit patterns for the relevant ASCII characters,
the encoding declaration itself may be read reliably</td></tr><tr><td><code>4C
6F A7 94</code></td><td>EBCDIC (in some flavor; the full encoding declaration
must be read to tell which code page is in use)</td></tr><tr><td>Other</td><td>UTF-8 without an encoding declaration, or else the data stream is mislabeled
(lacking a required encoding declaration), corrupt, fragmentary, or enclosed
in a wrapper of some kind</td></tr></tbody></table></div2><div2 id="sec-guessing-with-ext-info"><head>Priorities in the Presence of External Encoding Information</head><p>The second possible case occurs when the XML entity is accompanied by encoding
information, as in some file systems and some network protocols. When multiple
sources of information are available, their relative priority and the preferred
method of handling conflict should be specified as part of the higher-level
protocol used to deliver XML. In particular, please refer
to<bibref ref="rfc2376" /><code>text/xml</code><code>application/xml</code></p><ulist><item><p>If an XML entity is in a file, the Byte-Order Mark and encoding declaration are used
(if present) to determine the character encoding.</p></item></ulist></div2><head>Autodetection of Character Encodings</head><p>The XML encoding declaration functions as an internal label on each entity,
indicating which character encoding is in use. Before an XML processor can
read the internal label, however, it apparently has to know what character
encoding is in use—which is what the internal label is trying to indicate.
In the general case, this is a hopeless situation. It is not entirely hopeless
in XML, however, because XML limits the general case in two ways: each implementation
is assumed to support only a finite set of character encodings, and the XML
encoding declaration is restricted in position and content in order to make
it feasible to autodetect the character encoding in use in each entity in
normal cases. Also, in many cases other sources of information are available
in addition to the XML data stream itself. Two cases may be distinguished,
depending on whether the XML entity is presented to the processor without,
or with, any accompanying (external) information. We<phrase diff="add"><loc href="E05" role="erratumref" /></phrase><phrase diff="del"><loc href="E05" role="erratumref" /></phrase><phrase diff="add"><loc href="E05" role="erratumref" /></phrase></p></inform-div1><inform-div1 id="sec-xml-wg"><head>W3C XML Working Group</head><orglist><member><affiliation>Sun</affiliation><name>Jon Bosak</name><role>Chair</role></member><member><name>James Clark</name><role>Technical Lead</role></member><member><affiliation>Textuality and Netscape</affiliation><name>Tim Bray</name><role>XML Co-editor</role></member><member><affiliation>Microsoft</affiliation><name>Jean Paoli</name><role>XML Co-editor</role></member><member><affiliation>U. of Ill.</affiliation><name>C. M. Sperberg-McQueen</name><role>XML Co-editor</role></member><member><affiliation>W3C</affiliation><name>Dan Connolly</name><role>W3C Liaison</role></member><member><affiliation>Texcel</affiliation><name>Paula Angerstein</name></member><member><affiliation>INSO</affiliation><name>Steve DeRose</name></member><member><affiliation>HP</affiliation><name>Dave Hollander</name></member><member><affiliation>ISOGEN</affiliation><name>Eliot Kimber</name></member><member><affiliation>ArborText</affiliation><name>Eve Maler</name></member><member><affiliation>NCSA</affiliation><name>Tom Magliery</name></member><member><affiliation>SoftQuad, Grif SA, Muzmo and Veo Systems</affiliation><name>Murray Maloney</name></member><member><affiliation>Fuji Xerox Information Systems</affiliation><name>MURATA Makoto (FAMILY Given)</name></member><member><affiliation>Adobe</affiliation><name>Joel Nava</name></member><member><affiliation>Vignette</affiliation><name>Conleth O'Connell</name></member><member><affiliation>SoftQuad</affiliation><name>Peter Sharpe</name></member><member><affiliation>DataChannel</affiliation><name>John Tigue</name></member></orglist><p>This specification was prepared and approved for publication by the W3C
XML Working Group (WG). WG approval of this specification does not necessarily
imply that all WG members voted for its approval. The current and former
participants of the XML WG are:</p></inform-div1><inform-div1 id="sec-core-wg"><head>W3C XML Core Working Group</head><orglist><member><affiliation>Google</affiliation><name>John Cowan</name></member><member><affiliation>PTC-Arbortext</affiliation><name>Andrew Fang</name></member><member><affiliation>PTC-Arbortext</affiliation><name>Paul Grosso</name><role>Co-Chair</role></member><member><affiliation>A-SIT</affiliation><name>Konrad Lanz</name></member><member><affiliation>IBM</affiliation><name>Glenn Marcy</name></member><member><affiliation>W3C</affiliation><name>Henry Thompson</name><role>Staff Contact</role></member><member><affiliation>University of Edinburgh</affiliation><name>Richard Tobin</name></member><member><name>Daniel Veillard</name></member><member><affiliation>Mark Logic</affiliation><name>Norman Walsh</name><role>Co-Chair</role></member><member><name>François Yergeau</name></member></orglist><p>The<phrase diff="chg">fifth</phrase></p></inform-div1><inform-div1 id="prod-notes"><head>Production Notes</head><p diff="chg">This edition was encoded in a
slightly modified version of the<loc href="http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">XMLspec DTD, v2.10</loc><loc href="http://www.w3.org/2002/xmlspec/xhtml/1.13/xmlspec.xsl">xmlspec.xsl</loc><loc href="http://www.w3.org/2002/xmlspec/xhtml/1.13/diffspec.xsl">diffspec.xsl</loc><loc href="REC-xml.xsl">REC-xml.xsl</loc></p></inform-div1><inform-div1 diff="add" id="sec-suggested-names"><head><loc href="E09" role="erratumref" /></head><olist><item><p>The first character of any name should have a Unicode property
						of ID_Start, or else be '_' #x5F.</p></item><item><p>Characters other than the first should have a Unicode property
						of ID_Continue, or be one of the characters listed in the table
						entitled "Characters for Natural Language Identifiers" in UAX
						#31, with the exception of "'" #x27 and "’" #x2019.</p></item><item><p>Characters in names should be expressed using
Normalization Form C as defined in<bibref ref="unipart15" /></p></item><item><p>Ideographic characters which have a canonical decomposition
						(including those in the ranges [#xF900-#xFAFF] and
						[#x2F800-#x2FFFD], with 12 exceptions) should not be used in names.</p></item><item><p>Characters which have a compatibility decomposition (those with
						a "compatibility formatting tag" in field 5 of the Unicode
						Character Database -- marked by field 5 beginning with a "&lt;")
						should not be used in names.  This suggestion does not apply
						to characters which
						despite their compatibility decompositions are in regular use in
						their scripts, for
example #x0E33 THAI CHARACTER SARA AM or #x0EB3 LAO CHARACTER AM.</p></item><item><p>Combining characters meant for use with symbols only (including
						those in the ranges [#x20D0-#x20EF] and [#x1D165-#x1D1AD]) should
						not be used in names.</p></item><item><p>The interlinear annotation characters ([#xFFF9-#xFFFB]) should
						not be used in names.</p></item><item><p>Variation selector characters should not be used in names.</p></item><item><p>Names which are nonsensical, unpronounceable, hard to read, or
						easily confusable with other names should not be employed.</p></item></olist><p><loc href="E09" role="erratumref" /></p><p>The first two suggestions are directly derived from the rules
				given for identifiers in Standard Annex #31 (UAX #31) of the Unicode Standard, version 5.0<bibref ref="Unicode" /></p></inform-div1></back><body><div1 id="sec-intro"><div2 id="sec-origin-goals"><head>Origin and Goals</head><olist><item><p>XML shall be straightforwardly usable over the Internet.</p></item><item><p>XML shall support a wide variety of applications.</p></item><item><p>XML shall be compatible with SGML.</p></item><item><p>It shall be easy to write programs which process XML documents.</p></item><item><p>The number of optional features in XML is to be kept to the absolute
minimum, ideally zero.</p></item><item><p>XML documents should be human-legible and reasonably clear.</p></item><item><p>The XML design should be prepared quickly.</p></item><item><p>The design of XML shall be formal and concise.</p></item><item><p>XML documents shall be easy to create.</p></item><item><p>Terseness in XML markup is of minimal importance.</p></item></olist><p>XML was developed by an XML Working Group (originally known as the SGML
Editorial Review Board) formed under the auspices of the World Wide Web Consortium
(W3C) in 1996. It was chaired by Jon Bosak of Sun Microsystems with the active
participation of an XML Special Interest Group (previously known as the SGML
Working Group) also organized by the W3C. The membership of the XML Working
Group is given in an appendix. Dan Connolly served as the Working Group's contact with
the W3C.</p><p>The design goals for XML are:</p><p>This specification, together with associated standards (Unicode<bibref ref="Unicode" /><bibref ref="ISO10646" /><bibref ref="RFC1766" /><phrase diff="del">RFC 3066</phrase><phrase diff="add"><loc href="E01" role="erratumref" /></phrase><phrase diff="add"><bibref ref="IANA-LANGCODES" /><loc href="E01" role="erratumref" /></phrase><phrase diff="del"><bibref ref="ISO639" /><bibref ref="ISO3166" /><loc href="E01" role="erratumref" /></phrase></p><p>This version of the XML specification may be distributed freely, as long as
all text and legal notices remain intact.</p></div2><div2 id="sec-terminology"><head>Terminology</head><p>The terminology used to describe XML documents is defined in the body of
this specification. The key words<bibref ref="rfc2119" /><glist><gitem><def><p><termdef id="dt-error" term="Error">A violation of the rules of this specification;
results are undefined. Unless otherwise specified, failure to observe a prescription of this specification indicated by one of the keywords<rfc2119>MUST</rfc2119><rfc2119>REQUIRED</rfc2119><rfc2119>MUST NOT</rfc2119><rfc2119>SHALL</rfc2119><rfc2119>SHALL NOT</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MAY</rfc2119></termdef></p></def><label>error</label></gitem><gitem><def><p><termdef id="dt-fatal" term="Fatal Error">An error which a conforming<rfc2119>MUST</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MUST NOT</rfc2119><rfc2119>MUST NOT</rfc2119><termref def="dt-xml-proc">XML processor</termref></termdef></p></def><label>fatal error</label></gitem><gitem><def><p><termdef id="dt-atuseroption" term="At user option">Conforming software<rfc2119>MAY</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119></termdef></p></def><label>at user option</label></gitem><gitem><def><p><termdef id="dt-vc" term="Validity constraint">A rule which applies to
all<rfc2119>MUST</rfc2119><termref def="dt-valid">valid</termref><termref def="dt-validating">validating XML processors</termref></termdef></p></def><label>validity constraint</label></gitem><gitem><def><p><termdef id="dt-wfc" term="Well-formedness constraint">A rule which applies
to all<termref def="dt-wellformed">well-formed</termref><termref def="dt-fatal">fatal errors</termref></termdef></p></def><label>well-formedness constraint</label></gitem><gitem><def><p><termdef id="dt-match" term="match">(Of strings or names:) Two strings
or names being compared are identical. Characters with multiple possible
representations in ISO/IEC 10646 (e.g. characters with both precomposed and
base+diacritic forms) match only if they have the same representation in both
strings. No
case folding is performed. (Of strings and rules in the grammar:) A string
matches a grammatical production if it belongs to the language generated by
that production. (Of content and content models:) An element matches its declaration
when it conforms in the fashion described in the constraint<specref ref="elementvalid" /></termdef></p></def><label>match</label></gitem><gitem><def><p><termdef id="dt-compat" term="For Compatibility">Marks
a sentence describing a feature of XML included solely to ensure
that XML remains compatible with SGML.</termdef></p></def><label>for compatibility</label></gitem><gitem><def><p><termdef id="dt-interop" term="For interoperability">Marks
a sentence describing a non-binding recommendation included to increase
the chances that XML documents can be processed by the existing installed
base of SGML processors which predate the "WebSGML Adaptations Annex to ISO 879.</termdef></p></def><label>for interoperability</label></gitem></glist><rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><rfc2119>REQUIRED</rfc2119><rfc2119>SHALL</rfc2119><rfc2119>SHALL NOT</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD NOT</rfc2119><rfc2119>RECOMMENDED</rfc2119><rfc2119>MAY</rfc2119><rfc2119>OPTIONAL</rfc2119><rfc2119>EMPHASIZED</rfc2119></p></div2><head>Introduction</head><p>Extensible Markup Language, abbreviated XML, describes a class of data
objects called<bibref ref="ISO8879" /><termref def="dt-xml-doc">XML documents</termref></p><p>XML documents are made up of storage units called<termref def="dt-entity">entities</termref><termref def="dt-character">characters</termref><termref def="dt-chardata">character
data</termref><termref def="dt-markup">markup</termref></p><p><termdef id="dt-xml-proc" term="XML Processor">A software module called
an<term>XML processor</term></termdef><termdef id="dt-app" term="Application">It
is assumed that an XML processor is doing its work on behalf of another module,
called the<term>application</term></termdef></p></div1><div1 id="sec-documents"><div2 id="sec-well-formed"><head>Well-Formed XML Documents</head><olist><item><p>Taken as a whole, it matches the production labeled<nt def="NT-document">document</nt></p></item><item><p>It meets all the well-formedness constraints given in this specification.</p></item><item><p>Each of the<termref def="dt-parsedent">parsed entities</termref><termref def="dt-wellformed">well-formed</termref></p></item></olist><olist><item><p>It contains one or more<termref def="dt-element">elements</termref></p></item><item><p><termdef id="dt-root" term="Root Element">There is exactly one element,
called the<term>root</term><termref def="dt-content">content</termref></termdef><termref def="dt-stag">start-tag</termref><termref def="dt-etag">end-tag</termref></p></item></olist><p><termdef id="dt-wellformed" term="Well-Formed">A textual object is a<term>well-formed</term></termdef></p><p>Matching the<nt def="NT-document">document</nt></p><p><termdef id="dt-parentchild" term="Parent/Child">As a consequence of this,
for each non-root element<el>C</el><el>P</el><el>C</el><el>P</el><el>P</el><el>P</el><el>C</el><el>C</el><el>P</el><term>parent</term><term>child</term></termdef></p><scrap id="document" lang="ebnf"><head>Document</head><prod id="NT-document" num="1"><lhs>document</lhs><rhs><nt def="NT-prolog">prolog</nt><nt def="NT-element">element</nt><nt def="NT-Misc">Misc</nt></rhs></prod></scrap></div2><div2 id="charsets"><head>Characters</head><note><eg>[#x7F-#x84], [#x86-#x9F], [#xFDD0-#xFD<phrase diff="chg"><loc href="E02" role="erratumref" /></phrase></eg><p>Document authors are encouraged to avoid<bibref ref="Unicode" /><phrase diff="chg"><loc href="E11" role="erratumref" /></phrase><phrase diff="del"><bibref ref="Unicode3" /><loc href="E11" role="erratumref" /></phrase><quote>compatibility characters</quote></p></note><p><termdef id="dt-text" term="Text">A parsed entity contains<term>text</term><termref def="dt-character">characters</termref></termdef><termdef id="dt-character" term="Character">A<bibref ref="ISO10646" /><nt def="NT-Char">Char</nt><rfc2119>MUST</rfc2119><specref ref="sec-existing-stds" /><term>character</term></termdef></p><p>The mechanism for encoding character code points into bit patterns may
vary from entity to entity. All XML processors<phrase diff="del"><loc href="E11" role="erratumref" /></phrase><phrase diff="chg"><bibref ref="Unicode" /><loc href="E11" role="erratumref" /></phrase><rfc2119>MUST</rfc2119><specref ref="charencoding" /></p><scrap id="char32" lang="ebnf"><head>Character Range</head><prodgroup pcw2="4" pcw4="17.5" pcw5="11"><prod id="NT-Char" num="2"><com>any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.</com><lhs>Char</lhs><rhs>#x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]</rhs></prod></prodgroup></scrap></div2><div2 id="sec-common-syn"><head>Common Syntactic Constructs</head><note><p>The presence of #xD in the above production is
	maintained purely for backward compatibility with the<loc href="http://www.w3.org/TR/1998/REC-xml-19980210">First Edition</loc><specref ref="sec-line-ends" /></p></note><note><p>The
Namespaces in XML Recommendation<bibref ref="xml-names" /></p></note><note><p>The<nt def="NT-Names">Names</nt><nt def="NT-Nmtokens">Nmtokens</nt><specref ref="sec-attribute-types" /></p></note><note><p>Although
the<code>&lt;</code><code>&lt;!ENTITY mylt "&lt;"&gt;</code><nt def="NT-EntityValue">EntityValue</nt></p></note><p>This section defines some symbols used widely in the grammar.</p><p><nt def="NT-S">S</nt></p><p diff="del"><loc href="E09" role="erratumref" /><specref ref="CharClasses" /></p><p>An<nt def="NT-Nmtoken">Nmtoken</nt></p><p diff="del"><loc href="E09" role="erratumref" /><termdef id="dt-name-x" term="Name">A<term>Name</term></termdef></p><p diff="add"><loc href="E09" role="erratumref" /><nt def="NT-Name">Names</nt><termdef id="dt-name" term="Name">A<nt def="NT-Name">Name</nt><nt def="NT-Nmtoken">Nmtoken</nt></termdef></p><p>Names beginning with the string<code>(('X'|'x') ('M'|'m') ('L'|'l'))</code><quote><code>xml</code></quote></p><p diff="add"><loc href="E09" role="erratumref" /><nt def="NT-Name">Name</nt><nt def="NT-NameStartChar">NameStartChar</nt><nt def="NT-NameChar">NameChars</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><specref ref="sec-suggested-names" /></p><p diff="add"><loc href="E09" role="erratumref" /></p><p diff="add"><emph>cannot</emph><loc href="E09" role="erratumref" /></p><p>Literal data is any quoted string not containing the quotation mark used
as a delimiter for that string. Literals are used for specifying the content
of internal entities (<nt def="NT-EntityValue">EntityValue</nt><nt def="NT-AttValue">AttValue</nt><nt def="NT-SystemLiteral">SystemLiteral</nt><nt def="NT-SystemLiteral">SystemLiteral</nt></p><scrap id="white" lang="ebnf"><head>White Space</head><prodgroup pcw2="4" pcw4="17.5" pcw5="11"><prod id="NT-S" num="3"><lhs>S</lhs><rhs>(#x20 | #x9 | #xD | #xA)+</rhs></prod></prodgroup></scrap><scrap lang="ebnf"><head>Names and Tokens</head><prod id="NT-NameStartChar" num="4"><com diff="chg"><loc href="E09" role="erratumref" /></com><lhs diff="chg">NameStartChar</lhs><rhs diff="chg">":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]</rhs></prod><prod diff="add" id="NT-NameChar" num="4a"><com diff="add"><loc href="E09" role="erratumref" /></com><lhs>NameChar</lhs><rhs><nt def="NT-NameStartChar">NameStartChar</nt></rhs></prod><prod id="NT-Name" num="5"><com diff="chg"><loc href="E09" role="erratumref" /></com><lhs>Name</lhs><rhs diff="chg"><nt def="NT-NameStartChar">NameStartChar</nt><nt def="NT-NameChar">NameChar</nt></rhs></prod><prod id="NT-Names" num="6"><lhs>Names</lhs><rhs><nt def="NT-Name">Name</nt><nt def="NT-Name">Name</nt></rhs></prod><prod id="NT-Nmtoken" num="7"><lhs>Nmtoken</lhs><rhs>(<nt def="NT-NameChar">NameChar</nt></rhs></prod><prod id="NT-Nmtokens" num="8"><lhs>Nmtokens</lhs><rhs><nt def="NT-Nmtoken">Nmtoken</nt><nt def="NT-Nmtoken">Nmtoken</nt></rhs></prod></scrap><scrap lang="ebnf"><head>Literals</head><prod id="NT-EntityValue" num="9"><lhs>EntityValue</lhs><rhs>'"' ([^%&amp;"] |<nt def="NT-PEReference">PEReference</nt><nt def="NT-Reference">Reference</nt></rhs><rhs>|  "'" ([^%&amp;'] |<nt def="NT-PEReference">PEReference</nt><nt def="NT-Reference">Reference</nt></rhs></prod><prod id="NT-AttValue" num="10"><lhs>AttValue</lhs><rhs>'"' ([^&lt;&amp;"] |<nt def="NT-Reference">Reference</nt></rhs><rhs>|  "'" ([^&lt;&amp;'] |<nt def="NT-Reference">Reference</nt></rhs></prod><prod id="NT-SystemLiteral" num="11"><lhs>SystemLiteral</lhs><rhs>('"' [^"]* '"') | ("'" [^']* "'")</rhs></prod><prod id="NT-PubidLiteral" num="12"><lhs>PubidLiteral</lhs><rhs>'"'<nt def="NT-PubidChar">PubidChar</nt><nt def="NT-PubidChar">PubidChar</nt></rhs></prod><prod id="NT-PubidChar" num="13"><lhs>PubidChar</lhs><rhs>#x20 | #xD | #xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]</rhs></prod></scrap></div2><div2 id="syntax"><head>Character Data and Markup</head><p><termdef id="dt-markup" term="Markup"><nt def="NT-XMLDecl">XML declarations</nt><nt def="NT-TextDecl">text declarations</nt><term>Markup</term><termref def="dt-stag">start-tags</termref><termref def="dt-etag">end-tags</termref><termref def="dt-empty">empty-element tags</termref><termref def="dt-entref">entity references</termref><termref def="dt-charref">character
references</termref><termref def="dt-comment">comments</termref><termref def="dt-cdsection">CDATA section</termref><termref def="dt-doctype">document
type declarations</termref><termref def="dt-pi">processing instructions</termref></termdef><termref def="dt-text">Text</termref><termref def="dt-chardata">character data</termref></p><p><termdef id="dt-chardata" term="Character Data">All text that is not markup
constitutes the<term>character data</term></termdef></p><p>The ampersand character (&amp;) and the left angle bracket (&lt;)<quote><code>&amp;amp;</code></quote><quote><code>&amp;lt;</code></quote><quote><code>&amp;gt;</code></quote><quote><code>&amp;gt;</code></quote><quote><code>]]&gt;</code></quote><rfc2119>MUST NOT</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-comment">comment</termref><termref def="dt-pi">processing
instruction</termref><termref def="dt-cdsection">CDATA section</termref><termref def="dt-escape">escaped</termref><termref def="dt-charref">numeric character references</termref><termref def="dt-compat">for compatibility</termref><termref def="dt-cdsection">CDATA
section</termref></p><p>In the content of elements, character data is any string of characters
which does not contain the start-delimiter of any markup and does not include the CDATA-section-close
delimiter,<quote><code>]]&gt;</code></quote><quote><code>]]&gt;</code></quote></p><p>To allow attribute values to contain both single and double quotes, the
apostrophe or single-quote character (') may be represented as<quote><code>&amp;apos;</code></quote><quote><code>&amp;quot;</code></quote></p><scrap lang="ebnf"><head>Character Data</head><prod id="NT-CharData" num="14"><lhs>CharData</lhs><rhs>[^&lt;&amp;]* - ([^&lt;&amp;]* ']]&gt;' [^&lt;&amp;]*)</rhs></prod></scrap></div2><div2 id="sec-comments"><eg>&lt;!-- declarations for &lt;head&gt; &amp; &lt;body&gt; --&gt;</eg><eg>&lt;!-- B+, B, or B---&gt;</eg><head>Comments</head><p><rfc2119>MUST NOT</rfc2119><termdef id="dt-comment" term="Comment"><quote><code>--</code></quote><rfc2119>MAY</rfc2119><rfc2119>MUST NOT</rfc2119><term>Comments</term><termref def="dt-markup">markup</termref><termref def="dt-chardata">character
data</termref><termref def="dt-compat">For
compatibility</termref></termdef></p><p>An example of a comment:</p><p>Note
that the grammar does not allow a comment ending in<code>---&gt;</code><emph>not</emph></p><scrap lang="ebnf"><head>Comments</head><prod id="NT-Comment" num="15"><lhs>Comment</lhs><rhs>'&lt;!--' ((<nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt></rhs></prod></scrap></div2><div2 id="sec-pi"><head>Processing Instructions</head><p><termdef id="dt-pi" term="Processing instruction"><term>Processing instructions</term></termdef></p><p>PIs are not part of the document's<nt def="NT-PITarget">PITarget</nt><quote><code>XML</code></quote><quote><code>xml</code></quote><rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><termref def="dt-chardata">character
data</termref><termref def="dt-notation">Notation</termref></p><scrap lang="ebnf"><head>Processing Instructions</head><prod id="NT-PI" num="16"><lhs>PI</lhs><rhs>'&lt;?'<nt def="NT-PITarget">PITarget</nt><nt def="NT-S">S</nt><nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt></rhs></prod><prod id="NT-PITarget" num="17"><lhs>PITarget</lhs><rhs><nt def="NT-Name">Name</nt></rhs></prod></scrap></div2><div2 id="sec-cdata-sect"><eg>&lt;![CDATA[&lt;greeting&gt;Hello, world!&lt;/greeting&gt;]]&gt;</eg><head>CDATA Sections</head><p><termdef id="dt-cdsection" term="CDATA Section"><quote><code>&lt;![CDATA[</code></quote><quote><code>]]&gt;</code></quote><term>CDATA sections</term></termdef></p><p>Within a CDATA section, only the<nt def="NT-CDEnd">CDEnd</nt><quote><code>&amp;lt;</code></quote><quote><code>&amp;amp;</code></quote></p><p>An example of a CDATA section, in which<quote><code>&lt;greeting&gt;</code></quote><quote><code>&lt;/greeting&gt;</code></quote><termref def="dt-chardata">character data</termref><termref def="dt-markup">markup</termref></p><scrap lang="ebnf"><head>CDATA Sections</head><prod id="NT-CDSect" num="18"><lhs>CDSect</lhs><rhs><nt def="NT-CDStart">CDStart</nt><nt def="NT-CData">CData</nt><nt def="NT-CDEnd">CDEnd</nt></rhs></prod><prod id="NT-CDStart" num="19"><lhs>CDStart</lhs><rhs>'&lt;![CDATA['</rhs></prod><prod id="NT-CData" num="20"><lhs>CData</lhs><rhs>(<nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt></rhs></prod><prod id="NT-CDEnd" num="21"><lhs>CDEnd</lhs><rhs>']]&gt;'</rhs></prod></scrap></div2><div2 id="sec-prolog-dtd"><eg>&lt;?xml version="1.0"?&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</eg><eg>&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</eg><eg>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE greeting SYSTEM "hello.dtd"&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</eg><eg>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE greeting [
  &lt;!ELEMENT greeting (#PCDATA)&gt;
]&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</eg><head>Prolog and Document Type Declaration</head><note diff="add"><p><loc href="E10" role="erratumref" /></p></note><p><termdef id="dt-xmldecl" term="XML Declaration">XML documents<rfc2119>SHOULD</rfc2119><term>XML declaration</term></termdef><termref def="dt-wellformed">well-formed</termref><termref def="dt-valid">valid</termref></p><p>and so is this:</p><p>The function of the markup in an XML document is to describe its storage and
logical structure and to associate attribute
name-value pairs with its logical structures. XML provides a mechanism, the<termdef id="dt-valid" term="Validity">An XML document is<term>valid</term></termdef><termref def="dt-doctype">document
type declaration</termref></p><p>The document type declaration<rfc2119>MUST</rfc2119><termref def="dt-element">element</termref></p><p diff="add"><loc href="E10" role="erratumref" /><nt def="NT-VersionNum">VersionNum</nt><rfc2119>SHOULD NOT</rfc2119></p><p><termdef id="dt-doctype" term="Document Type Declaration">The XML<term>document
type declaration</term><term>DTD</term><termref def="dt-markupdecl">markup
declarations</termref><termref def="dt-extent">external entity</termref></termdef></p><p><specref ref="sec-physical-struct" /><termdef id="dt-markupdecl" term="markup declaration">A<term>markup declaration</term><termref def="dt-eldecl">element type declaration</termref><termref def="dt-attdecl">attribute-list declaration</termref><termref def="dt-entdecl">entity
declaration</termref><termref def="dt-notdecl">notation declaration</termref></termdef><termref def="dt-PE">parameter
entities</termref></p><p>Note
that it is possible to construct a well-formed document containing a<nt def="NT-doctypedecl">doctypedecl</nt></p><p>The markup declarations may be made up in whole or in part of the<emph>after</emph><nt def="NT-elementdecl">elementdecl</nt><nt def="NT-AttlistDecl">AttlistDecl</nt><termref def="dt-repltext">replacement text</termref><termref def="dt-PE">parameter
entities</termref><termref def="dt-include">included</termref></p><p>Parameter
entity references are recognized anywhere in the DTD (internal and external
subsets and external parameter entities), except in literals, processing instructions,
comments, and the contents of ignored conditional sections (see<specref ref="sec-condition-sect" /></p><p>Like the internal subset, the external subset and any external parameter
entities referenced
in a<nt def="NT-DeclSep">DeclSep</nt><nt def="NT-markupdecl">markupdecl</nt><rfc2119>MUST</rfc2119><termref def="dt-PERef">parameter-entity references</termref><termref def="dt-cond-section">conditional section</termref></p><p>The external subset and external parameter entities also differ from the
internal subset in that in them,<emph>within</emph><emph>between</emph><termref def="dt-PERef">parameter-entity
references</termref></p><p>An example of an XML document with a document type declaration:</p><p>The<quote><code>hello.dtd</code></quote><termref def="dt-sysid">system identifier</termref></p><p>The declarations can also be given locally, as in this example:</p><p>If both the external and internal subsets are used, the internal subset<rfc2119>MUST</rfc2119></p><scrap id="xmldoc" lang="ebnf"><head>Prolog</head><prodgroup pcw2="6" pcw4="17.5" pcw5="9"><prod id="NT-prolog" num="22"><lhs>prolog</lhs><rhs><nt def="NT-XMLDecl">XMLDecl</nt><nt def="NT-Misc">Misc</nt><nt def="NT-doctypedecl">doctypedecl</nt><nt def="NT-Misc">Misc</nt></rhs></prod><prod id="NT-XMLDecl" num="23"><lhs>XMLDecl</lhs><rhs>'&lt;?xml'<nt def="NT-VersionInfo">VersionInfo</nt><nt def="NT-EncodingDecl">EncodingDecl</nt><nt def="NT-SDDecl">SDDecl</nt><nt def="NT-S">S</nt></rhs></prod><prod id="NT-VersionInfo" num="24"><lhs>VersionInfo</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-Eq">Eq</nt><nt def="NT-VersionNum">VersionNum</nt><nt def="NT-VersionNum">VersionNum</nt></rhs></prod><prod id="NT-Eq" num="25"><lhs>Eq</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-S">S</nt></rhs></prod><prod id="NT-VersionNum" num="26"><com diff="chg"><loc href="E10" role="erratumref" /></com><lhs>VersionNum</lhs><rhs diff="chg">'1.' [0-9]+</rhs></prod><prod id="NT-Misc" num="27"><lhs>Misc</lhs><rhs><nt def="NT-Comment">Comment</nt><nt def="NT-PI">PI</nt><nt def="NT-S">S</nt></rhs></prod></prodgroup></scrap><scrap id="dtd" lang="ebnf"><head>Document Type Definition</head><prodgroup pcw2="6" pcw4="17.5" pcw5="9"><prod id="NT-doctypedecl" num="28"><lhs>doctypedecl</lhs><rhs>'&lt;!DOCTYPE'<nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-ExternalID">ExternalID</nt><nt def="NT-S">S</nt><nt def="NT-intSubset">intSubset</nt><nt def="NT-S">S</nt></rhs><vc def="vc-roottype" /><wfc def="ExtSubset" /></prod><prod id="NT-DeclSep" num="28a"><lhs>DeclSep</lhs><rhs><nt def="NT-PEReference">PEReference</nt><nt def="NT-S">S</nt></rhs><wfc def="PE-between-Decls" /></prod><prod id="NT-intSubset" num="28b"><lhs>intSubset</lhs><rhs>(<nt def="NT-markupdecl">markupdecl</nt><nt def="NT-DeclSep">DeclSep</nt></rhs></prod><prod id="NT-markupdecl" num="29"><lhs>markupdecl</lhs><rhs><nt def="NT-elementdecl">elementdecl</nt><nt def="NT-AttlistDecl">AttlistDecl</nt><nt def="NT-EntityDecl">EntityDecl</nt><nt def="NT-NotationDecl">NotationDecl</nt><nt def="NT-PI">PI</nt><nt def="NT-Comment">Comment</nt></rhs><vc def="vc-PEinMarkupDecl" /><wfc def="wfc-PEinInternalSubset" /></prod></prodgroup></scrap><scrap id="ext-Subset" lang="ebnf"><head>External Subset</head><prodgroup pcw2="6" pcw4="17.5" pcw5="9"><prod id="NT-extSubset" num="30"><lhs>extSubset</lhs><rhs><nt def="NT-TextDecl">TextDecl</nt><nt def="NT-extSubsetDecl">extSubsetDecl</nt></rhs></prod><prod id="NT-extSubsetDecl" num="31"><lhs>extSubsetDecl</lhs><rhs>(<nt def="NT-markupdecl">markupdecl</nt><nt def="NT-conditionalSect">conditionalSect</nt><nt def="NT-DeclSep">DeclSep</nt></rhs></prod></prodgroup></scrap><vcnote id="vc-roottype"><head>Root Element Type</head><p>The<nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><termref def="dt-root">root element</termref></p></vcnote><vcnote id="vc-PEinMarkupDecl"><head>Proper Declaration/PE Nesting</head><p>Parameter-entity<nt def="NT-markupdecl">markupdecl</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-repltext">replacement text</termref><termref def="dt-PERef">parameter-entity
reference</termref></p></vcnote><wfcnote id="wfc-PEinInternalSubset"><head>PEs in Internal Subset</head><p>In
the internal DTD subset,<rfc2119>MUST NOT</rfc2119><termref def="dt-PERef">parameter-entity references</termref></p></wfcnote><wfcnote id="ExtSubset"><head>External Subset</head><p>The external subset, if any,<nt def="NT-extSubset">extSubset</nt><rfc2119>MUST</rfc2119></p></wfcnote><wfcnote id="PE-between-Decls"><head>PE Between Declarations</head><p>The replacement text of a parameter entity reference
in a<nt def="NT-DeclSep">DeclSep</nt><nt def="NT-extSubsetDecl">extSubsetDecl</nt><rfc2119>MUST</rfc2119></p></wfcnote></div2><div2 id="sec-rmd"><eg>&lt;?xml version="1.0" standalone='yes'?&gt;</eg><head>Standalone Document Declaration</head><p>Markup declarations can affect the content of the document, as passed from
an<termdef id="dt-extmkpdecl" term="External Markup Declaration">An<term>external
markup declaration</term></termdef><termref def="dt-xml-proc">XML processor</termref><termref def="dt-docent">document
entity</termref></p><p>In a standalone document declaration, the value<attval>yes</attval><attval>no</attval><emph>declarations</emph><emph>entities</emph><termref def="dt-extmkpdecl">external markup declarations</termref></p><p>If there are no external markup declarations, the standalone document declaration
has no meaning. If there are external markup declarations but there is no
standalone document declaration, the value<attval>no</attval></p><p>Any XML document for which<code>standalone="no"</code></p><p>An example XML declaration with a standalone document declaration:</p><scrap id="fulldtd" lang="ebnf"><head>Standalone Document Declaration</head><prodgroup pcw2="4" pcw4="19.5" pcw5="9"><prod id="NT-SDDecl" num="32"><lhs>SDDecl</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-Eq">Eq</nt></rhs><vc def="vc-check-rmd" /></prod></prodgroup></scrap><vcnote id="vc-check-rmd"><head>Standalone Document Declaration</head><p>The
standalone document declaration<attval>no</attval><rfc2119>MUST</rfc2119></p><ulist><item><p>attributes with<termref def="dt-default">default</termref></p></item><item><p>entities (other than<code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><termref def="dt-entref">references</termref></p></item><item><p>attributes with
tokenized types, where the
attribute appears in the document with a value such that<titleref href="#AVNormalize">normalization</titleref></p></item><item><p>element types with<termref def="dt-elemcontent">element content</termref></p></item></ulist></vcnote></div2><div2 id="sec-white-space"><eg>&lt;!ATTLIST poem  xml:space (default|preserve) 'preserve'&gt;

&lt;!ATTLIST pre xml:space (preserve) #FIXED 'preserve'&gt;</eg><head>White Space Handling</head><p>In editing XML documents, it is often convenient to use<quote>white space</quote><quote>significant</quote></p><p>An<rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-xml-proc">XML processor</termref><termref def="dt-validating">validating XML processor</termref><termref def="dt-elemcontent">element content</termref></p><p>A special<att>xml:space</att><attval>default</attval><attval>preserve</attval><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-attr">attribute</termref><termref def="dt-attdecl">declared</termref><termref def="dt-enumerated">enumerated
type</termref></p><p>The value<att>xml:space</att><att>xml:space</att><attval>default</attval><attval>preserve</attval><attval>default</attval><attval>preserve</attval><rfc2119>MAY</rfc2119><rfc2119>MAY</rfc2119></p><p>The<termref def="dt-root">root element</termref></p></div2><div2 id="sec-line-ends"><head>End-of-Line Handling</head><p>XML<termref def="dt-parsedent">parsed entities</termref></p><p>To
simplify the tasks of<rfc2119>MUST</rfc2119><termref def="dt-app">applications</termref><termref def="dt-xml-proc">XML
processor</termref></p></div2><div2 id="sec-lang-tag"><eg>&lt;p xml:lang="en"&gt;The quick brown fox jumps over the lazy dog.&lt;/p&gt;
&lt;p xml:lang="en-GB"&gt;What colour is it?&lt;/p&gt;
&lt;p xml:lang="en-US"&gt;What color is it?&lt;/p&gt;
&lt;sp who="Faust" desc='leise' xml:lang="de"&gt;
  &lt;l&gt;Habe nun, ach! Philosophie,&lt;/l&gt;
  &lt;l&gt;Juristerei, und Medizin&lt;/l&gt;
  &lt;l&gt;und leider auch Theologie&lt;/l&gt;
  &lt;l&gt;durchaus studiert mit heißem Bemüh'n.&lt;/l&gt;
&lt;/sp&gt;</eg><eg>xml:lang CDATA #IMPLIED</eg><eg>&lt;!ATTLIST poem   xml:lang CDATA 'fr'&gt;
&lt;!ATTLIST gloss  xml:lang CDATA 'en'&gt;
&lt;!ATTLIST note   xml:lang CDATA 'en'&gt;</eg><head>Language Identification</head><note><p>Language information may also be provided by external transport protocols (e.g. HTTP or
  MIME). When available, this information may be used by XML applications, but the more local
  information provided by<att>xml:lang</att></p></note><p>In document processing, it is often useful to identify the natural or formal
language in which the content is written. A special<att>xml:lang</att><bibref ref="RFC1766" /><phrase diff="del">, or its successor</phrase><rfc2119>MUST</rfc2119><termref def="dt-attr">attribute</termref><termref def="dt-attdecl">declared</termref><titleref>Tags
for the Identification of Languages</titleref></p><p>(Productions 33 through 38 have been removed.)</p><p>For example:</p><p>The language specified by<att>xml:lang</att><att>xml:lang</att><att>xml:lang</att><att>xml:lang</att><att>xml:lang</att><att>xml:lang</att></p><p>A simple declaration for<att>xml:lang</att></p><p>but specific default values may also be given, if appropriate. In a collection
of French poems for English students, with glosses and notes in English, the<att>xml:lang</att></p></div2><head>Documents</head><p><termdef id="dt-xml-doc" term="XML Document">A data object is an<term>XML
document</term><termref def="dt-wellformed">well-formed</termref><termref def="dt-valid">valid</termref></termdef></p><p>Each XML document has both a logical and a physical structure. Physically,
the document is composed of units called<quote>root</quote><rfc2119>MUST</rfc2119><specref ref="wf-entities" /><termref def="dt-entity">entities</termref><termref def="dt-entref">refer</termref><termref def="dt-docent">document entity</termref></p></div1><div1 id="sec-logical-struct"><div2 id="sec-starttags"><eg>&lt;termdef id="dt-dog" term="dog"&gt;</eg><eg>&lt;/termdef&gt;</eg><eg>&lt;IMG align="left"
 src="http://www.w3.org/Icons/WWW/w3c_home" /&gt;
&lt;br&gt;&lt;/br&gt;
&lt;br/&gt;</eg><head>Start-Tags, End-Tags, and Empty-Element Tags</head><p><termdef id="dt-stag" term="Start-Tag">The beginning of every non-empty
XML element is marked by a<term>start-tag</term></termdef></p><p>The<nt def="NT-Name">Name</nt><term>type</term><termdef id="dt-attr" term="Attribute">The<nt def="NT-Name">Name</nt><nt def="NT-AttValue">AttValue</nt><term>attribute specifications</term></termdef><termdef id="dt-attrname" term="Attribute Name">with the<nt def="NT-Name">Name</nt><term>attribute name</term></termdef><termdef id="dt-attrval" term="Attribute Value">the content of the<code>'</code><code>"</code><nt def="NT-AttValue">AttValue</nt><term>attribute value</term></termdef></p><p>An example of a start-tag:</p><p><termdef id="dt-etag" term="End Tag">The end of every element that begins
with a start-tag<rfc2119>MUST</rfc2119><term>end-tag</term></termdef></p><p>An example of an end-tag:</p><p><termdef id="dt-content" term="Content">The<term>content</term><termref def="dt-text">text</termref></termdef></p><p><termdef id="dt-empty" term="Empty">An element
with no<nt def="NT-content">content</nt><term>empty</term></termdef><termdef id="dt-eetag" term="empty-element tag">An<term>empty-element
tag</term></termdef></p><p>Empty-element tags may be used for any element which has no content, whether
or not it is declared using the keyword<kw>EMPTY</kw><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><termref def="dt-interop">For
interoperability</termref></p><p>Examples of empty elements:</p><scrap lang="ebnf"><head>Start-tag</head><prodgroup pcw2="6" pcw4="15" pcw5="11.5"><prod id="NT-STag" num="40"><lhs>STag</lhs><rhs>'&lt;'<nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-Attribute">Attribute</nt><nt def="NT-S">S</nt></rhs><wfc def="uniqattspec" /></prod><prod id="NT-Attribute" num="41"><lhs>Attribute</lhs><rhs><nt def="NT-Name">Name</nt><nt def="NT-Eq">Eq</nt><nt def="NT-AttValue">AttValue</nt></rhs><vc def="ValueType" /><wfc def="NoExternalRefs" /><wfc def="CleanAttrVals" /></prod></prodgroup></scrap><scrap lang="ebnf"><head>End-tag</head><prodgroup pcw2="6" pcw4="15" pcw5="11.5"><prod id="NT-ETag" num="42"><lhs>ETag</lhs><rhs>'&lt;/'<nt def="NT-Name">Name</nt><nt def="NT-S">S</nt></rhs></prod></prodgroup></scrap><scrap lang="ebnf"><head>Content of Elements</head><prodgroup pcw2="6" pcw4="15" pcw5="11.5"><prod id="NT-content" num="43"><lhs>content</lhs><rhs><nt def="NT-CharData">CharData</nt><nt def="NT-element">element</nt><nt def="NT-Reference">Reference</nt><nt def="NT-CDSect">CDSect</nt><nt def="NT-PI">PI</nt><nt def="NT-Comment">Comment</nt><nt def="NT-CharData">CharData</nt></rhs></prod></prodgroup></scrap><scrap lang="ebnf"><head>Tags for Empty Elements</head><prodgroup pcw2="6" pcw4="15" pcw5="11.5"><prod id="NT-EmptyElemTag" num="44"><lhs>EmptyElemTag</lhs><rhs>'&lt;'<nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-Attribute">Attribute</nt><nt def="NT-S">S</nt></rhs><wfc def="uniqattspec" /></prod></prodgroup></scrap><vcnote id="ValueType"><head>Attribute Value Type</head><p>The attribute<rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><specref ref="attdecls" /></p></vcnote><wfcnote id="uniqattspec"><head>Unique Att Spec</head><p>An attribute name<rfc2119>MUST NOT</rfc2119></p></wfcnote><wfcnote id="NoExternalRefs"><head>No External Entity References</head><p>Attribute
values<rfc2119>MUST NOT</rfc2119></p></wfcnote><wfcnote id="CleanAttrVals"><head>No<code>&lt;</code></head><p>The<code>&lt;</code><rfc2119>MUST NOT</rfc2119><termref def="dt-repltext">replacement text</termref></p></wfcnote></div2><div2 id="elemdecls"><div3 id="sec-element-content"><eg>&lt;!ELEMENT spec (front, body, back?)&gt;
&lt;!ELEMENT div1 (head, (p | list | note)*, div2*)&gt;
&lt;!ELEMENT dictionary-body (%div.mix; | %dict.mix;)*&gt;</eg><head>Element Content</head><p><nt def="NT-cp">cp</nt><termdef id="dt-elemcontent" term="Element content">An element<nt def="NT-S">S</nt><rfc2119>MUST</rfc2119><term>element content</term><termref def="dt-stag">type</termref><termref def="dt-parentchild">child</termref></termdef><termdef id="dt-content-model" term="Content model">In this case, the constraint includes a<term>content
model</term></termdef></p><p>where each<code>+</code><code>*</code><code>?</code><nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-parentchild">child</termref><termref def="dt-elemcontent">element
content</termref><termref def="dt-elemcontent">element content</termref></p><p>The content of an element matches a content model if and only if it is
possible to trace out a path through the content model, obeying the sequence,
choice, and repetition operators and matching each element in the content
against an element type in the content model.<specref ref="determinism" /><termref def="dt-compat">For
compatibility</termref></p><p>Examples of element-content models:</p><scrap lang="ebnf"><head>Element-content Models</head><prodgroup pcw2="5.5" pcw4="16" pcw5="11"><prod id="NT-children" num="47"><lhs>children</lhs><rhs>(<nt def="NT-choice">choice</nt><nt def="NT-seq">seq</nt></rhs></prod><prod id="NT-cp" num="48"><lhs>cp</lhs><rhs>(<nt def="NT-Name">Name</nt><nt def="NT-choice">choice</nt><nt def="NT-seq">seq</nt></rhs></prod><prod id="NT-choice" num="49"><lhs>choice</lhs><rhs>'('<nt def="NT-S">S</nt><nt def="NT-cp">cp</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-cp">cp</nt><nt def="NT-S">S</nt></rhs><vc def="vc-PEinGroup" /></prod><prod id="NT-seq" num="50"><lhs>seq</lhs><rhs>'('<nt def="NT-S">S</nt><nt def="NT-cp">cp</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-cp">cp</nt><nt def="NT-S">S</nt></rhs><vc def="vc-PEinGroup" /></prod></prodgroup></scrap><vcnote id="vc-PEinGroup"><head>Proper Group/PE Nesting</head><p>Parameter-entity<nt def="NT-choice">choice</nt><nt def="NT-seq">seq</nt><nt def="NT-Mixed">Mixed</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-repltext">replacement text</termref><termref def="dt-PERef">parameter
entity</termref></p><p><code>|</code><code>,</code><nt def="NT-choice">choice</nt><nt def="NT-seq">seq</nt><nt def="NT-Mixed">Mixed</nt><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><termref def="dt-interop">For interoperability</termref></p></vcnote></div3><div3 id="sec-mixed-content"><eg>&lt;!ELEMENT p (#PCDATA|a|ul|b|i|em)*&gt;
&lt;!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* &gt;
&lt;!ELEMENT b (#PCDATA)&gt;</eg><head>Mixed Content</head><p><termdef id="dt-mixed" term="Mixed Content">An element<term>mixed content</term><termref def="dt-stag">type</termref><termref def="dt-parentchild">child</termref></termdef></p><p>where the<kw>#PCDATA</kw><nt def="NT-Name">Name</nt><quote>parsed
character data.</quote></p><p>Examples of mixed content declarations:</p><scrap lang="ebnf"><head>Mixed-content Declaration</head><prodgroup pcw2="5.5" pcw4="16" pcw5="11"><prod id="NT-Mixed" num="51"><lhs>Mixed</lhs><rhs>'('<nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt></rhs><rhs>| '('<nt def="NT-S">S</nt><nt def="NT-S">S</nt></rhs><vc def="vc-PEinGroup" /><vc def="vc-MixedChildrenUnique" /></prod></prodgroup></scrap><vcnote id="vc-MixedChildrenUnique"><head>No Duplicate Types</head><p>The
same name<rfc2119>MUST NOT</rfc2119></p></vcnote></div3><eg>&lt;!ELEMENT br EMPTY&gt;
&lt;!ELEMENT p (#PCDATA|emph)* &gt;
&lt;!ELEMENT %name.para; %content.para; &gt;
&lt;!ELEMENT container ANY&gt;</eg><head>Element Type Declarations</head><p>The<termref def="dt-element">element</termref><termref def="dt-xml-doc">XML document</termref><termref def="dt-valid">validation</termref><termref def="dt-content">content</termref></p><p>Element type declarations often constrain which element types can appear
as<rfc2119>MAY</rfc2119><termref def="dt-parentchild">children</termref></p><p><termdef id="dt-eldecl" term="Element Type declaration">An<term>element
type declaration</term></termdef></p><p>where the<nt def="NT-Name">Name</nt></p><p>Examples of element type declarations:</p><scrap lang="ebnf"><head>Element Type Declaration</head><prodgroup pcw2="5.5" pcw4="18" pcw5="9"><prod id="NT-elementdecl" num="45"><lhs>elementdecl</lhs><rhs>'&lt;!ELEMENT'<nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-contentspec">contentspec</nt><nt def="NT-S">S</nt></rhs><vc def="EDUnique" /></prod><prod id="NT-contentspec" num="46"><lhs>contentspec</lhs><rhs>'EMPTY' | 'ANY' |<nt def="NT-Mixed">Mixed</nt><nt def="NT-children">children</nt></rhs></prod></prodgroup></scrap><vcnote id="EDUnique"><head>Unique Element Type Declaration</head><p>An element type<rfc2119>MUST NOT</rfc2119></p></vcnote></div2><div2 id="attdecls"><div3 id="sec-attribute-types"><head>Attribute Types</head><p>XML attribute types are of three kinds: a string type, a set of tokenized
types, and enumerated types. The string type may take any literal string as
a value; the tokenized types are more constrained.
The validity constraints noted in the grammar are applied after the attribute
value has been normalized as described in<specref ref="AVNormalize" /></p><p><rfc2119>MUST</rfc2119><termdef id="dt-enumerated" term="Enumerated Attribute Values"><term>Enumerated attributes</term></termdef></p><p>A<kw>NOTATION</kw><termref def="dt-notation">notation</termref></p><p><nt def="NT-Nmtoken">Nmtoken</nt><rfc2119>SHOULD NOT</rfc2119><termref def="dt-interop">For interoperability,</termref></p><scrap lang="ebnf"><head>Attribute Types</head><prodgroup pcw4="14" pcw5="11.5"><prod id="NT-AttType" num="54"><lhs>AttType</lhs><rhs><nt def="NT-StringType">StringType</nt><nt def="NT-TokenizedType">TokenizedType</nt><nt def="NT-EnumeratedType">EnumeratedType</nt></rhs></prod><prod id="NT-StringType" num="55"><lhs>StringType</lhs><rhs>'CDATA'</rhs></prod><prod id="NT-TokenizedType" num="56"><lhs>TokenizedType</lhs><rhs>'ID'</rhs><rhs>| 'IDREF'</rhs><rhs>| 'IDREFS'</rhs><rhs>| 'ENTITY'</rhs><rhs>| 'ENTITIES'</rhs><rhs>| 'NMTOKEN'</rhs><rhs>| 'NMTOKENS'</rhs><vc def="id" /><vc def="one-id-per-el" /><vc def="id-default" /><vc def="idref" /><vc def="idref" /><vc def="entname" /><vc def="entname" /><vc def="nmtok" /><vc def="nmtok" /></prod></prodgroup></scrap><scrap lang="ebnf"><head>Enumerated Attribute Types</head><prod id="NT-EnumeratedType" num="57"><lhs>EnumeratedType</lhs><rhs><nt def="NT-NotationType">NotationType</nt><nt def="NT-Enumeration">Enumeration</nt></rhs></prod><prod id="NT-NotationType" num="58"><lhs>NotationType</lhs><rhs>'NOTATION'<nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt></rhs><vc def="notatn" /><vc def="OneNotationPer" /><vc def="NoNotationEmpty" /><vc def="NoDuplicateTokens" /></prod><prod id="NT-Enumeration" num="59"><lhs>Enumeration</lhs><rhs>'('<nt def="NT-S">S</nt><nt def="NT-Nmtoken">Nmtoken</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Nmtoken">Nmtoken</nt><nt def="NT-S">S</nt></rhs><vc def="enum" /><vc def="NoDuplicateTokens" /></prod></scrap><vcnote id="id"><head>ID</head><p>Values of type<kw>ID</kw><nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="one-id-per-el"><head>One ID per Element Type</head><p>An element type<rfc2119>MUST NOT</rfc2119></p></vcnote><vcnote id="id-default"><head>ID Attribute Default</head><p>An ID attribute<kw>#IMPLIED</kw><kw>#REQUIRED</kw><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="idref"><head>IDREF</head><p>Values of type<kw>IDREF</kw><kw>IDREFS</kw><kw>IDREF</kw><nt def="NT-Name">Name</nt><nt def="NT-Names">Names</nt><nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="entname"><head>Entity Name</head><p>Values of type<kw>ENTITY</kw><kw>ENTITIES</kw><nt def="NT-Name">Name</nt><nt def="NT-Names">Names</nt><nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-unparsed">unparsed entity</termref><termref def="dt-doctype">DTD</termref></p></vcnote><vcnote id="nmtok"><head>Name Token</head><p>Values of type<kw>NMTOKEN</kw><kw>NMTOKENS</kw><nt def="NT-Nmtoken">Nmtoken</nt><nt def="NT-Nmtokens">Nmtokens</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="notatn"><head>Notation Attributes</head><p>Values of this type<rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><titleref href="#Notations">notation</titleref></p></vcnote><vcnote id="OneNotationPer"><head>One Notation Per Element Type</head><p>An element type<kw>NOTATION</kw><rfc2119>MUST NOT</rfc2119></p></vcnote><vcnote id="NoNotationEmpty"><head>No Notation on Empty Element</head><p><kw>NOTATION</kw><kw>EMPTY</kw><rfc2119>MUST NOT</rfc2119><termref def="dt-compat">For compatibility</termref></p></vcnote><vcnote id="NoDuplicateTokens"><head>No Duplicate Tokens</head><p>The notation names in a single<nt def="NT-NotationType">NotationType</nt><nt def="NT-Nmtoken">NmToken</nt><nt def="NT-Enumeration">Enumeration</nt><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="enum"><head>Enumeration</head><p>Values of this type<nt def="NT-Nmtoken">Nmtoken</nt><rfc2119>MUST</rfc2119></p></vcnote></div3><div3 id="sec-attr-defaults"><eg>&lt;!ATTLIST termdef
          id      ID      #REQUIRED
          name    CDATA   #IMPLIED&gt;
&lt;!ATTLIST list
          type    (bullets|ordered|glossary)  "ordered"&gt;
&lt;!ATTLIST form
          method  CDATA   #FIXED "POST"&gt;</eg><head>Attribute Defaults</head><p>An<rfc2119>REQUIRED</rfc2119><termref def="dt-attdecl">attribute declaration</termref></p><p>In an attribute declaration,<kw>#REQUIRED</kw><kw>#IMPLIED</kw><rfc2119>MUST</rfc2119><termdef id="dt-default" term="Attribute Default">If
the declaration is neither<kw>#REQUIRED</kw><kw>#IMPLIED</kw><kw>#FIXED</kw><nt def="NT-AttValue">AttValue</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><term>default</term></termdef></p><p>Examples of attribute-list declarations:</p><scrap lang="ebnf"><head>Attribute Defaults</head><prodgroup pcw4="14" pcw5="11.5"><prod id="NT-DefaultDecl" num="60"><lhs>DefaultDecl</lhs><rhs>'#REQUIRED' | '#IMPLIED'</rhs><rhs>| (('#FIXED'<nt def="NT-S">S</nt><nt def="NT-AttValue">AttValue</nt></rhs><vc def="RequiredAttr" /><vc def="defattrvalid" /><vc def="FixedAttr" /><wfc def="CleanAttrVals" /><wfc def="NoExternalRefs" /></prod></prodgroup></scrap><vcnote id="RequiredAttr"><head>Required Attribute</head><p>If the default
declaration is the keyword<kw>#REQUIRED</kw><rfc2119>MUST</rfc2119></p></vcnote><vcnote id="defattrvalid"><head>Attribute Default Value Syntactically Correct</head><p>The declared default value<rfc2119>MUST</rfc2119></p><p>Note that only the
syntactic constraints of the type are required here; other constraints (e.g.
that the value be the name of a declared unparsed entity, for an attribute of
type ENTITY) will be reported by a validating
parser only if an element without a specification for this attribute
actually occurs.</p><ulist><item><p>of type IDREF or ENTITY must match the<nt def="NT-Name">Name</nt></p></item><item><p>of type IDREFS or ENTITIES must match the<nt def="NT-Names">Names</nt></p></item><item><p>of type NMTOKEN must match the<nt def="NT-Nmtoken">Nmtoken</nt></p></item><item><p>of type NMTOKENS must match the<nt def="NT-Nmtokens">Nmtokens</nt></p></item><item><p>of an<nt def="NT-EnumeratedType">enumerated type</nt><nt def="NT-NotationType">NOTATION</nt><nt def="NT-Enumeration">enumeration</nt></p></item></ulist></vcnote><vcnote id="FixedAttr"><head>Fixed Attribute Default</head><p>If an attribute
has a default value declared with the<kw>#FIXED</kw><rfc2119>MUST</rfc2119></p></vcnote></div3><div3 id="AVNormalize"><eg>&lt;!ENTITY d "&amp;#xD;"&gt;
&lt;!ENTITY a "&amp;#xA;"&gt;
&lt;!ENTITY da "&amp;#xD;&amp;#xA;"&gt;</eg><head>Attribute-Value Normalization</head><olist><item><p>All line breaks<rfc2119>MUST</rfc2119><specref ref="sec-line-ends" /></p></item><item><p>Begin with a normalized value consisting of the empty string.</p></item><item><p>For each character, entity reference, or character reference in the
unnormalized attribute value, beginning with the first and continuing to the
last, do the following:</p><ulist><item><p>For a character reference, append the referenced character to the
normalized value.</p></item><item><p>For an entity reference, recursively apply step 3 of this algorithm
to the replacement text of the entity.</p></item><item><p>For a white space character (#x20, #xD, #xA, #x9), append a space
character (#x20) to the normalized value.</p></item><item><p>For another character, append the character to the normalized value.</p></item></ulist></item></olist><p>Before the value of an attribute is passed to the application or checked
for validity, the XML processor<rfc2119>MUST</rfc2119></p><p>If the attribute type is not CDATA, then the XML processor<rfc2119>MUST</rfc2119></p><p>Note that if the unnormalized attribute value contains a character reference
to a white space character other than space (#x20), the normalized value contains
the referenced character itself (#xD, #xA or #x9). This contrasts with the
case where the unnormalized value contains a white space character (not a
reference), which is replaced with a space character (#x20) in the normalized
value and also contrasts with the case where the unnormalized value contains
an entity reference whose replacement text contains a white space character;
being recursively processed, the white space character is replaced with a
space character (#x20) in the normalized value.</p><p>All attributes for which no declaration has been read<kw>CDATA</kw><rfc2119>SHOULD</rfc2119></p><p>It is an error if an<termref def="dt-attrval">attribute
value</termref><termref def="dt-entref">reference</termref></p><p>Following are examples of attribute normalization. Given the following
declarations:</p><p>the attribute specifications in the left column below would be normalized
to the character sequences of the middle column if the attribute<att>a</att><att>a</att><kw>NMTOKENS</kw><kw>CDATA</kw></p><p>Note that the last example is invalid (but well-formed) if<att>a</att><kw>NMTOKENS</kw></p><table border="1" frame="border"><tbody><tr><td><eg>a="

xyz"</eg></td><td><eg>x y z</eg></td><td><eg>#x20 #x20 x y z</eg></td></tr><tr><td><eg>a="&amp;d;&amp;d;A&amp;a;&amp;#x20;&amp;a;B&amp;da;"</eg></td><td><eg>A #x20 B</eg></td><td><eg>#x20 #x20 A #x20 #x20 #x20 B #x20 #x20</eg></td></tr><tr><td><eg>a=
"&amp;#xd;&amp;#xd;A&amp;#xa;&amp;#xa;B&amp;#xd;&amp;#xa;"</eg></td><td><eg>#xD #xD A #xA #xA B #xD #xA</eg></td><td><eg>#xD #xD A #xA #xA B #xD #xA</eg></td></tr></tbody><thead><tr><th>Attribute specification</th><th>a is NMTOKENS</th><th>a is CDATA</th></tr></thead></table></div3><head>Attribute-List Declarations</head><p><rfc2119>MUST NOT</rfc2119><specref ref="sec-starttags" /><termref def="dt-attr">Attributes</termref><termref def="dt-element">elements</termref><termref def="dt-stag">start-tags</termref><termref def="dt-eetag">empty-element tags</termref></p><p><termdef id="dt-attdecl" term="Attribute-List Declaration"><term>Attribute-list
declarations</term></termdef></p><p>The<nt def="NT-Name">Name</nt><nt def="NT-AttlistDecl">AttlistDecl</nt><nt def="NT-Name">Name</nt><nt def="NT-AttDef">AttDef</nt><rfc2119>MAY</rfc2119></p><p>When more than one<nt def="NT-AttlistDecl">AttlistDecl</nt><rfc2119>MAY</rfc2119><termref def="dt-interop">For interoperability,</termref></p><scrap lang="ebnf"><head>Attribute-list Declaration</head><prod id="NT-AttlistDecl" num="52"><lhs>AttlistDecl</lhs><rhs>'&lt;!ATTLIST'<nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-AttDef">AttDef</nt><nt def="NT-S">S</nt></rhs></prod><prod id="NT-AttDef" num="53"><lhs>AttDef</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-AttType">AttType</nt><nt def="NT-S">S</nt><nt def="NT-DefaultDecl">DefaultDecl</nt></rhs></prod></scrap><ulist><item><p>To define the set of attributes pertaining to a given element type.</p></item><item><p>To establish type constraints for these attributes.</p></item><item><p>To provide<termref def="dt-default">default values</termref></p></item></ulist></div2><div2 id="sec-condition-sect"><eg>&lt;!ENTITY % draft 'INCLUDE' &gt;
&lt;!ENTITY % final 'IGNORE' &gt;

&lt;![%draft;[
&lt;!ELEMENT book (comments*, title, body, supplements?)&gt;
]]&gt;
&lt;![%final;[
&lt;!ELEMENT book (title, body, supplements?)&gt;
]]&gt;</eg><head>Conditional Sections</head><p><termdef id="dt-cond-section" term="conditional section"><term>Conditional
sections</term><termref def="dt-doctype">document type
declaration external subset</termref></termdef></p><p>Like the internal and external DTD subsets, a conditional section may contain
one or more complete declarations, comments, processing instructions, or nested
conditional sections, intermingled with white space.</p><p>If the keyword of the conditional section is<code>[</code><code>&lt;![</code><code>]]&gt;</code><kw>INCLUDE</kw><kw>IGNORE</kw><kw>INCLUDE</kw><kw>IGNORE</kw><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>NOT</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119></p><p>If the keyword of the conditional section is a parameter-entity reference,
the parameter entity<rfc2119>MUST</rfc2119></p><p>An example:</p><scrap lang="ebnf"><head>Conditional Section</head><prodgroup pcw2="9" pcw4="14.5"><prod id="NT-conditionalSect" num="61"><lhs>conditionalSect</lhs><rhs><nt def="NT-includeSect">includeSect</nt><nt def="NT-ignoreSect">ignoreSect</nt></rhs></prod><prod id="NT-includeSect" num="62"><lhs>includeSect</lhs><rhs>'&lt;!['<nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-extSubsetDecl">extSubsetDecl</nt></rhs><vc def="condsec-nesting" /></prod><prod id="NT-ignoreSect" num="63"><lhs>ignoreSect</lhs><rhs>'&lt;!['<nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-ignoreSectContents">ignoreSectContents</nt></rhs><vc def="condsec-nesting" /></prod><prod id="NT-ignoreSectContents" num="64"><lhs>ignoreSectContents</lhs><rhs><nt def="NT-Ignore">Ignore</nt><nt def="NT-ignoreSectContents">ignoreSectContents</nt><nt def="NT-Ignore">Ignore</nt></rhs></prod><prod id="NT-Ignore" num="65"><lhs>Ignore</lhs><rhs><nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt><nt def="NT-Char">Char</nt></rhs></prod></prodgroup></scrap><vcnote id="condsec-nesting"><head>Proper Conditional Section/PE Nesting</head><p>If any of the "<code>&lt;![</code><code>[</code><code>]]&gt;</code><rfc2119>MUST</rfc2119></p></vcnote></div2><head>Logical Structures</head><p><termdef id="dt-element" term="Element">Each<quote>generic
identifier</quote><term>elements</term><termref def="dt-xml-doc">XML
document</termref><termref def="dt-stag">start-tags</termref><termref def="dt-etag">end-tags</termref><termref def="dt-empty">empty</termref><termref def="dt-eetag">empty-element tag</termref></termdef><termref def="dt-attrname">name</termref><termref def="dt-attrval">value</termref></p><p>This specification does not constrain the
			application semantics, use, or (beyond syntax)
names of the element types and attributes, except that names beginning with
a match to<code>(('X'|'x')('M'|'m')('L'|'l'))</code></p><scrap lang="ebnf"><head>Element</head><prod id="NT-element" num="39"><lhs>element</lhs><rhs><nt def="NT-EmptyElemTag">EmptyElemTag</nt></rhs><rhs>|<nt def="NT-STag">STag</nt><nt def="NT-content">content</nt><nt def="NT-ETag">ETag</nt></rhs><vc def="elementvalid" /><wfc def="GIMatch" /></prod></scrap><vcnote id="elementvalid"><head>Element Valid</head><olist><item><p>The declaration matches<kw>EMPTY</kw><termref def="dt-content">content</termref></p></item><item><p>The declaration matches<nt def="NT-children">children</nt><nt def="NT-Misc">Misc</nt><nt def="NT-S">S</nt><nt def="NT-S">S</nt><termref def="dt-parentchild">child elements</termref></p></item><item><p>The declaration matches<nt def="NT-Mixed">Mixed</nt><termref def="dt-chardata">character data</termref><termref def="dt-cdsection">CDATA sections</termref><termref def="dt-comment">comments</termref><termref def="dt-pi">PIs</termref><termref def="dt-parentchild">child elements</termref></p></item><item><p>The declaration matches<kw>ANY</kw><termref def="dt-cdsection">CDATA
sections</termref><termref def="dt-comment">comments</termref><termref def="dt-pi">PIs</termref><termref def="dt-parentchild">child elements</termref></p></item></olist><p>An element is valid
if there is a declaration matching<nt def="NT-elementdecl">elementdecl</nt><nt def="NT-Name">Name</nt></p></vcnote><wfcnote id="GIMatch"><head>Element Type Match</head><p>The<nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119></p></wfcnote></div1><div1 id="sec-physical-struct"><div2 id="sec-references"><eg>Type &lt;key&gt;less-than&lt;/key&gt; (&amp;#x3C;) to save options.
This document was prepared on &amp;docdate; and
is classified &amp;security-level;.</eg><eg>&lt;!-- declare the parameter entity "ISOLat2"... --&gt;
&lt;!ENTITY % ISOLat2
         SYSTEM "http://www.xml.com/iso/isolat2-xml.entities" &gt;
&lt;!-- ... now reference it. --&gt;
%ISOLat2;</eg><head>Character and Entity References</head><p><termdef id="dt-charref" term="Character Reference">A<term>character
reference</term></termdef></p><p>If the character reference begins with<code>;</code><code>;</code><quote><code>&amp;#x</code></quote><quote><code>&amp;#</code></quote></p><p><termdef id="dt-entref" term="Entity Reference">An<term>entity reference</term></termdef><termdef id="dt-GERef" term="General Entity Reference">References to parsed general entities use
ampersand (<code>&amp;</code><code>;</code></termdef><termdef id="dt-PERef" term="Parameter-entity reference"><code>%</code><code>;</code><term>Parameter-entity references</term></termdef></p><p>Examples of character and entity references:</p><p>Example of a parameter-entity reference:</p><scrap lang="ebnf"><head>Character Reference</head><prod id="NT-CharRef" num="66"><lhs>CharRef</lhs><rhs>'&amp;#' [0-9]+ ';'</rhs><rhs>| '&amp;#x' [0-9a-fA-F]+ ';'</rhs><wfc def="wf-Legalchar" /></prod></scrap><scrap lang="ebnf"><head>Entity Reference</head><prod id="NT-Reference" num="67"><lhs>Reference</lhs><rhs><nt def="NT-EntityRef">EntityRef</nt><nt def="NT-CharRef">CharRef</nt></rhs></prod><prod id="NT-EntityRef" num="68"><lhs>EntityRef</lhs><rhs>'&amp;'<nt def="NT-Name">Name</nt></rhs><vc def="vc-entdeclared" /><wfc def="wf-entdeclared" /><wfc def="textent" /><wfc def="norecursion" /></prod><prod id="NT-PEReference" num="69"><lhs>PEReference</lhs><rhs>'%'<nt def="NT-Name">Name</nt></rhs><vc def="vc-entdeclared" /><wfc def="norecursion" /><wfc def="indtd" /></prod></scrap><vcnote id="vc-entdeclared"><head>Entity Declared</head><p>In a document with an external subset or parameter  entity references<code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><nt def="NT-Name">Name</nt><phrase diff="chg"><loc href="E08" role="erratumref" /><quote><code>standalone='no'</code></quote></phrase><rfc2119>MUST</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><specref ref="sec-predefined-ent" /><termref def="dt-match">match</termref><titleref href="#sec-entity-decl">entity
declaration</titleref></p></vcnote><wfcnote id="wf-Legalchar"><head>Legal Character</head><p>Characters referred
to using character references<nt def="NT-Char">Char</nt><rfc2119>MUST</rfc2119></p></wfcnote><wfcnote id="wf-entdeclared"><head>Entity Declared</head><p>In a document
without any DTD, a document with only an internal DTD subset which contains
no parameter entity references, or a document with<code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><nt def="NT-Name">Name</nt><quote><code>standalone='yes'</code></quote><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-match">match</termref><titleref href="#sec-entity-decl">entity
declaration</titleref></p><p>Note that non-validating processors are<phrase diff="del"><loc href="E03" role="erratumref" /></phrase><titleref href="#include-if-valid">not
obligated to</titleref><titleref href="#sec-rmd">standalone='yes'</titleref></p></wfcnote><wfcnote id="textent"><head>Parsed Entity</head><p>An entity reference<kw>ENTITY</kw><kw>ENTITIES</kw><rfc2119>MUST
NOT</rfc2119><termref def="dt-unparsed">unparsed entity</termref><termref def="dt-attrval">attribute
values</termref></p></wfcnote><wfcnote id="norecursion"><head>No Recursion</head><p>A parsed entity<rfc2119>MUST NOT</rfc2119></p></wfcnote><wfcnote id="indtd"><head>In DTD</head><p>Parameter-entity references<rfc2119>MUST NOT</rfc2119><termref def="dt-doctype">DTD</termref></p></wfcnote></div2><div2 id="sec-entity-decl"><div3 id="sec-internal-ent"><eg>&lt;!ENTITY Pub-Status "This is a pre-release of the
 specification."&gt;</eg><head>Internal Entities</head><p><specref ref="intern-replacement" /><termdef id="dt-internent" term="Internal Entity Replacement Text">If the
entity definition is an<nt def="NT-EntityValue">EntityValue</nt><term>internal entity</term></termdef><termref def="dt-litentval">literal entity value</termref><termref def="dt-repltext">replacement text</termref></p><p>An internal entity is a<termref def="dt-parsedent">parsed entity</termref></p><p>Example of an internal entity declaration:</p></div3><div3 id="sec-external-ent"><eg>&lt;!ENTITY open-hatch
         SYSTEM "http://www.textuality.com/boilerplate/OpenHatch.xml"&gt;
&lt;!ENTITY open-hatch
         PUBLIC "-//Textuality//TEXT Standard open-hatch boilerplate//EN"
         "http://www.textuality.com/boilerplate/OpenHatch.xml"&gt;
&lt;!ENTITY hatch-pic
         SYSTEM "../grafix/OpenHatch.gif"
         NDATA gif &gt;</eg><head>External Entities</head><note diff="add"><p>In a future edition of this specification, the XML Core Working Group intends to replace the preceding paragraph
							and list of steps with a normative reference to an upcoming revision of IETF RFC 3987, which will define
							"Legacy Extended IRIs (LEIRIs)".  When this revision is available, it is the intent of the XML Core WG to use it to replace
							language similar to the above in any future revisions of XML-related specifications under its purview.</p></note><olist><item><p>Each character to be escaped is represented in UTF-8<phrase diff="chg"><bibref ref="Unicode" /><loc href="E11" role="erratumref" /></phrase></p></item><item><p>The resulting bytes are escaped with
the URI escaping mechanism (that is, converted to<code>%</code><var>HH</var></p></item><item><p>The original character is replaced by the resulting character sequence.</p></item></olist><p><termdef id="dt-extent" term="External Entity">If the entity is not internal,
it is an<term>external entity</term></termdef></p><p>If the<nt def="NT-NDataDecl">NDataDecl</nt><termref def="dt-unparsed">unparsed entity</termref></p><p><code>#</code><code>Location:</code><termdef id="dt-sysid" term="System Identifier">The<bibref ref="rfc3986" /><nt def="NT-SystemLiteral">SystemLiteral</nt><term>system
identifier</term></termdef><termref def="dt-docent">document
entity</termref><termref def="dt-doctype">external
DTD subset</termref><termref def="dt-extent">external parameter
entity</termref></p><p>System
identifiers (and other XML strings meant to be used as URI references) may contain
characters that, according to<bibref ref="rfc3986" /><emph>unwise</emph><rfc2119>MUST</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>MUST</rfc2119></p><p><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termdef id="dt-pubid" term="Public identifier">In addition to a system
identifier, an external identifier may include a<term>public identifier</term></termdef></p><p>Examples of external entity declarations:</p><scrap lang="ebnf"><head>External Entity Declaration</head><prod id="NT-ExternalID" num="75"><lhs>ExternalID</lhs><rhs>'SYSTEM'<nt def="NT-S">S</nt><nt def="NT-SystemLiteral">SystemLiteral</nt></rhs><rhs>| 'PUBLIC'<nt def="NT-S">S</nt><nt def="NT-PubidLiteral">PubidLiteral</nt><nt def="NT-S">S</nt><nt def="NT-SystemLiteral">SystemLiteral</nt></rhs></prod><prod id="NT-NDataDecl" num="76"><lhs>NDataDecl</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt></rhs><vc def="not-declared" /></prod></scrap><vcnote id="not-declared"><head>Notation Declared</head><p>The<nt def="NT-Name">Name</nt><rfc2119>MUST</rfc2119><termref def="dt-notation">notation</termref></p></vcnote></div3><head>Entity Declarations</head><p><termdef id="dt-entdecl" term="entity declaration">Entities are declared
thus:</termdef></p><p>The<kw>ENTITY</kw><kw>ENTITIES</kw><nt def="NT-Name">Name</nt><rfc2119>MAY</rfc2119><termref def="dt-entref">entity
reference</termref></p><scrap lang="ebnf"><head>Entity Declaration</head><prodgroup pcw2="5" pcw4="18.5"><prod id="NT-EntityDecl" num="70"><lhs>EntityDecl</lhs><rhs><nt def="NT-GEDecl">GEDecl</nt><nt def="NT-PEDecl">PEDecl</nt></rhs></prod><prod id="NT-GEDecl" num="71"><lhs>GEDecl</lhs><rhs>'&lt;!ENTITY'<nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-EntityDef">EntityDef</nt><nt def="NT-S">S</nt></rhs></prod><prod id="NT-PEDecl" num="72"><lhs>PEDecl</lhs><rhs>'&lt;!ENTITY'<nt def="NT-S">S</nt><nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-PEDef">PEDef</nt><nt def="NT-S">S</nt></rhs></prod><prod id="NT-EntityDef" num="73"><lhs>EntityDef</lhs><rhs><nt def="NT-EntityValue">EntityValue</nt><nt def="NT-ExternalID">ExternalID</nt><nt def="NT-NDataDecl">NDataDecl</nt></rhs></prod><prod id="NT-PEDef" num="74"><lhs>PEDef</lhs><rhs><nt def="NT-EntityValue">EntityValue</nt><nt def="NT-ExternalID">ExternalID</nt></rhs></prod></prodgroup></scrap></div2><div2 id="TextEntities"><div3 id="sec-TextDecl"><head>The Text Declaration</head><p>External parsed entities<rfc2119>SHOULD</rfc2119><term>text declaration</term></p><p>The text declaration<rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><termref def="dt-repltext">replacement text</termref></p><scrap lang="ebnf"><head>Text Declaration</head><prodgroup pcw4="12.5" pcw5="13"><prod id="NT-TextDecl" num="77"><lhs>TextDecl</lhs><rhs>'&lt;?xml'<nt def="NT-VersionInfo">VersionInfo</nt><nt def="NT-EncodingDecl">EncodingDecl</nt><nt def="NT-S">S</nt></rhs></prod></prodgroup></scrap></div3><div3 id="wf-entities"><head>Well-Formed Parsed Entities</head><note><p>Only parsed entities that are referenced directly or indirectly within the document are required to be well-formed.</p></note><p>The document entity is well-formed if it matches the production labeled<nt def="NT-document">document</nt><nt def="NT-extParsedEnt">extParsedEnt</nt></p><p>An internal general parsed entity is well-formed if its replacement text
matches the production labeled<nt def="NT-content">content</nt></p><p>A consequence of well-formedness in general
entities is that the logical and physical
structures in an XML document are properly nested; no<termref def="dt-stag">start-tag</termref><termref def="dt-etag">end-tag</termref><termref def="dt-empty">empty-element tag</termref><termref def="dt-element">element</termref><termref def="dt-comment">comment</termref><termref def="dt-pi">processing instruction</termref><termref def="dt-charref">character
reference</termref><termref def="dt-entref">entity reference</termref></p><scrap lang="ebnf"><head>Well-Formed External Parsed Entity</head><prod id="NT-extParsedEnt" num="78"><lhs>extParsedEnt</lhs><rhs><nt def="NT-TextDecl">TextDecl</nt><nt def="NT-content">content</nt></rhs></prod></scrap></div3><div3 id="charencoding"><eg>&lt;?xml encoding='UTF-8'?&gt;
&lt;?xml encoding='EUC-JP'?&gt;</eg><head>Character Encoding in Entities</head><p>Each external parsed entity in an XML document may use a different encoding
for its characters. All XML processors<phrase diff="del"><loc href="E05" role="erratumref" /></phrase><phrase diff="add"><loc href="E05" role="erratumref" /></phrase><quote>UTF-8</quote><quote>UTF-16</quote><rfc2119>MUST</rfc2119></p><p>Entities encoded in UTF-16<bibref ref="ISO10646-2000" /><bibref ref="Unicode" /><phrase diff="chg"><loc href="E11" role="erratumref" /></phrase><phrase diff="del"><bibref ref="Unicode3" /><loc href="E11" role="erratumref" /></phrase><rfc2119>MUST</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MUST</rfc2119></p><p diff="add"><loc href="E06" role="erratumref" /></p><p>Although an XML processor is required to read only entities in the UTF-8
and UTF-16 encodings, it is recognized that other encodings are used around
the world, and it may be desired for XML processors to read entities that
use them. In
the absence of external character encoding information (such as MIME headers),
parsed entities which are stored in an encoding other than UTF-8 or UTF-16<rfc2119>MUST</rfc2119><specref ref="sec-TextDecl" /></p><p>In the<nt def="NT-EncName">EncName</nt><termref def="dt-docent">document entity</termref><termref def="dt-xmldecl">XML declaration</termref></p><p>In an encoding declaration, the values<bibref ref="IANA" /><emph>charset</emph><quote><code>UTF-8</code></quote><quote><code>UTF-16</code></quote><quote><code>ISO-10646-UCS-2</code></quote><quote><code>ISO-10646-UCS-4</code></quote><quote><code>ISO-8859-1</code></quote><quote><code>ISO-8859-2</code></quote><quote><code>ISO-8859-</code><var>n</var></quote><quote><code>ISO-2022-JP</code></quote><quote><code>Shift_JIS</code></quote><quote><code>EUC-JP</code></quote><quote>x-</quote><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>RECOMMENDED</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>SHOULD</rfc2119><var>n</var></p><p>In the absence of information provided by an external transport protocol
(e.g. HTTP or MIME), it is a<termref def="dt-fatal">fatal error</termref></p><p>It is a<nt def="NT-TextDecl">TextDecl</nt><termref def="dt-fatal">fatal error</termref></p><p>It is a<phrase diff="del"><loc href="E11" role="erratumref" /></phrase><phrase diff="add"><loc href="E11" role="erratumref" /></phrase><phrase diff="add"><loc href="E11" role="erratumref" /></phrase><phrase diff="del"><loc href="E11" role="erratumref" /></phrase><phrase diff="chg"><bibref ref="Unicode" /><loc href="E11" role="erratumref" /></phrase><termref def="dt-fatal">fatal error</termref><termref def="dt-fatal">fatal error</termref><termref def="dt-fatal">fatal error</termref></p><p>Examples of text declarations containing encoding declarations:</p><scrap lang="ebnf"><head>Encoding Declaration</head><prod id="NT-EncodingDecl" num="80"><lhs>EncodingDecl</lhs><rhs><nt def="NT-S">S</nt><nt def="NT-Eq">Eq</nt><nt def="NT-EncName">EncName</nt><nt def="NT-EncName">EncName</nt></rhs></prod><prod id="NT-EncName" num="81"><com>Encoding
name contains only Latin characters</com><lhs>EncName</lhs><rhs>[A-Za-z] ([A-Za-z0-9._] | '-')*</rhs></prod></scrap></div3><head>Parsed Entities</head></div2><div2 id="entproc"><div3 id="not-recognized"><head>Not Recognized</head><p>Outside the DTD, the<code>%</code><nt def="NT-content">content</nt></p></div3><div3 id="included"><head>Included</head><p><quote><code>AT&amp;amp;T;</code></quote><quote><code>AT&amp;T;</code></quote><rfc2119>MUST</rfc2119><term>included</term><termdef id="dt-include" term="Include">An entity is<term>included</term><termref def="dt-repltext">replacement text</termref></termdef><termref def="dt-chardata">character data</termref><termref def="dt-markup">markup</termref></p></div3><div3 id="include-if-valid"><head>Included If Validating</head><p>When an XML processor recognizes a reference to a parsed entity, in order
to<rfc2119>MUST</rfc2119><rfc2119>MAY</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-valid">validate</termref><termref def="dt-include">include</termref></p><p>This rule is based on the recognition that the automatic inclusion provided
by the SGML and XML entity mechanism, primarily designed to support modularity
in authoring, is not necessarily appropriate for other applications, in particular
document browsing. Browsers, for example, when encountering an external parsed
entity reference, might choose to provide a visual indication of the entity's
presence and retrieve it for display only on demand.</p></div3><div3 id="forbidden"><head>Forbidden</head><p>The following are forbidden, and constitute<termref def="dt-fatal">fatal
errors</termref></p><ulist><item><p>the appearance of a reference to an<nt def="NT-EntityValue">EntityValue</nt><termref def="dt-unparsed">unparsed
entity</termref></p></item><item><p>the appearance of any character or general-entity reference in the
DTD except within an<nt def="NT-EntityValue">EntityValue</nt><nt def="NT-AttValue">AttValue</nt></p></item><item><p>a reference to an external entity in an attribute value.</p></item></ulist></div3><div3 id="inliteral"><eg>&lt;!ENTITY % YN '"Yes"' &gt;
&lt;!ENTITY WhatHeSaid "He said %YN;" &gt;</eg><eg>&lt;!ENTITY EndAttr "27'" &gt;
&lt;element attribute='a-&amp;EndAttr;&gt;</eg><head>Included in Literal</head><p>When an<rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><termref def="dt-entref">entity reference</termref><termref def="dt-repltext">replacement text</termref></p><p>while this is not:</p></div3><div3 id="notify"><head>Notify</head><p>When the name of an<kw>ENTITY</kw><kw>ENTITIES</kw><rfc2119>MUST</rfc2119><termref def="dt-unparsed">unparsed entity</termref><termref def="dt-sysid">system</termref><termref def="dt-pubid">public</termref><termref def="dt-notation">notation</termref></p></div3><div3 id="bypass"><head>Bypassed</head><p>When a general entity reference appears in the<nt def="NT-EntityValue">EntityValue</nt><rfc2119>MUST</rfc2119></p></div3><div3 id="as-PE"><head>Included as PE</head><p>Just as with external parsed entities, parameter entities need only be<rfc2119>MUST</rfc2119><rfc2119>MUST NOT</rfc2119><specref ref="inliteral" /><termref def="dt-repltext">replacement
text</termref><titleref href="#include-if-valid">included if validating</titleref></p></div3><div3 id="error"><head>Error</head><p>It is an<nt def="NT-EntityValue">EntityValue</nt><termref def="dt-error">error</termref></p></div3><head>XML Processor Treatment of Entities and References</head><p>The table below summarizes the contexts in which character references,
entity references, and invocations of unparsed entities might appear and the<glist><gitem><def><p>as a reference anywhere after the<nt def="NT-content">content</nt><termref def="dt-stag">start-tag</termref><termref def="dt-etag">end-tag</termref></p></def><label>Reference in Content</label></gitem><gitem><def><p>as a reference within either the value of an attribute in a<nt def="NT-AttValue">AttValue</nt><termref def="dt-stag">start-tag</termref><termref def="dt-attdecl">attribute declaration</termref></p></def><label>Reference in Attribute Value</label></gitem><gitem><def><p>as a<kw>ENTITY</kw><kw>ENTITIES</kw><nt def="NT-Name">Name</nt></p></def><label>Occurs as Attribute Value</label></gitem><gitem><def><p>as a reference within a parameter or internal entity's<nt def="NT-EntityValue">EntityValue</nt><termref def="dt-litentval">literal
entity value</termref></p></def><label>Reference in Entity Value</label></gitem><gitem><def><p>as a reference within either the internal or external subsets of the<nt def="NT-EntityValue">EntityValue</nt><nt def="NT-AttValue">AttValue</nt><nt def="NT-PI">PI</nt><nt def="NT-Comment">Comment</nt><nt def="NT-SystemLiteral">SystemLiteral</nt><nt def="NT-PubidLiteral">PubidLiteral</nt><specref ref="sec-condition-sect" /><termref def="dt-doctype">DTD</termref></p><p>.</p></def><label>Reference in DTD</label></gitem></glist><rfc2119>REQUIRED</rfc2119><termref def="dt-xml-proc">XML processor</termref></p><table border="1" cellpadding="7" frame="border"><tbody align="center"><tr><td colspan="1" rowspan="2" /><td align="center" colspan="4" valign="bottom">Entity
Type</td><td align="center" rowspan="2">Character</td></tr><tr align="center" valign="bottom"><td>Parameter</td><td>Internal General</td><td>External Parsed
General</td><td>Unparsed</td></tr><tr align="center" valign="middle"><td align="right">Reference
in Content</td><td><titleref href="#not-recognized">Not recognized</titleref></td><td><titleref href="#included">Included</titleref></td><td><titleref href="#include-if-valid">Included
if validating</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#included">Included</titleref></td></tr><tr align="center" valign="middle"><td align="right">Reference in Attribute Value</td><td><titleref href="#not-recognized">Not recognized</titleref></td><td><titleref href="#inliteral">Included
in literal</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#included">Included</titleref></td></tr><tr align="center" valign="middle"><td align="right">Occurs as Attribute
Value</td><td><titleref href="#not-recognized">Not recognized</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#notify">Notify</titleref></td><td><titleref href="#not-recognized">Not recognized</titleref></td></tr><tr align="center" valign="middle"><td align="right">Reference in EntityValue</td><td><titleref href="#inliteral">Included in literal</titleref></td><td><titleref href="#bypass">Bypassed</titleref></td><td><titleref href="#bypass">Bypassed</titleref></td><td><titleref href="#error">Error</titleref></td><td><titleref href="#included">Included</titleref></td></tr><tr align="center" valign="middle"><td align="right">Reference in DTD</td><td><titleref href="#as-PE">Included as PE</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td><td><titleref href="#forbidden">Forbidden</titleref></td></tr></tbody></table></div2><div2 id="intern-replacement"><eg xml:lang="fr">&lt;!ENTITY % pub    "&amp;#xc9;ditions Gallimard" &gt;
&lt;!ENTITY   rights "All rights reserved" &gt;
&lt;!ENTITY   book   "La Peste: Albert Camus,
&amp;#xA9; 1947 %pub;. &amp;rights;" &gt;</eg><eg xml:lang="fr">La Peste: Albert Camus,
© 1947 Éditions Gallimard. &amp;rights;</eg><head>Construction of Entity Replacement Text</head><p>In discussing the treatment of entities, it is useful to distinguish
two forms of the entity's value.<termdef id="dt-litentval" term="Literal Entity Value">For an
internal entity, the<nt def="NT-EntityValue">EntityValue</nt><term>literal
entity value</term></termdef><termdef id="dt-extlitentval" term="Literal Entity Value">For an external entity, the<term>literal
entity value</term></termdef><termdef id="dt-repltext" term="Replacement Text">For an
internal entity, the<term>replacement text</term></termdef><termdef id="dt-extrepltext" term="Replacement Text">For
an external entity, the<term>replacement text</term></termdef></p><p>The literal entity value as given in an internal entity declaration (<emph>replacement
text</emph><nt def="NT-EntityValue">EntityValue</nt><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><rfc2119>MUST</rfc2119><termref def="dt-include">included</termref><termref def="inliteral">included in literal</termref></p><p>then the replacement text for the entity<quote><code>book</code></quote></p><p>The general-entity reference<quote><code>&amp;rights;</code></quote><quote><code>&amp;book;</code></quote></p><p>These simple rules may have complex interactions; for a detailed discussion
of a difficult example, see<specref ref="sec-entexpand" /></p></div2><div2 id="sec-predefined-ent"><eg>&lt;!ENTITY lt     "&amp;#38;#60;"&gt;
&lt;!ENTITY gt     "&amp;#62;"&gt;
&lt;!ENTITY amp    "&amp;#38;#38;"&gt;
&lt;!ENTITY apos   "&amp;#39;"&gt;
&lt;!ENTITY quot   "&amp;#34;"&gt;</eg><head>Predefined Entities</head><p><termdef id="dt-escape" term="escape">Entity and character references may
both be used to<code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><code>&lt;</code><code>&amp;</code><quote><code>&amp;#60;</code></quote><quote><code>&amp;#38;</code></quote><rfc2119>MUST</rfc2119><term>escape</term></termdef></p><p>All XML processors<code>lt</code><code>amp</code><code>gt</code><code>apos</code><code>quot</code><rfc2119>MUST</rfc2119><rfc2119>SHOULD</rfc2119><rfc2119>MUST</rfc2119><rfc2119>REQUIRED</rfc2119><rfc2119>MUST</rfc2119><rfc2119>OPTIONAL</rfc2119><termref def="dt-interop">For interoperability</termref></p></div2><div2 id="Notations"><head>Notation Declarations</head><p><termdef id="dt-notation" term="Notation"><term>Notations</term><termref def="dt-unparsed">unparsed entities</termref><termref def="dt-pi">processing instruction</termref></termdef></p><p><termdef id="dt-notdecl" term="Notation Declaration"><term>Notation declarations</term></termdef></p><p>XML processors<rfc2119>MUST</rfc2119><rfc2119>MAY</rfc2119><termref def="dt-sysid">system identifier</termref></p><scrap lang="ebnf"><head>Notation Declarations</head><prod id="NT-NotationDecl" num="82"><lhs>NotationDecl</lhs><rhs>'&lt;!NOTATION'<nt def="NT-S">S</nt><nt def="NT-Name">Name</nt><nt def="NT-S">S</nt><nt def="NT-ExternalID">ExternalID</nt><nt def="NT-PublicID">PublicID</nt><nt def="NT-S">S</nt></rhs><vc def="UniqueNotationName" /></prod><prod id="NT-PublicID" num="83"><lhs>PublicID</lhs><rhs>'PUBLIC'<nt def="NT-S">S</nt><nt def="NT-PubidLiteral">PubidLiteral</nt></rhs></prod></scrap><vcnote id="UniqueNotationName"><head>Unique Notation Name</head><p>A given<nt def="NT-Name">Name</nt><rfc2119>MUST NOT</rfc2119></p></vcnote></div2><div2 id="sec-doc-entity"><head>Document Entity</head><p><termdef id="dt-docent" term="Document Entity">The<term>document entity</term><termref def="dt-xml-proc">XML processor</termref></termdef></p></div2><head>Physical Structures</head><p><termdef id="dt-entity" term="Entity">An XML document may consist of one
or many storage units. These
are called<term>entities</term><term>content</term><term>name</term><termref def="dt-docent">document entity</termref><termref def="dt-doctype">external DTD subset</termref></termdef><termref def="dt-docent">document entity</termref><termref def="dt-xml-proc">XML processor</termref></p><p>Entities may be either parsed or unparsed.<termdef id="dt-parsedent" term="Text Entity">The contents of a<term>parsed
entity</term><termref def="dt-repltext">replacement
text</termref><termref def="dt-text">text</termref></termdef></p><p><termdef id="dt-unparsed" term="Unparsed Entity">An<term>unparsed entity</term><termref def="dt-text">text</termref><termref def="dt-notation">notation</termref></termdef></p><p>Parsed entities are invoked by name using entity references; unparsed entities
by name, given in the value of<kw>ENTITY</kw><kw>ENTITIES</kw></p><p><termdef id="gen-entity" term="general entity"><emph>entity</emph><term>General entities</term></termdef><termdef id="dt-PE" term="Parameter entity"><term>Parameter
entities</term></termdef></p></div1><div1 id="sec-conformance"><div2 id="proc-types"><head>Validating and Non-Validating Processors</head><p>Conforming<termref def="dt-xml-proc">XML processors</termref></p><p>Validating and non-validating processors alike<rfc2119>MUST</rfc2119><termref def="dt-docent">document entity</termref><termref def="dt-parsedent">parsed
entities</termref></p><p><rfc2119>MUST</rfc2119><termdef id="dt-validating" term="Validating Processor"><rfc2119>MUST</rfc2119><term>Validating
processors</term><termref def="dt-doctype">DTD</termref></termdef></p><p>Non-validating processors are<code>standalone="yes"</code><code>standalone="yes"</code><rfc2119>REQUIRED</rfc2119><rfc2119>MUST NOT</rfc2119><rfc2119>MUST</rfc2119><termdef id="dt-use-mdecl" term="Process Declarations">While they are not required
to check the document for validity, they are<emph>not</emph><rfc2119>REQUIRED</rfc2119><rfc2119>MUST</rfc2119><term>process</term><titleref href="#AVNormalize">normalize</titleref><titleref href="#included">include</titleref><titleref href="#sec-attr-defaults">default
attribute values</titleref></termdef><termref def="dt-docent">document
entity</termref><termref def="dt-use-mdecl">process</termref><termref def="dt-entdecl">entity
declarations</termref><termref def="dt-attdecl">attribute-list declarations</termref></p><p>Note that when processing invalid documents with a non-validating
processor the application may not be presented with consistent
information.  For example, several requirements for uniqueness
within the document may not be met, including more than one element
with the same id, duplicate declarations of elements or notations
with the same name, etc.  In these cases the behavior of the parser
with respect to reporting such information to the application is
undefined.</p></div2><div2 id="safe-behavior"><head>Using XML Processors</head><p>The behavior of a validating XML processor is highly predictable; it must
read every piece of a document and report all well-formedness and validity
violations. Less is required of a non-validating processor; it need not read
any part of the document other than the document entity. This has two effects
that may be important to users of XML processors:</p><p>For maximum reliability in interoperating between different XML processors,
applications which use non-validating processors<rfc2119>SHOULD NOT</rfc2119><rfc2119>SHOULD</rfc2119></p><ulist><item><p>Certain well-formedness errors, specifically those that require reading
external entities, may fail to be detected by a non-validating processor. Examples
include the constraints entitled<specref ref="entproc" /><titleref href="#wf-entdeclared">Entity Declared</titleref><titleref href="#textent">Parsed Entity</titleref><titleref href="#norecursion">No
Recursion</titleref><titleref href="#forbidden">forbidden</titleref></p></item><item><p>The information passed from the processor to the application may
vary, depending on whether the processor reads parameter and external entities.
For example, a non-validating processor may fail to<phrase diff="add"><loc href="E04" role="erratumref" /></phrase><titleref href="#AVNormalize">normalize</titleref><titleref href="#included">include</titleref><titleref href="#sec-attr-defaults">default
attribute values</titleref></p></item></ulist></div2><head>Conformance</head></div1><div1 id="sec-notation"><eg>symbol ::= expression</eg><head>Notation</head><p>The formal grammar of XML is given in this specification using a simple
Extended Backus-Naur Form (EBNF) notation. Each rule in the grammar defines
one symbol, in the form</p><p>Symbols are written with an initial capital letter if they are the
start symbol of a regular language, otherwise with an initial lowercase letter.
Literal strings are quoted.</p><p>Within the expression on the right-hand side of a rule, the following expressions
are used to match strings of one or more characters:<code>A</code><code>B</code><glist><gitem><def><p>where<code>N</code><code>N</code><code>#xN</code></p></def><label><code>#xN</code></label></gitem><gitem><def><p>matches any<nt def="NT-Char">Char</nt></p></def><label><code>[a-zA-Z]</code><code>[#xN-#xN]</code></label></gitem><gitem><def><p>matches any<nt def="NT-Char">Char</nt></p></def><label><code>[abc]</code><code>[#xN#xN#xN]</code></label></gitem><gitem><def><p>matches any<emph>outside</emph><nt def="NT-Char">Char</nt></p></def><label><code>[^a-z]</code><code>[^#xN-#xN]</code></label></gitem><gitem><def><p>matches any<nt def="NT-Char">Char</nt></p></def><label><code>[^abc]</code><code>[^#xN#xN#xN]</code></label></gitem><gitem><def><p>matches a literal string<termref def="dt-match">matching</termref></p></def><label><code>"string"</code></label></gitem><gitem><def><p>matches a literal string<termref def="dt-match">matching</termref></p></def><label><code>'string'</code></label></gitem></glist><glist><gitem><def><p><code>expression</code></p></def><label>(<code>expression</code></label></gitem><gitem><def><p>matches<code>A</code><code>A</code></p></def><label><code>A?</code></label></gitem><gitem><def><p>matches<code>A</code><code>B</code><code>A B | C D</code><code>(A B) | (C D)</code></p></def><label><code>A B</code></label></gitem><gitem><def><p>matches<code>A</code><code>B</code></p></def><label><code>A | B</code></label></gitem><gitem><def><p>matches any string that matches<code>A</code><code>B</code></p></def><label><code>A - B</code></label></gitem><gitem><def><p>matches one or more occurrences of<code>A</code><code>A+ | B+</code><code>(A+) | (B+)</code></p></def><label><code>A+</code></label></gitem><gitem><def><p>matches zero or more occurrences of<code>A</code><code>A* | B*</code><code>(A*) | (B*)</code></p></def><label><code>A*</code></label></gitem></glist><glist><gitem><def><p>comment.</p></def><label><code>/* ... */</code></label></gitem><gitem><def><p>well-formedness constraint; this identifies by name a constraint on<termref def="dt-wellformed">well-formed</termref></p></def><label><code>[ wfc: ... ]</code></label></gitem><gitem><def><p>validity constraint; this identifies by name a constraint on<termref def="dt-valid">valid</termref></p></def><label><code>[ vc: ... ]</code></label></gitem></glist></p></div1></body><header><abstract><p>The Extensible Markup Language (XML) is a subset of SGML that is completely
described in this document. Its goal is to enable generic SGML to be served,
received, and processed on the Web in the way that is now possible with HTML.
XML has been designed for ease of implementation and for interoperability
with both SGML and HTML.</p></abstract><altlocs><loc href="REC-xml-20081126.xml">XML</loc><loc href="REC-xml-20081126-review.html">XHTML with color-coded revision indicators</loc></altlocs><authlist><author role="1e"><affiliation>Textuality and Netscape</affiliation><email href="mailto:tbray@textuality.com">tbray@textuality.com</email><name>Tim Bray</name></author><author role="1e"><affiliation>Microsoft</affiliation><email href="mailto:jeanpa@microsoft.com">jeanpa@microsoft.com</email><name>Jean Paoli</name></author><author role="1e"><affiliation>W3C</affiliation><email href="mailto:cmsmcq@w3.org">cmsmcq@w3.org</email><name>C. M. Sperberg-McQueen</name></author><author><affiliation>Sun Microsystems, Inc.</affiliation><email href="mailto:elm@east.sun.com">eve.maler@east.sun.com</email><name>Eve Maler</name></author><author><name>François Yergeau</name></author></authlist><errataloc href="http://www.w3.org/XML/xml-V10-5e-errata" /><langusage><language id="EN">English</language><language id="ebnf">Extended Backus-Naur Form (formal grammar)</language></langusage><latestloc><loc href="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</loc></latestloc><preverrataloc href="http://www.w3.org/XML/xml-V10-4e-errata" /><prevlocs><loc href="http://www.w3.org/TR/2008/PER-xml-20080205/">http://www.w3.org/TR/2008/PER-xml-20080205/</loc><loc href="http://www.w3.org/TR/2006/REC-xml-20060816/">http://www.w3.org/TR/2006/REC-xml-20060816/</loc></prevlocs><pubdate><day>26</day><month>November</month><year>2008</year></pubdate><publoc><loc href="http://www.w3.org/TR/2008/REC-xml-20081126/">http://www.w3.org/TR/2008/REC-xml-20081126/</loc></publoc><pubstmt><p>Chicago, Vancouver, Mountain View, Edinburgh, et al.: World-Wide Web Consortium, XML
Working Group, 1996, 1997, 2000, 2006, 2008.</p></pubstmt><revisiondesc><p role="cvsid">$Id: REC-xml-20081126.xml,v 1.3 2013-02-07 15:01:59 denis Exp $</p></revisiondesc><sourcedesc><p>Created in electronic form.</p></sourcedesc><status><p><emph>This section describes the status of this document at the time of its publication.
				Other documents may supersede this document. A list of current W3C publications and the
				latest revision of this technical report can be found in the<loc href="http://www.w3.org/TR/">W3C technical reports index</loc></emph></p><p>This document specifies a syntax created by subsetting an existing, widely
				used international text processing standard (Standard Generalized Markup Language,
				ISO 8879:1986(E) as amended and corrected) for use on the World Wide Web.
				It is a product of the<loc href="http://www.w3.org/XML/Core/">XML Core Working Group</loc><loc href="http://www.w3.org/XML/Activity">XML Activity</loc><loc href="http://www.w3.org/2003/03/Translations/byTechnology?technology=xml">http://www.w3.org/2003/03/Translations/byTechnology?technology=xml</loc></p><p>This document is a<emph>not</emph><loc href="http://www.w3.org/2005/10/Process-20051014/tr.html#q74">W3C Recommendation</loc><loc href="http://www.w3.org/XML/xml-V10-4e-errata">http://www.w3.org/XML/xml-V10-4e-errata</loc><loc href="http://www.w3.org/TR/2006/REC-xml-20060816/">Fourth
				Edition of XML 1.0, dated 16 August 2006</loc><loc href="http://www.w3.org/XML/xml-V10-4e-errata#E09">[E09]</loc></p><p>This edition supersedes the previous<loc href="http://www.w3.org/TR/2006/REC-xml-20060816/">W3C Recommendation
				of 16 August 2006</loc></p><p>Please report errors in this document to
the public<loc href="mailto:xml-editor@w3.org">xml-editor@w3.org</loc><loc href="http://lists.w3.org/Archives/Public/xml-editor/">archives</loc><loc href="REC-xml-20081126-review.html">XHTML version with color-coded revision indicators</loc><loc href="http://www.w3.org/XML/xml-V10-4e-errata">errata
list</loc><loc href="http://www.w3.org/XML/xml-V10-5e-errata">http://www.w3.org/XML/xml-V10-5e-errata</loc></p><p>An implementation report is available at<loc href="http://www.w3.org/XML/2008/01/xml10-5e-implementation.html">http://www.w3.org/XML/2008/01/xml10-5e-implementation.html</loc><loc href="http://www.w3.org/XML/Test/">Test Suite</loc></p><p>This document has been reviewed by W3C Members, by software developers, and by other W3C groups and interested parties, and is endorsed by the Director as a W3C Recommendation. It is a stable document and may be used as reference material or cited from another document. W3C's role in making the Recommendation is to draw attention to the specification and to promote its widespread deployment. This enhances the functionality and interoperability of the Web.</p><p>W3C maintains a<loc href="http://www.w3.org/2002/08/xmlcore-IPR-statements" role="disclosure">public list of
				any patent disclosures</loc><loc href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential
				Claim(s)</loc><loc href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section 6 of the W3C Patent Policy</loc></p></status><title>Extensible Markup Language (XML)</title><translationloc href="http://www.w3.org/2003/03/Translations/byTechnology?technology=xml" /><version>1.0 (Fifth Edition)</version><w3c-designation>REC-xml-20081126</w3c-designation><w3c-doctype>W3C Recommendation</w3c-doctype></header></spec>