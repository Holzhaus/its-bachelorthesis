<html lang="EN" xmlns="http://www.w3.org/1999/xhtml"><body><div><hr></hr><p><span class="diff-add">new, added text</span><span class="diff-chg">changed text</span><span class="diff-del">deleted text</span>The presentation of this document has been augmented to
            identify changes from a previous version. Three kinds of changes
            are highlighted:,, and.</p></div><div class="head"><dl><dd><a href="http://www.w3.org/TR/2008/REC-xml-20081126/">http://www.w3.org/TR/2008/REC-xml-20081126/</a></dd><dd><a href="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</a></dd><dd><a href="http://www.w3.org/TR/2008/PER-xml-20080205/">http://www.w3.org/TR/2008/PER-xml-20080205/</a><a href="http://www.w3.org/TR/2006/REC-xml-20060816/">http://www.w3.org/TR/2006/REC-xml-20060816/</a><br></br></dd><dd><a href="mailto:tbray@textuality.com">&lt;tbray@textuality.com></a>Tim Bray, Textuality and Netscape</dd><dd><a href="mailto:jeanpa@microsoft.com">&lt;jeanpa@microsoft.com></a>Jean Paoli, Microsoft</dd><dd><a href="mailto:cmsmcq@w3.org">&lt;cmsmcq@w3.org></a>C. M. Sperberg-McQueen, W3C</dd><dd><a href="mailto:elm@east.sun.com">&lt;eve.maler@east.sun.com></a>Eve Maler, Sun Microsystems, Inc.</dd><dd>François Yergeau</dd><dt>This version:</dt><dt>Latest version:</dt><dt>Previous versions:</dt><dt>Editors:</dt></dl><h1><a id="title" name="title"></a>Extensible Markup Language (XML) 1.0 (Fifth Edition)</h1><h2><a id="w3c-doctype" name="w3c-doctype"></a>W3C Recommendation 26 November 2008</h2><p><a href="http://www.w3.org/"><img alt="W3C" height="48" src="http://www.w3.org/Icons/w3c_home" width="72"/></a></p><p><a href="http://www.w3.org/XML/xml-V10-5e-errata"><strong>errata</strong></a>Please refer to thefor this document, which may
      include some normative corrections.</p><p><a href="http://www.w3.org/XML/xml-V10-4e-errata">previous errata</a>Thefor this document, are also available.</p><p><a href="http://www.w3.org/2003/03/Translations/byTechnology?technology=xml"><strong>translations</strong></a>See also.</p><p><a href="REC-xml-20081126.xml">XML</a><a href="REC-xml-20081126-review.html">XHTML with color-coded revision indicators</a>This document is also available in these non-normative formats:and.</p><p class="copyright"><a href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a><a href="http://www.w3.org/"><acronym title="World Wide Web Consortium">W3C</acronym></a><a href="http://www.csail.mit.edu/"><acronym title="Massachusetts Institute of Technology">MIT</acronym></a><a href="http://www.ercim.org/"><acronym title="European Research Consortium for Informatics and Mathematics">ERCIM</acronym></a><a href="http://www.keio.ac.jp/">Keio</a><a href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</a><a href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</a><a href="http://www.w3.org/Consortium/Legal/copyright-documents">document use</a><sup>®</sup>© 2008(,,), All Rights Reserved. W3C,andrules apply.</p></div><div><h2><a id="abstract" name="abstract"></a>Abstract</h2><p>The Extensible Markup Language (XML) is a subset of SGML that is completely
described in this document. Its goal is to enable generic SGML to be served,
received, and processed on the Web in the way that is now possible with HTML.
XML has been designed for ease of implementation and for interoperability
with both SGML and HTML.</p></div><div><h2><a id="status" name="status"></a>Status of this Document</h2><p><em><a href="http://www.w3.org/TR/">W3C technical reports index</a>This section describes the status of this document at the time of its publication.
				Other documents may supersede this document. A list of current W3C publications and the
				latest revision of this technical report can be found in theat
				http://www.w3.org/TR/.</em></p><p><a href="http://www.w3.org/XML/Core/">XML Core Working Group</a><a href="http://www.w3.org/XML/Activity">XML Activity</a><a href="http://www.w3.org/2003/03/Translations/byTechnology?technology=xml">http://www.w3.org/2003/03/Translations/byTechnology?technology=xml</a>This document specifies a syntax created by subsetting an existing, widely
				used international text processing standard (Standard Generalized Markup Language,
				ISO 8879:1986(E) as amended and corrected) for use on the World Wide Web.
				It is a product of theas part of the.
				The English version of this specification is the only normative version. However,
				for translations of this document, see.</p><p><a href="http://www.w3.org/2005/10/Process-20051014/tr.html#q74">W3C Recommendation</a><a href="http://www.w3.org/XML/xml-V10-4e-errata">http://www.w3.org/XML/xml-V10-4e-errata</a><a href="http://www.w3.org/TR/2006/REC-xml-20060816/">Fourth
				Edition of XML 1.0, dated 16 August 2006</a><a href="http://www.w3.org/XML/xml-V10-4e-errata#E09">[E09]</a><em>not</em>This document is a. This fifth edition isa new version of XML. As a convenience to readers,
				it incorporates the changes dictated by the accumulated errata (available at) to the.  In particular, erratumrelaxes the restrictions on element and attribute names, thereby providing in XML 1.0 the major end user benefit
				currently achievable only by using XML
1.1.  As a consequence, many possible
 documents which were not well-formed according to previous editions of this
 specification are now well-formed, and previously invalid documents
using the newly-allowed name characters in, for example, ID
attributes, are now valid.</p><p><a href="http://www.w3.org/TR/2006/REC-xml-20060816/">W3C Recommendation
				of 16 August 2006</a>This edition supersedes the previous.</p><p><a href="mailto:xml-editor@w3.org">xml-editor@w3.org</a><a href="http://lists.w3.org/Archives/Public/xml-editor/">archives</a><a href="REC-xml-20081126-review.html">XHTML version with color-coded revision indicators</a><a href="http://www.w3.org/XML/xml-V10-4e-errata">errata
list</a><a href="http://www.w3.org/XML/xml-V10-5e-errata">http://www.w3.org/XML/xml-V10-5e-errata</a>Please report errors in this document to
the publicmail list; publicare available. For the convenience of readers,
				anis
				also provided; this version highlights each change due to an erratum published in thefor the previous edition, together with a link to the particular
				erratum in that list. Most of the
errata in the list provide a rationale for the change.  The errata
list for this fifth edition is available at.</p><p><a href="http://www.w3.org/XML/2008/01/xml10-5e-implementation.html">http://www.w3.org/XML/2008/01/xml10-5e-implementation.html</a><a href="http://www.w3.org/XML/Test/">Test Suite</a>An implementation report is available at.
				Ais maintained to help assessing conformance to this specification.</p><p>This document has been reviewed by W3C Members, by software developers, and by other W3C groups and interested parties, and is endorsed by the Director as a W3C Recommendation. It is a stable document and may be used as reference material or cited from another document. W3C's role in making the Recommendation is to draw attention to the specification and to promote its widespread deployment. This enhances the functionality and interoperability of the Web.</p><p><a href="http://www.w3.org/2002/08/xmlcore-IPR-statements">public list of
				any patent disclosures</a><a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential
				Claim(s)</a><a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section 6 of the W3C Patent Policy</a>W3C maintains amade in connection with the deliverables of
				the group; that page also includes instructions for disclosing a patent.
				An individual who has actual knowledge of a patent which the individual
				believes containsmust disclose the information in accordance with.</p></div><div class="toc"><h2><a id="contents" name="contents"></a>Table of Contents</h2><h3><a id="appendices" name="appendices"></a>Appendices</h3><p class="toc"><a href="#sec-intro">Introduction</a><a href="#sec-origin-goals">Origin and Goals</a><a href="#sec-terminology">Terminology</a><a href="#sec-documents">Documents</a><a href="#sec-well-formed">Well-Formed XML Documents</a><a href="#charsets">Characters</a><a href="#sec-common-syn">Common Syntactic Constructs</a><a href="#syntax">Character Data and Markup</a><a href="#sec-comments">Comments</a><a href="#sec-pi">Processing Instructions</a><a href="#sec-cdata-sect">CDATA Sections</a><a href="#sec-prolog-dtd">Prolog and Document Type Declaration</a><a href="#sec-rmd">Standalone Document Declaration</a><a href="#sec-white-space">White Space Handling</a><a href="#sec-line-ends">End-of-Line Handling</a><a href="#sec-lang-tag">Language Identification</a><a href="#sec-logical-struct">Logical Structures</a><a href="#sec-starttags">Start-Tags, End-Tags, and Empty-Element Tags</a><a href="#elemdecls">Element Type Declarations</a><a href="#sec-element-content">Element Content</a><a href="#sec-mixed-content">Mixed Content</a><a href="#attdecls">Attribute-List Declarations</a><a href="#sec-attribute-types">Attribute Types</a><a href="#sec-attr-defaults">Attribute Defaults</a><a href="#AVNormalize">Attribute-Value Normalization</a><a href="#sec-condition-sect">Conditional Sections</a><a href="#sec-physical-struct">Physical Structures</a><a href="#sec-references">Character and Entity References</a><a href="#sec-entity-decl">Entity Declarations</a><a href="#sec-internal-ent">Internal Entities</a><a href="#sec-external-ent">External Entities</a><a href="#TextEntities">Parsed Entities</a><a href="#sec-TextDecl">The Text Declaration</a><a href="#wf-entities">Well-Formed Parsed Entities</a><a href="#charencoding">Character Encoding in Entities</a><a href="#entproc">XML Processor Treatment of Entities and References</a><a href="#not-recognized">Not Recognized</a><a href="#included">Included</a><a href="#include-if-valid">Included If Validating</a><a href="#forbidden">Forbidden</a><a href="#inliteral">Included in Literal</a><a href="#notify">Notify</a><a href="#bypass">Bypassed</a><a href="#as-PE">Included as PE</a><a href="#error">Error</a><a href="#intern-replacement">Construction of Entity Replacement Text</a><a href="#sec-predefined-ent">Predefined Entities</a><a href="#Notations">Notation Declarations</a><a href="#sec-doc-entity">Document Entity</a><a href="#sec-conformance">Conformance</a><a href="#proc-types">Validating and Non-Validating Processors</a><a href="#safe-behavior">Using XML Processors</a><a href="#sec-notation">Notation</a><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>11.11.222.12.22.32.42.52.62.72.82.92.102.112.1233.13.23.2.13.2.23.33.3.13.3.23.3.33.444.14.24.2.14.2.24.34.3.14.3.24.3.34.44.4.14.4.24.4.34.4.44.4.54.4.64.4.74.4.84.4.94.54.64.74.855.15.26</p><p class="toc"><a href="#sec-bibliography">References</a><a href="#sec-existing-stds">Normative References</a><a href="#null">Other References</a><a href="#CharClasses">Character Classes</a><a href="#sec-xml-and-sgml">XML and SGML</a><a href="#sec-entexpand">Expansion of Entity and Character References</a><a href="#determinism">Deterministic Content Models</a><a href="#sec-guessing">Autodetection of Character Encodings</a><a href="#sec-guessing-no-ext-info">Detection Without External Encoding Information</a><a href="#sec-guessing-with-ext-info">Priorities in the Presence of External Encoding Information</a><a href="#sec-xml-wg">W3C XML Working Group</a><a href="#sec-core-wg">W3C XML Core Working Group</a><a href="#prod-notes">Production Notes</a><a href="#sec-suggested-names">Suggestions for XML Names</a><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>AA.1A.2BC(Non-Normative)D(Non-Normative)E(Non-Normative)F(Non-Normative)F.1F.2G(Non-Normative)H(Non-Normative)I(Non-Normative)J(Non-Normative)</p></div><div class="body"><div class="div1"><div class="div2"><h3><a id="sec-origin-goals" name="sec-origin-goals"></a>1.1 Origin and Goals</h3><ol class="enumar"><li><p>XML shall be straightforwardly usable over the Internet.</p></li><li><p>XML shall support a wide variety of applications.</p></li><li><p>XML shall be compatible with SGML.</p></li><li><p>It shall be easy to write programs which process XML documents.</p></li><li><p>The number of optional features in XML is to be kept to the absolute
minimum, ideally zero.</p></li><li><p>XML documents should be human-legible and reasonably clear.</p></li><li><p>The XML design should be prepared quickly.</p></li><li><p>The design of XML shall be formal and concise.</p></li><li><p>XML documents shall be easy to create.</p></li><li><p>Terseness in XML markup is of minimal importance.</p></li></ol><p>XML was developed by an XML Working Group (originally known as the SGML
Editorial Review Board) formed under the auspices of the World Wide Web Consortium
(W3C) in 1996. It was chaired by Jon Bosak of Sun Microsystems with the active
participation of an XML Special Interest Group (previously known as the SGML
Working Group) also organized by the W3C. The membership of the XML Working
Group is given in an appendix. Dan Connolly served as the Working Group's contact with
the W3C.</p><p>The design goals for XML are:</p><p><a href="#Unicode">[Unicode]</a><a href="#ISO10646">[ISO/IEC 10646]</a><a href="#RFC1766">[IETF BCP 47]</a><span class="diff-del"><span>RFC 3066</span></span><span class="diff-add"><span><a href="E01">E01</a>BCP 47</span></span><span class="diff-add"><span><a href="E01">E01</a><a href="#IANA-LANGCODES">[IANA-LANGCODES]</a>and the Language Subtag Registry</span></span><span class="diff-del"><span><a href="E01">E01</a><a href="#ISO639">[ISO 639]</a><a href="#ISO3166">[ISO 3166]</a>, ISO 639for language name codes, and ISO 3166for country name codes</span></span>This specification, together with associated standards (Unicodeand ISO/IEC 10646for characters, Internetfor language
					identification tags), provides
all the information necessary to understand XML Version 1.0 and
construct computer programs to process it.</p><p>This version of the XML specification may be distributed freely, as long as
all text and legal notices remain intact.</p></div><div class="div2"><dl><dd><p><a id="dt-error" name="dt-error" title="Error">Definition</a><strong>MUST</strong><strong>REQUIRED</strong><strong>MUST NOT</strong><strong>SHALL</strong><strong>SHALL NOT</strong><strong>MAY</strong><strong>MAY</strong>[: A violation of the rules of this specification;
results are undefined. Unless otherwise specified, failure to observe a prescription of this specification indicated by one of the keywords,,,andis an error.  Conforming softwaredetect and report an error
andrecover from it.]</p></dd><dd><p><a id="dt-fatal" name="dt-fatal" title="Fatal Error">Definition</a><a href="#dt-xml-proc" title="XML Processor">XML processor</a><strong>MUST</strong><strong>MAY</strong><strong>MAY</strong><strong>MAY</strong><strong>MUST NOT</strong><strong>MUST NOT</strong>[: An error which a conformingdetect and report to the application.
After encountering a fatal error, the processorcontinue processing the
data to search for further errors andreport such errors to the application.
In order to support correction of errors, the processormake unprocessed
data from the document (with intermingled character data and markup) available
to the application. Once a fatal error is detected, however, the processorcontinue normal processing (i.e., itcontinue to pass character
data and information about the document's logical structure to the application
in the normal way).]</p></dd><dd><p><a id="dt-atuseroption" name="dt-atuseroption" title="At user option">Definition</a><strong>MAY</strong><strong>MUST</strong><strong>MUST</strong>[: Conforming softwareor(depending on the modal verb in the sentence) behave as described;
if it does, itprovide users a means to enable or disable the behavior
described.]</p></dd><dd><p><a id="dt-vc" name="dt-vc" title="Validity constraint">Definition</a><a href="#dt-valid" title="Validity">valid</a><a href="#dt-validating" title="Validating Processor">validating XML processors</a><strong>MUST</strong>[: A rule which applies to
allXML documents. Violations of validity
constraints are errors; they, at user option, be reported by.]</p></dd><dd><p><a id="dt-wfc" name="dt-wfc" title="Well-formedness constraint">Definition</a><a href="#dt-wellformed" title="Well-Formed">well-formed</a><a href="#dt-fatal" title="Fatal Error">fatal errors</a>[: A rule which applies
to allXML documents. Violations
of well-formedness constraints are.]</p></dd><dd><p><a id="dt-match" name="dt-match" title="match">Definition</a><b><a href="#elementvalid">Element Valid</a>[VC:]</b>[: (Of strings or names:) Two strings
or names being compared are identical. Characters with multiple possible
representations in ISO/IEC 10646 (e.g. characters with both precomposed and
base+diacritic forms) match only if they have the same representation in both
strings. No
case folding is performed. (Of strings and rules in the grammar:) A string
matches a grammatical production if it belongs to the language generated by
that production. (Of content and content models:) An element matches its declaration
when it conforms in the fashion described in the constraint.]</p></dd><dd><p><a id="dt-compat" name="dt-compat" title="For Compatibility">Definition</a>[: Marks
a sentence describing a feature of XML included solely to ensure
that XML remains compatible with SGML.]</p></dd><dd><p><a id="dt-interop" name="dt-interop" title="For interoperability">Definition</a>[: Marks
a sentence describing a non-binding recommendation included to increase
the chances that XML documents can be processed by the existing installed
base of SGML processors which predate the WebSGML Adaptations Annex to ISO 8879.]</p></dd><dt class="label">error</dt><dt class="label">fatal error</dt><dt class="label">at user option</dt><dt class="label">validity constraint</dt><dt class="label">well-formedness constraint</dt><dt class="label">match</dt><dt class="label">for compatibility</dt><dt class="label">for interoperability</dt></dl><h3><a id="sec-terminology" name="sec-terminology"></a>1.2 Terminology</h3><p><a href="#rfc2119">[IETF RFC 2119]</a><strong>MUST</strong><strong>MUST NOT</strong><strong>REQUIRED</strong><strong>SHALL</strong><strong>SHALL NOT</strong><strong>SHOULD</strong><strong>SHOULD NOT</strong><strong>RECOMMENDED</strong><strong>MAY</strong><strong>OPTIONAL</strong><strong>EMPHASIZED</strong>The terminology used to describe XML documents is defined in the body of
this specification. The key words,,,,,,,,, and, when,
are to be interpreted as described in. In addition, the terms defined
in the following list are used in building
those definitions and in describing the actions of an XML processor:</p><p></p></div><h2><a id="sec-intro" name="sec-intro"></a>1 Introduction</h2><p><a href="#dt-xml-doc" title="XML Document">XML documents</a><a href="#ISO8879">[ISO 8879]</a>Extensible Markup Language, abbreviated XML, describes a class of data
objects calledand partially
describes the behavior of computer programs which process them. XML is an
application profile or restricted form of SGML, the Standard Generalized Markup
Language. By construction, XML documents are conforming
SGML documents.</p><p><a href="#dt-entity" title="Entity">entities</a><a href="#dt-character" title="Character">characters</a><a href="#dt-chardata" title="Character Data">character
data</a><a href="#dt-markup" title="Markup">markup</a>XML documents are made up of storage units called,
which contain either parsed or unparsed data. Parsed data is made up of, some of which form, and some of which form.
Markup encodes a description of the document's storage layout and logical
structure. XML provides a mechanism to impose constraints on the storage layout
and logical structure.</p><p><a id="dt-xml-proc" name="dt-xml-proc" title="XML Processor">Definition</a><a id="dt-app" name="dt-app" title="Application">Definition</a><b>XML processor</b><b>application</b>[: A software module called
anis used to read XML documents and provide access
to their content and structure.]
				[: It
is assumed that an XML processor is doing its work on behalf of another module,
called the.] This specification describes
the required behavior of an XML processor in terms of how it must read XML
data and the information it must provide to the application.</p></div><div class="div1"><div class="div2"><h3><a id="sec-well-formed" name="sec-well-formed"></a>2.1 Well-Formed XML Documents</h3><h5><a id="document" name="document"></a>Document</h5><ol class="enumar"><li><p><a href="#NT-document">document</a>Taken as a whole, it matches the production labeled.</p></li><li><p>It meets all the well-formedness constraints given in this specification.</p></li><li><p><a href="#dt-parsedent" title="Text Entity">parsed entities</a><a href="#dt-wellformed" title="Well-Formed">well-formed</a>Each of thewhich is referenced directly or indirectly within the document is.</p></li></ol><ol class="enumar"><li><p><a href="#dt-element" title="Element">elements</a>It contains one or more.</p></li><li><p><a id="dt-root" name="dt-root" title="Root Element">Definition</a><a href="#dt-content" title="Content">content</a><a href="#dt-stag" title="Start-Tag">start-tag</a><a href="#dt-etag" title="End Tag">end-tag</a><b>root</b>[: There is exactly one element,
called the, or document element, no part of which appears
in theof any other element.] For
all other elements, if theis in
the content of another element, theis in the content of the same element. More simply stated, the elements,
delimited by start- and end-tags, nest properly within each other.</p></li></ol><p><a id="dt-wellformed" name="dt-wellformed" title="Well-Formed">Definition</a><b>well-formed</b>[:  A textual object is aXML document if:]</p><p><a href="#NT-document">document</a>Matching theproduction implies that:</p><p><a id="dt-parentchild" name="dt-parentchild" title="Parent/Child">Definition</a><b>parent</b><b>child</b><code>C</code><code>P</code><code>C</code><code>P</code><code>P</code><code>P</code><code>C</code><code>C</code><code>P</code>[: As a consequence of this,
for each non-root elementin the document, there is one other elementin the document such thatis in the content of, but
is not in the content of any other element that is in the content of.is referred to as theof, andas
aof.]</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-document" name="NT-document"></a>[1]</td><td><code>document</code></td><td>::=</td><td><code><a href="#NT-prolog">prolog</a><a href="#NT-element">element</a><a href="#NT-Misc">Misc</a>*</code></td></tr></tbody></table></div><div class="div2"><div class="note"><div class="exampleInner"><pre><span class="diff-chg"><span><a href="E02">E02</a>E</span></span>[#x7F-#x84], [#x86-#x9F], [#xFDD0-#xFDF],
[#x1FFFE-#x1FFFF], [#x2FFFE-#x2FFFF], [#x3FFFE-#x3FFFF],
[#x4FFFE-#x4FFFF], [#x5FFFE-#x5FFFF], [#x6FFFE-#x6FFFF],
[#x7FFFE-#x7FFFF], [#x8FFFE-#x8FFFF], [#x9FFFE-#x9FFFF],
[#xAFFFE-#xAFFFF], [#xBFFFE-#xBFFFF], [#xCFFFE-#xCFFFF],
[#xDFFFE-#xDFFFF], [#xEFFFE-#xEFFFF], [#xFFFFE-#xFFFFF],
[#x10FFFE-#x10FFFF].</pre></div><p class="prefix"><b>Note:</b></p><p><a href="#Unicode">[Unicode]</a><span class="diff-chg"><span><a href="E11">E11</a>2.3</span></span><span class="diff-del"><span><a href="E11">E11</a><a href="#Unicode3">[Unicode3]</a>(see also D21 in section 3.6 of)</span></span>Document authors are encouraged to avoid
"compatibility characters", as defined
in sectionof. The characters defined in the following ranges are also
discouraged. They are either control characters or permanently undefined Unicode
characters:</p></div><h3><a id="charsets" name="charsets"></a>2.2 Characters</h3><h5><a id="char32" name="char32"></a>Character Range</h5><p><a id="dt-text" name="dt-text" title="Text">Definition</a><a href="#dt-character" title="Character">characters</a><a id="dt-character" name="dt-character" title="Character">Definition</a><a href="#ISO10646">[ISO/IEC 10646]</a><a href="#sec-existing-stds"><b>A.1 Normative References</b></a><a href="#NT-Char">Char</a><b>text</b><b>character</b><strong>MUST</strong>[: A parsed entity contains,
a sequence of, which may
represent markup or character data.]
					[: Ais an atomic unit of text as specified by ISO/IEC 10646:2000. Legal characters are tab, carriage
return, line feed, and the legal characters
of Unicode and ISO/IEC 10646. The
versions of these standards cited inwere
current at the time this document was prepared. New characters may be added
to these standards by amendments or new editions. Consequently, XML processorsaccept any character in the range specified for.
]</p><p><a href="#charencoding"><b>4.3.3 Character Encoding in Entities</b></a><span class="diff-del"><span><a href="E11">E11</a>3.1</span></span><span class="diff-chg"><span><a href="E11">E11</a><a href="#Unicode">[Unicode]</a></span></span><strong>MUST</strong>The mechanism for encoding character code points into bit patterns may
vary from entity to entity. All XML processorsaccept the UTF-8 and UTF-16
encodings of Unicode;
the mechanisms for signaling which of the two is in use,
or for bringing other encodings into play, are discussed later, in.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-Char" name="NT-Char"></a>[2]</td><td><code>Char</code></td><td>::=</td><td><code>#x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]</code></td><td><i>/* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */</i></td></tr></tbody></table></div><div class="div2"><div class="note"><p class="prefix"><b>Note:</b></p><p><a href="http://www.w3.org/TR/1998/REC-xml-19980210">First Edition</a><a href="#sec-line-ends"><b>2.11 End-of-Line Handling</b></a>The presence of #xD in the above production is
	maintained purely for backward compatibility with the.
	As explained in,
	all #xD characters literally present in an XML document
	are either removed or replaced by #xA characters before
	any other processing is done. The only way to get a #xD character to match this production is to
  use a character reference in an entity value literal.</p></div><div class="diff-del"><p><a href="E09">E09</a><a href="#CharClasses"><b>B Character Classes</b></a>Characters are classified for convenience as letters, digits, or other
characters. A
letter consists of an alphabetic or syllabic base character or an ideographic
character. Full definitions of the specific characters in each class
are given in.</p></div><div class="diff-del"><p><a href="E09">E09</a><a id="dt-name-x" name="dt-name-x" title="Name">Definition</a><b>Name</b>[: Ais a token beginning
with a letter or one of a few punctuation characters, and continuing with
letters, digits, hyphens, underscores, colons, or full stops, together known
as name characters.]</p></div><div class="diff-add"><p><a href="E09">E09</a><a id="dt-name" name="dt-name" title="Name">Definition</a><a href="#NT-Name">Name</a><a href="#NT-Nmtoken">Nmtoken</a><a href="#NT-Name">Names</a>[: Ais anwith a restricted set of initial characters.]  Disallowed initial characters forinclude digits, diacritics, the full stop and the hyphen.</p></div><div class="note"><p class="prefix"><b>Note:</b></p><p><a href="#xml-names">[XML Names]</a>The
Namespaces in XML Recommendationassigns a meaning
to names containing colon characters. Therefore, authors should not use the
colon in XML names except for namespace purposes, but XML processors must
accept the colon as a name character.</p></div><div class="diff-add"><p><a href="E09">E09</a><a href="#NT-Name">Name</a><a href="#NT-NameStartChar">NameStartChar</a><a href="#NT-NameChar">NameChars</a><a href="#sec-suggested-names"><b>J Suggestions for XML Names</b></a><strong>MUST</strong><strong>MUST</strong>The first character of abe a, and any
					other charactersbe; this mechanism is used to
					prevent names from beginning with European (ASCII) digits or with
					basic combining characters. Almost all characters are permitted in
					names, except those which either are or reasonably could be used as
					delimiters. The intention is to be inclusive rather than exclusive,
					so that writing systems not yet encoded in Unicode can be used in
					XML names. Seefor suggestions on the creation of
					names.</p></div><div class="diff-add"><p><a href="E09">E09</a>Document authors are encouraged to use names which are
					meaningful words or combinations of words in natural languages, and
					to avoid symbolic or white space characters in names. Note that
					COLON, HYPHEN-MINUS, FULL STOP (period), LOW LINE (underscore), and
					MIDDLE DOT are explicitly permitted.</p></div><div class="diff-add"><p><a href="E09">E09</a><em>cannot</em>The ASCII symbols and punctuation marks, along with a fairly
					large group of Unicode symbol characters, are excluded from names
					because they are more useful as delimiters in contexts where XML
					names are used outside XML documents; providing this group gives
					those contexts hard guarantees about whatbe part of
					an XML name. The character #x037E, GREEK QUESTION MARK, is excluded
					because when normalized it becomes a semicolon, which could change
					the meaning of entity references.</p></div><div class="note"><p class="prefix"><b>Note:</b></p><p><a href="#NT-Names">Names</a><a href="#NT-Nmtokens">Nmtokens</a><a href="#sec-attribute-types"><b>3.3.1 Attribute Types</b></a>Theandproductions are used to define the validity
of tokenized attribute values after normalization (see).</p></div><div class="note"><p class="prefix"><b>Note:</b></p><p><a href="#NT-EntityValue">EntityValue</a><code>&lt;</code><code>&lt;!ENTITY mylt "&lt;"></code>Although
theproduction allows the definition
of a general entity consisting of a single explicitin the literal
(e.g.,), it is strongly advised to avoid
this practice since any reference to that entity will cause a well-formedness
error.</p></div><h3><a id="sec-common-syn" name="sec-common-syn"></a>2.3 Common Syntactic Constructs</h3><h5><a id="white" name="white"></a>White Space</h5><h5><a id="d0e804" name="d0e804"></a>Names and Tokens</h5><h5><a id="d0e888" name="d0e888"></a>Literals</h5><p>This section defines some symbols used widely in the grammar.</p><p><a href="#NT-S">S</a>(white space) consists of one or more space (#x20)
characters, carriage returns, line feeds, or tabs.</p><p><a href="#NT-Nmtoken">Nmtoken</a>An(name token) is any mixture of name
characters.</p><p><code>xml</code><code>(('X'|'x') ('M'|'m') ('L'|'l'))</code>Names beginning with the string "",
or with any string which would match,
are reserved for standardization in this or future versions of this specification.</p><p><a href="#NT-EntityValue">EntityValue</a><a href="#NT-AttValue">AttValue</a><a href="#NT-SystemLiteral">SystemLiteral</a><a href="#NT-SystemLiteral">SystemLiteral</a>Literal data is any quoted string not containing the quotation mark used
as a delimiter for that string. Literals are used for specifying the content
of internal entities (), the values
of attributes (), and external identifiers
(). Note that acan be parsed without scanning for markup.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-S" name="NT-S"></a>[3]</td><td><code>S</code></td><td>::=</td><td><code>(#x20 | #x9 | #xD | #xA)+</code></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td class="diff-chg"><a id="NT-NameStartChar" name="NT-NameStartChar"></a>[4]</td><td class="diff-chg"><code>NameStartChar</code></td><td class="diff-chg">::=</td><td class="diff-chg"><code>":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]</code></td><td class="diff-chg"><i><a href="E09">E09</a>/**/</i></td></tr></tbody><tbody><tr valign="baseline"><td class="diff-add"><a id="NT-NameChar" name="NT-NameChar"></a>[4a]</td><td class="diff-add"><code>NameChar</code></td><td class="diff-add">::=</td><td class="diff-add"><code><a href="#NT-NameStartChar">NameStartChar</a>| "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]</code></td><td class="diff-add"><i><a href="E09">E09</a>/**/</i></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-Name" name="NT-Name"></a>[5]</td><td><code>Name</code></td><td>::=</td><td class="diff-chg"><code><a href="#NT-NameStartChar">NameStartChar</a><a href="#NT-NameChar">NameChar</a>()*</code></td><td class="diff-chg"><i><a href="E09">E09</a>/**/</i></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-Names" name="NT-Names"></a>[6]</td><td><code>Names</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-Name">Name</a>(#x20)*</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-Nmtoken" name="NT-Nmtoken"></a>[7]</td><td><code>Nmtoken</code></td><td>::=</td><td><code><a href="#NT-NameChar">NameChar</a>()+</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-Nmtokens" name="NT-Nmtokens"></a>[8]</td><td><code>Nmtokens</code></td><td>::=</td><td><code><a href="#NT-Nmtoken">Nmtoken</a><a href="#NT-Nmtoken">Nmtoken</a>(#x20)*</code></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-EntityValue" name="NT-EntityValue"></a>[9]</td><td><code>EntityValue</code></td><td>::=</td><td><code><a href="#NT-PEReference">PEReference</a><a href="#NT-Reference">Reference</a>'"' ([^%&amp;"] ||)* '"'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-PEReference">PEReference</a><a href="#NT-Reference">Reference</a>|  "'" ([^%&amp;'] ||)* "'"</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-AttValue" name="NT-AttValue"></a>[10]</td><td><code>AttValue</code></td><td>::=</td><td><code><a href="#NT-Reference">Reference</a>'"' ([^&lt;&amp;"] |)*
'"'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-Reference">Reference</a>|  "'" ([^&lt;&amp;'] |)*
"'"</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-SystemLiteral" name="NT-SystemLiteral"></a>[11]</td><td><code>SystemLiteral</code></td><td>::=</td><td><code>('"' [^"]* '"') | ("'" [^']* "'")</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-PubidLiteral" name="NT-PubidLiteral"></a>[12]</td><td><code>PubidLiteral</code></td><td>::=</td><td><code><a href="#NT-PubidChar">PubidChar</a><a href="#NT-PubidChar">PubidChar</a>'"'* '"'
| "'" (- "'")* "'"</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-PubidChar" name="NT-PubidChar"></a>[13]</td><td><code>PubidChar</code></td><td>::=</td><td><code>#x20 | #xD | #xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]</code></td></tr></tbody></table></div><div class="div2"><h3><a id="syntax" name="syntax"></a>2.4 Character Data and Markup</h3><h5><a id="d0e1106" name="d0e1106"></a>Character Data</h5><p><a href="#dt-text" title="Text">Text</a><a href="#dt-chardata" title="Character Data">character data</a><a id="dt-markup" name="dt-markup" title="Markup">Definition</a><a href="#dt-stag" title="Start-Tag">start-tags</a><a href="#dt-etag" title="End Tag">end-tags</a><a href="#dt-empty" title="Empty">empty-element tags</a><a href="#dt-entref" title="Entity Reference">entity references</a><a href="#dt-charref" title="Character Reference">character
references</a><a href="#dt-comment" title="Comment">comments</a><a href="#dt-cdsection" title="CDATA Section">CDATA section</a><a href="#dt-doctype" title="Document Type Declaration">document
type declarations</a><a href="#dt-pi" title="Processing instruction">processing instructions</a><a href="#NT-XMLDecl">XML declarations</a><a href="#NT-TextDecl">text declarations</a><b>Markup</b>consists of intermingledand markup. [:takes the form of,,,,,,delimiters,,,,,
and any white space that is at the top level of the document entity (that
is, outside the document element and not inside any other markup).]</p><p><a id="dt-chardata" name="dt-chardata" title="Character Data">Definition</a><b>character data</b>[: All text that is not markup
constitutes theof the document.]</p><p><a href="#dt-comment" title="Comment">comment</a><a href="#dt-pi" title="Processing instruction">processing
instruction</a><a href="#dt-cdsection" title="CDATA Section">CDATA section</a><a href="#dt-escape" title="escape">escaped</a><a href="#dt-charref" title="Character Reference">numeric character references</a><a href="#dt-compat" title="For Compatibility">for compatibility</a><a href="#dt-cdsection" title="CDATA Section">CDATA
section</a><code>&amp;amp;</code><code>&amp;lt;</code><code>&amp;gt;</code><code>&amp;gt;</code><code>]]&gt;</code><strong>MUST NOT</strong><strong>MUST</strong><strong>MUST</strong>The ampersand character (&amp;) and the left angle bracket (&lt;)appear
in their literal form, except when used as markup delimiters, or
within a, a, or a.

If they are needed elsewhere, theybeusing eitheror the strings "" and ""
respectively. The right angle bracket (>) may be represented using the string "",
and,, be escaped
using either "" or a character reference when it
appears in the string "" in content, when
that string is not marking the end of a.</p><p><code>]]&gt;</code><code>]]&gt;</code>In the content of elements, character data is any string of characters
which does not contain the start-delimiter of any markup and does not include the CDATA-section-close
delimiter, "". In a CDATA section,
character data is any string of characters not including the CDATA-section-close
delimiter, "".</p><p><code>&amp;apos;</code><code>&amp;quot;</code>To allow attribute values to contain both single and double quotes, the
apostrophe or single-quote character (') may be represented as "",
and the double-quote character (") as "".</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-CharData" name="NT-CharData"></a>[14]</td><td><code>CharData</code></td><td>::=</td><td><code>[^&lt;&amp;]* - ([^&lt;&amp;]* ']]&gt;' [^&lt;&amp;]*)</code></td></tr></tbody></table></div><div class="div2"><div class="exampleInner"><pre>&lt;!-- declarations for &lt;head> &amp; &lt;body> --></pre></div><div class="exampleInner"><pre>&lt;!-- B+, B, or B---></pre></div><h3><a id="sec-comments" name="sec-comments"></a>2.5 Comments</h3><h5><a id="d0e1149" name="d0e1149"></a>Comments</h5><p><a id="dt-comment" name="dt-comment" title="Comment">Definition</a><a href="#dt-markup" title="Markup">markup</a><a href="#dt-chardata" title="Character Data">character
data</a><a href="#dt-compat" title="For Compatibility">For
compatibility</a><b>Comments</b><code>--</code><strong>MAY</strong><strong>MUST NOT</strong><strong>MUST NOT</strong>[:may appear
anywhere in a document outside other;
in addition, they may appear within the document type declaration at places
allowed by the grammar. They are not part of the document's; an XML processor, but need not, make it possible for an
application to retrieve the text of comments., the string "" (double-hyphen)occur within comments.] Parameter
entity referencesbe recognized within comments.</p><p>An example of a comment:</p><p><code>---></code><em>not</em>Note
that the grammar does not allow a comment ending in. The
following example iswell-formed.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-Comment" name="NT-Comment"></a>[15]</td><td><code>Comment</code></td><td>::=</td><td><code><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a>'&lt;!--' ((- '-') | ('-'
(- '-')))* '-->'</code></td></tr></tbody></table></div><div class="div2"><h3><a id="sec-pi" name="sec-pi"></a>2.6 Processing Instructions</h3><h5><a id="d0e1188" name="d0e1188"></a>Processing Instructions</h5><p><a id="dt-pi" name="dt-pi" title="Processing instruction">Definition</a><b>Processing instructions</b>[:(PIs) allow documents to contain instructions for applications.]</p><p><a href="#dt-chardata" title="Character Data">character
data</a><a href="#NT-PITarget">PITarget</a><a href="#dt-notation" title="Notation">Notation</a><code>XML</code><code>xml</code><strong>MUST</strong><strong>MUST NOT</strong>PIs are not part of the document's, butbe passed through to the application. The PI begins
with a target () used to identify the application
to which the instruction is directed. The target names "", "",
and so on are reserved for standardization in this or future versions of this
specification. The XMLmechanism
may be used for formal declaration of PI targets. Parameter
entity referencesbe recognized within processing instructions.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-PI" name="NT-PI"></a>[16]</td><td><code>PI</code></td><td>::=</td><td><code><a href="#NT-PITarget">PITarget</a><a href="#NT-S">S</a><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a>'&lt;?'((* - (* '?>'*)))? '?>'</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-PITarget" name="NT-PITarget"></a>[17]</td><td><code>PITarget</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a>- (('X' | 'x') ('M' |
'm') ('L' | 'l'))</code></td></tr></tbody></table></div><div class="div2"><div class="exampleInner"><pre>&lt;![CDATA[&lt;greeting>Hello, world!&lt;/greeting>]]&gt;</pre></div><h3><a id="sec-cdata-sect" name="sec-cdata-sect"></a>2.7 CDATA Sections</h3><h5><a id="d0e1271" name="d0e1271"></a>CDATA Sections</h5><p><a id="dt-cdsection" name="dt-cdsection" title="CDATA Section">Definition</a><b>CDATA sections</b><code>&lt;![CDATA[</code><code>]]&gt;</code>[:may occur anywhere character data may occur; they are used to escape blocks
of text containing characters which would otherwise be recognized as markup.
CDATA sections begin with the string ""
and end with the string "":]</p><p><a href="#NT-CDEnd">CDEnd</a><code>&amp;lt;</code><code>&amp;amp;</code>Within a CDATA section, only thestring is
recognized as markup, so that left angle brackets and ampersands may occur
in their literal form; they need not (and cannot) be escaped using ""
and "". CDATA sections cannot nest.</p><p><a href="#dt-chardata" title="Character Data">character data</a><a href="#dt-markup" title="Markup">markup</a><code>&lt;greeting></code><code>&lt;/greeting></code>An example of a CDATA section, in which ""
and "" are recognized as, not:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-CDSect" name="NT-CDSect"></a>[18]</td><td><code>CDSect</code></td><td>::=</td><td><code><a href="#NT-CDStart">CDStart</a><a href="#NT-CData">CData</a><a href="#NT-CDEnd">CDEnd</a></code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-CDStart" name="NT-CDStart"></a>[19]</td><td><code>CDStart</code></td><td>::=</td><td><code>'&lt;![CDATA['</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-CData" name="NT-CData"></a>[20]</td><td><code>CData</code></td><td>::=</td><td><code><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a>(* - (*
']]&gt;'*))</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-CDEnd" name="NT-CDEnd"></a>[21]</td><td><code>CDEnd</code></td><td>::=</td><td><code>']]&gt;'</code></td></tr></tbody></table></div><div class="div2"><div class="exampleInner"><pre>&lt;?xml version="1.0"?>
&lt;greeting>Hello, world!&lt;/greeting></pre></div><div class="exampleInner"><pre>&lt;greeting>Hello, world!&lt;/greeting></pre></div><div class="diff-add"><p><a href="E10">E10</a><a href="#NT-VersionNum">VersionNum</a><strong>SHOULD NOT</strong>Even though theproduction matches
					any version number of the form '1.x', XML 1.0 documentsspecify a version number other than '1.0'.</p></div><div class="diff-add"><div class="note"><p class="prefix"><b>Note:</b></p><p><a href="E10">E10</a>When an XML 1.0 processor encounters a document that specifies
						a 1.x version number other than '1.0', it will process it as
						a 1.0 document.  This means that an XML 1.0 processor will accept
						1.x documents provided they do not use any non-1.0 features.</p></div></div><div class="constraint"><p class="prefix"><a id="vc-roottype" name="vc-roottype"></a><b>Validity constraint: Root Element Type</b></p><p><a href="#NT-Name">Name</a><a href="#dt-root" title="Root Element">root element</a><strong>MUST</strong>Thein the document type declarationmatch the element type of the.</p></div><div class="constraint"><p class="prefix"><a id="vc-PEinMarkupDecl" name="vc-PEinMarkupDecl"></a><b>Validity constraint: Proper Declaration/PE Nesting</b></p><p><a href="#dt-repltext" title="Replacement Text">replacement text</a><a href="#NT-markupdecl">markupdecl</a><a href="#dt-PERef" title="Parameter-entity reference">parameter-entity
reference</a><strong>MUST</strong><strong>MUST</strong>Parameter-entitybe properly nested with markup declarations. That is to say, if either
the first character or the last character of a markup declaration (above) is contained in the replacement text for a, bothbe contained in the same replacement text.</p></div><div class="constraint"><p class="prefix"><a id="wfc-PEinInternalSubset" name="wfc-PEinInternalSubset"></a><b>Well-formedness constraint: PEs in Internal Subset</b></p><p><a href="#dt-PERef" title="Parameter-entity reference">parameter-entity references</a><strong>MUST NOT</strong>In
the internal DTD subset,occur within markup declarations; they may occur where markup declarations can occur.
(This does not apply to references that occur in external parameter entities
or to the external subset.)</p></div><div class="constraint"><p class="prefix"><a id="ExtSubset" name="ExtSubset"></a><b>Well-formedness constraint: External Subset</b></p><p><a href="#NT-extSubset">extSubset</a><strong>MUST</strong>The external subset, if any,match the production for.</p></div><div class="constraint"><p class="prefix"><a id="PE-between-Decls" name="PE-between-Decls"></a><b>Well-formedness constraint: PE Between Declarations</b></p><p><a href="#NT-DeclSep">DeclSep</a><a href="#NT-extSubsetDecl">extSubsetDecl</a><strong>MUST</strong>The replacement text of a parameter entity reference
in amatch the production.</p></div><div class="exampleInner"><pre>&lt;?xml version="1.0"?>
&lt;!DOCTYPE greeting SYSTEM "hello.dtd">
&lt;greeting>Hello, world!&lt;/greeting></pre></div><div class="exampleInner"><pre>&lt;?xml version="1.0" encoding="UTF-8" ?>
&lt;!DOCTYPE greeting [
  &lt;!ELEMENT greeting (#PCDATA)>
]>
&lt;greeting>Hello, world!&lt;/greeting></pre></div><h3><a id="sec-prolog-dtd" name="sec-prolog-dtd"></a>2.8 Prolog and Document Type Declaration</h3><h5><a id="xmldoc" name="xmldoc"></a>Prolog</h5><h5><a id="dtd" name="dtd"></a>Document Type Definition</h5><h5><a id="ext-Subset" name="ext-Subset"></a>External Subset</h5><p><a id="dt-xmldecl" name="dt-xmldecl" title="XML Declaration">Definition</a><a href="#dt-wellformed" title="Well-Formed">well-formed</a><a href="#dt-valid" title="Validity">valid</a><b>XML declaration</b><strong>SHOULD</strong>[: XML documentsbegin with anwhich specifies the version of
XML being used.] For example, the following is a complete XML document,but not:</p><p>and so is this:</p><p><a href="#dt-doctype" title="Document Type Declaration">document
type declaration</a><a id="dt-valid" name="dt-valid" title="Validity">Definition</a><b>valid</b>The function of the markup in an XML document is to describe its storage and
logical structure and to associate attribute
name-value pairs with its logical structures. XML provides a mechanism, the, to define constraints on the logical structure
and to support the use of predefined storage units. [: An XML document isif it has an associated
document type declaration and if the document complies with the constraints
expressed in it.]</p><p><a href="#dt-element" title="Element">element</a><strong>MUST</strong>The document type declarationappear before the firstin the document.</p><p><a id="dt-doctype" name="dt-doctype" title="Document Type Declaration">Definition</a><a href="#dt-markupdecl" title="markup declaration">markup
declarations</a><a href="#dt-extent" title="External Entity">external entity</a><b>document
type declaration</b><b>DTD</b>[: The XMLcontains or points tothat provide a grammar for a class of documents. This
grammar is known as a document type definition, or. The document
type declaration can point to an external subset (a special kind of) containing markup declarations,
or can contain the markup declarations directly in an internal subset, or
can do both. The DTD for a document consists of both subsets taken together.]</p><p><a id="dt-markupdecl" name="dt-markupdecl" title="markup declaration">Definition</a><a href="#dt-eldecl" title="Element Type declaration">element type declaration</a><a href="#dt-attdecl" title="Attribute-List Declaration">attribute-list declaration</a><a href="#dt-entdecl" title="entity declaration">entity
declaration</a><a href="#dt-notdecl" title="Notation Declaration">notation declaration</a><a href="#dt-PE" title="Parameter entity">parameter
entities</a><a href="#sec-physical-struct"><b>4 Physical Structures</b></a><b>markup declaration</b>[:  Ais an, an, an, or a.]
These declarations may be contained in whole or in part within, as described in the well-formedness and validity constraints
below. For further
information, see.</p><p><a href="#NT-doctypedecl">doctypedecl</a>Note
that it is possible to construct a well-formed document containing athat neither points to an external subset nor contains an internal subset.</p><p><a href="#dt-repltext" title="Replacement Text">replacement text</a><a href="#dt-PE" title="Parameter entity">parameter
entities</a><a href="#NT-elementdecl">elementdecl</a><a href="#NT-AttlistDecl">AttlistDecl</a><a href="#dt-include" title="Include">included</a><em>after</em>The markup declarations may be made up in whole or in part of theof. The productions later in this specification for individual
nonterminals (,,
and so on) describe the declarationsall the parameter
entities have been.</p><p><a href="#sec-condition-sect"><b>3.4 Conditional Sections</b></a>Parameter
entity references are recognized anywhere in the DTD (internal and external
subsets and external parameter entities), except in literals, processing instructions,
comments, and the contents of ignored conditional sections (see).
They are also recognized in entity value literals. The use of parameter entities
in the internal subset is restricted as described below.</p><p><a href="#NT-DeclSep">DeclSep</a><a href="#NT-markupdecl">markupdecl</a><a href="#dt-PERef" title="Parameter-entity reference">parameter-entity references</a><a href="#dt-cond-section" title="conditional section">conditional section</a><strong>MUST</strong>Like the internal subset, the external subset and any external parameter
entities referenced
in aconsist of a series of
complete markup declarations of the types allowed by the non-terminal symbol, interspersed with white space or. However, portions of
the contents of the external subset or of these
external parameter entities may conditionally be ignored by using theconstruct; this is not
allowed in the internal subset but is
allowed in external parameter entities referenced in the internal subset.</p><p><a href="#dt-PERef" title="Parameter-entity reference">parameter-entity
references</a><em>within</em><em>between</em>The external subset and external parameter entities also differ from the
internal subset in that in them,are permittedmarkup declarations,
not onlymarkup declarations.</p><p>An example of an XML document with a document type declaration:</p><p><a href="#dt-sysid" title="System Identifier">system identifier</a><code>hello.dtd</code>The""
gives the address (a URI reference) of a DTD for the document.</p><p>The declarations can also be given locally, as in this example:</p><p><strong>MUST</strong>If both the external and internal subsets are used, the internal subsetbe considered to occur before the external subset. 
This has the effect that entity and attribute-list declarations in the internal
subset take precedence over those in the external subset.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-prolog" name="NT-prolog"></a>[22]</td><td><code>prolog</code></td><td>::=</td><td><code><a href="#NT-XMLDecl">XMLDecl</a><a href="#NT-Misc">Misc</a><a href="#NT-doctypedecl">doctypedecl</a><a href="#NT-Misc">Misc</a>?*
(*)?</code></td></tr><tr valign="baseline"><td><a id="NT-XMLDecl" name="NT-XMLDecl"></a>[23]</td><td><code>XMLDecl</code></td><td>::=</td><td><code><a href="#NT-VersionInfo">VersionInfo</a><a href="#NT-EncodingDecl">EncodingDecl</a><a href="#NT-SDDecl">SDDecl</a><a href="#NT-S">S</a>'&lt;?xml'??? '?>'</code></td></tr><tr valign="baseline"><td><a id="NT-VersionInfo" name="NT-VersionInfo"></a>[24]</td><td><code>VersionInfo</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Eq">Eq</a><a href="#NT-VersionNum">VersionNum</a><a href="#NT-VersionNum">VersionNum</a>'version'("'""'" | '"''"')</code></td></tr><tr valign="baseline"><td><a id="NT-Eq" name="NT-Eq"></a>[25]</td><td><code>Eq</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a>? '='?</code></td></tr><tr valign="baseline"><td><a id="NT-VersionNum" name="NT-VersionNum"></a>[26]</td><td><code>VersionNum</code></td><td>::=</td><td class="diff-chg"><code>'1.' [0-9]+</code></td><td class="diff-chg"><i><a href="E10">E10</a>/**/</i></td></tr><tr valign="baseline"><td><a id="NT-Misc" name="NT-Misc"></a>[27]</td><td><code>Misc</code></td><td>::=</td><td><code><a href="#NT-Comment">Comment</a><a href="#NT-PI">PI</a><a href="#NT-S">S</a>||</code></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-doctypedecl" name="NT-doctypedecl"></a>[28]</td><td><code>doctypedecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-ExternalID">ExternalID</a><a href="#NT-S">S</a><a href="#NT-intSubset">intSubset</a><a href="#NT-S">S</a>'&lt;!DOCTYPE'()??
('['']'?)? '>'</code></td><td><a href="#vc-roottype">[VC: Root Element Type]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#ExtSubset">[WFC: External Subset]</a></td></tr><tr valign="baseline"><td><a id="NT-DeclSep" name="NT-DeclSep"></a>[28a]</td><td><code>DeclSep</code></td><td>::=</td><td><code><a href="#NT-PEReference">PEReference</a><a href="#NT-S">S</a>|</code></td><td><a href="#PE-between-Decls">[WFC: PE Between Declarations]</a></td></tr><tr valign="baseline"><td><a id="NT-intSubset" name="NT-intSubset"></a>[28b]</td><td><code>intSubset</code></td><td>::=</td><td><code><a href="#NT-markupdecl">markupdecl</a><a href="#NT-DeclSep">DeclSep</a>(|)*</code></td></tr><tr valign="baseline"><td><a id="NT-markupdecl" name="NT-markupdecl"></a>[29]</td><td><code>markupdecl</code></td><td>::=</td><td><code><a href="#NT-elementdecl">elementdecl</a><a href="#NT-AttlistDecl">AttlistDecl</a><a href="#NT-EntityDecl">EntityDecl</a><a href="#NT-NotationDecl">NotationDecl</a><a href="#NT-PI">PI</a><a href="#NT-Comment">Comment</a>|||||</code></td><td><a href="#vc-PEinMarkupDecl">[VC: Proper Declaration/PE Nesting]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#wfc-PEinInternalSubset">[WFC: PEs in Internal Subset]</a></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-extSubset" name="NT-extSubset"></a>[30]</td><td><code>extSubset</code></td><td>::=</td><td><code><a href="#NT-TextDecl">TextDecl</a><a href="#NT-extSubsetDecl">extSubsetDecl</a>?</code></td></tr><tr valign="baseline"><td><a id="NT-extSubsetDecl" name="NT-extSubsetDecl"></a>[31]</td><td><code>extSubsetDecl</code></td><td>::=</td><td><code><a href="#NT-markupdecl">markupdecl</a><a href="#NT-conditionalSect">conditionalSect</a><a href="#NT-DeclSep">DeclSep</a>(||)*</code></td></tr></tbody></table></div><div class="div2"><div class="constraint"><p class="prefix"><a id="vc-check-rmd" name="vc-check-rmd"></a><b>Validity constraint: Standalone Document Declaration</b></p><p><strong>MUST</strong>The
standalone document declarationhave the value "no" if
any external markup declarations contain declarations of:</p><ul><li><p><a href="#dt-default" title="Attribute Default">default</a>attributes withvalues,
if elements to which these attributes apply appear in the document without
specifications of values for these attributes, or</p></li><li><p><a href="#dt-entref" title="Entity Reference">references</a><code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code>entities (other than,,,,), ifto those entities appear in the document, or</p></li><li><p><a href="#AVNormalize"><cite>normalization</cite></a>attributes with
tokenized types, where the
attribute appears in the document with a value such thatwill produce a different value from that which would be produced
in the absence of the declaration, or</p></li><li><p><a href="#dt-elemcontent" title="Element content">element content</a>element types with,
if white space occurs directly within any instance of those types.</p></li></ul></div><div class="exampleInner"><pre>&lt;?xml version="1.0" standalone='yes'?></pre></div><h3><a id="sec-rmd" name="sec-rmd"></a>2.9 Standalone Document Declaration</h3><h5><a id="fulldtd" name="fulldtd"></a>Standalone Document Declaration</h5><p><a href="#dt-xml-proc" title="XML Processor">XML processor</a><a href="#dt-docent" title="Document Entity">document
entity</a><a id="dt-extmkpdecl" name="dt-extmkpdecl" title="External Markup Declaration">Definition</a><b>external
markup declaration</b>Markup declarations can affect the content of the document, as passed from
anto an application; examples
are attribute defaults and entity declarations. The standalone document declaration,
which may appear as a component of the XML declaration, signals whether or
not there are such declarations which appear external to theor in parameter entities. [: Anis defined as a markup declaration occurring in
the external subset or in a parameter entity (external or internal, the latter
being included because non-validating processors are not required to read
them).]</p><p><a href="#dt-extmkpdecl" title="External Markup Declaration">external markup declarations</a><em>declarations</em><em>entities</em>In a standalone document declaration, the value "yes" indicates
that there are nowhich
affect the information passed from the XML processor to the application. The
value "no" indicates that there are or may be such external
markup declarations. Note that the standalone document declaration only denotes
the presence of external; the presence, in a document,
of references to external, when those entities are internally
declared, does not change its standalone status.</p><p>If there are no external markup declarations, the standalone document declaration
has no meaning. If there are external markup declarations but there is no
standalone document declaration, the value "no" is assumed.</p><p><code>standalone="no"</code>Any XML document for whichholds can be converted
algorithmically to a standalone document, which may be desirable for some
network delivery applications.</p><p>An example XML declaration with a standalone document declaration:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-SDDecl" name="NT-SDDecl"></a>[32]</td><td><code>SDDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Eq">Eq</a>'standalone'(("'" ('yes' | 'no') "'") | ('"' ('yes' | 'no') '"'))</code></td><td><a href="#vc-check-rmd">[VC: Standalone Document Declaration]</a></td></tr></tbody></table></div><div class="div2"><div class="exampleInner"><pre>&lt;!ATTLIST poem  xml:space (default|preserve) 'preserve'>

&lt;!ATTLIST pre xml:space (preserve) #FIXED 'preserve'></pre></div><h3><a id="sec-white-space" name="sec-white-space"></a>2.10 White Space Handling</h3><p>In editing XML documents, it is often convenient to use "white space"
(spaces, tabs, and blank lines)
to set apart the markup for greater readability. Such white space is typically
not intended for inclusion in the delivered version of the document. On the
other hand, "significant" white space that should be preserved
in the delivered version is common, for example in poetry and source code.</p><p><a href="#dt-xml-proc" title="XML Processor">XML processor</a><a href="#dt-validating" title="Validating Processor">validating XML processor</a><a href="#dt-elemcontent" title="Element content">element content</a><strong>MUST</strong><strong>MUST</strong>Analways pass
all characters in a document that are not markup through to the application.
Aalso
inform the application which of these characters constitute white space appearing
in.</p><p><a href="#dt-attr" title="Attribute">attribute</a><a href="#dt-attdecl" title="Attribute-List Declaration">declared</a><a href="#dt-enumerated" title="Enumerated Attribute Values">enumerated
type</a><code>xml:space</code><strong>MUST</strong><strong>MUST</strong>A specialnamedmay be attached to an element to signal an intention that in that element,
white space should be preserved by applications. In valid documents, this
attribute, like any other,beif it is used. When declared, itbe given as anwhose values
are one or both of "default" and "preserve".
For example:</p><p><code>xml:space</code><code>xml:space</code><strong>MAY</strong><strong>MAY</strong>The value "default" signals that applications' default white-space
processing modes are acceptable for this element; the value "preserve"
indicates the intent that applications preserve all the white space. This
declared intent is considered to apply to all elements within the content
of the element where it is specified, unless overridden with
another instance of theattribute. This specification does not give meaning to any value ofother than "default" and "preserve". It is an error for other values to be specified; the XML processorreport the error orrecover by ignoring the attribute specification or by reporting the (erroneous) value to the application. Applications may ignore or reject erroneous values.</p><p><a href="#dt-root" title="Root Element">root element</a>Theof any document is considered
to have signaled no intentions as regards application space handling, unless
it provides a value for this attribute or the attribute is declared with a
default value.</p></div><div class="div2"><h3><a id="sec-line-ends" name="sec-line-ends"></a>2.11 End-of-Line Handling</h3><p><a href="#dt-parsedent" title="Text Entity">parsed entities</a>XMLare often stored
in computer files which, for editing convenience, are organized into lines.
These lines are typically separated by some combination of the characters
CARRIAGE RETURN (#xD) and LINE FEED (#xA).</p><p><a href="#dt-app" title="Application">applications</a><a href="#dt-xml-proc" title="XML Processor">XML
processor</a><strong>MUST</strong>To
simplify the tasks of, thebehave as if it normalized all line breaks in external parsed
entities (including the document entity) on input, before parsing, by translating
both the two-character sequence #xD #xA and any #xD that is not followed by
#xA to a single #xA character.</p></div><div class="div2"><div class="exampleInner"><pre>&lt;p xml:lang="en">The quick brown fox jumps over the lazy dog.&lt;/p>
&lt;p xml:lang="en-GB">What colour is it?&lt;/p>
&lt;p xml:lang="en-US">What color is it?&lt;/p>
&lt;sp who="Faust" desc='leise' xml:lang="de">
  &lt;l>Habe nun, ach! Philosophie,&lt;/l>
  &lt;l>Juristerei, und Medizin&lt;/l>
  &lt;l>und leider auch Theologie&lt;/l>
  &lt;l>durchaus studiert mit heißem Bemüh'n.&lt;/l>
&lt;/sp></pre></div><div class="note"><p class="prefix"><b>Note:</b></p><p><code>xml:lang</code>Language information may also be provided by external transport protocols (e.g. HTTP or
  MIME). When available, this information may be used by XML applications, but the more local
  information provided byshould be considered to override it.</p></div><div class="exampleInner"><pre>xml:lang CDATA #IMPLIED</pre></div><div class="exampleInner"><pre>&lt;!ATTLIST poem   xml:lang CDATA 'fr'>
&lt;!ATTLIST gloss  xml:lang CDATA 'en'>
&lt;!ATTLIST note   xml:lang CDATA 'en'></pre></div><h3><a id="sec-lang-tag" name="sec-lang-tag"></a>2.12 Language Identification</h3><p><a href="#dt-attr" title="Attribute">attribute</a><a href="#dt-attdecl" title="Attribute-List Declaration">declared</a><a href="#RFC1766">[IETF BCP 47]</a><cite>Tags
for the Identification of Languages</cite><code>xml:lang</code><span class="diff-del"><span>, or its successor</span></span><strong>MUST</strong>In document processing, it is often useful to identify the natural or formal
language in which the content is written. A specialnamedmay be inserted in documents to specify the language
used in the contents and attribute values of any element in an XML document.
In valid documents, this attribute, like any other,beif it is used. The
values of the attribute are language identifiers as defined by,; in addition, the empty string may be specified.</p><p>(Productions 33 through 38 have been removed.)</p><p>For example:</p><p><code>xml:lang</code><code>xml:lang</code><code>xml:lang</code><code>xml:lang</code><code>xml:lang</code><code>xml:lang</code>The language specified byapplies to the element where it is specified
		 (including the values of its attributes), and  to all elements in its content unless
     overridden with another instance of. In particular, the empty value ofis used on an element B to override
		 a specification ofon an enclosing element A, without specifying another language. Within B,
		 it is considered that there is no language information available, just as ifhad not been specified
		 on B or any of its ancestors. Applications determine which of an element's attribute values
     and which parts of its character content, if any, are treated as language-dependent values described by.</p><p><code>xml:lang</code>A simple declaration formight take the form</p><p><code>xml:lang</code>but specific default values may also be given, if appropriate. In a collection
of French poems for English students, with glosses and notes in English, theattribute might be declared this way:</p></div><h2><a id="sec-documents" name="sec-documents"></a>2 Documents</h2><p><a id="dt-xml-doc" name="dt-xml-doc" title="XML Document">Definition</a><a href="#dt-wellformed" title="Well-Formed">well-formed</a><a href="#dt-valid" title="Validity">valid</a><b>XML
document</b>[:  A data object is anif it is,
as defined in this specification. In addition, the XML document isif it meets certain further constraints.]</p><p><a href="#dt-entity" title="Entity">entities</a><a href="#dt-entref" title="Entity Reference">refer</a><a href="#dt-docent" title="Document Entity">document entity</a><a href="#wf-entities"><b>4.3.2 Well-Formed Parsed Entities</b></a><strong>MUST</strong>Each XML document has both a logical and a physical structure. Physically,
the document is composed of units called.
An entity mayto other entities to
cause their inclusion in the document. A document begins in a "root"
or. Logically, the document
is composed of declarations, elements, comments, character references, and
processing instructions, all of which are indicated in the document by explicit
markup. The logical and physical structuresnest properly, as described
in.</p></div><div class="div1"><div class="constraint"><p class="prefix"><a id="GIMatch" name="GIMatch"></a><b>Well-formedness constraint: Element Type Match</b></p><p><a href="#NT-Name">Name</a><strong>MUST</strong>Thein an element's end-tagmatch the element type in the start-tag.</p></div><div class="constraint"><ol class="enumar"><li><p><a href="#dt-content" title="Content">content</a><b>EMPTY</b>The declaration matchesand the element has no(not even entity
references, comments, PIs or white space).</p></li><li><p><a href="#NT-children">children</a><a href="#dt-parentchild" title="Parent/Child">child elements</a><a href="#NT-Misc">Misc</a><a href="#NT-S">S</a><a href="#NT-S">S</a>The declaration matchesand the
sequence ofbelongs
to the language generated by the regular expression in the content model,
with optional white space, comments and
PIs (i.e. markup matching production [27]) between the
start-tag and the first child element, between child elements, or between
the last child element and the end-tag. Note that a CDATA section containing
only white space or a reference
to an entity whose replacement text is character references expanding to white
space do not
match the nonterminal, and
hence cannot appear in these positions; however, a
reference to an internal entity with a literal value consisting of character
references expanding to white space does match, since its
replacement text is the white space resulting from expansion of the character
references.</p></li><li><p><a href="#NT-Mixed">Mixed</a><a href="#dt-chardata" title="Character Data">character data</a><a href="#dt-cdsection" title="CDATA Section">CDATA sections</a><a href="#dt-comment" title="Comment">comments</a><a href="#dt-pi" title="Processing instruction">PIs</a><a href="#dt-parentchild" title="Parent/Child">child elements</a>The declaration matches, and the content
(after replacing
any entity references with their replacement text) consists of(including),,andwhose types match names in the
content model.</p></li><li><p><a href="#dt-cdsection" title="CDATA Section">CDATA
sections</a><a href="#dt-comment" title="Comment">comments</a><a href="#dt-pi" title="Processing instruction">PIs</a><a href="#dt-parentchild" title="Parent/Child">child elements</a><b>ANY</b>The declaration matches, and the content (after replacing
any entity references with their replacement text)
consists of character data,,,andwhose types have been declared.</p></li></ol><p class="prefix"><a id="elementvalid" name="elementvalid"></a><b>Validity constraint: Element Valid</b></p><p><a href="#NT-elementdecl">elementdecl</a><a href="#NT-Name">Name</a>An element is valid
if there is a declaration matchingwhere thematches the element type, and one of
the following holds:</p></div><div class="div2"><div class="constraint"><p class="prefix"><a id="uniqattspec" name="uniqattspec"></a><b>Well-formedness constraint: Unique Att Spec</b></p><p><strong>MUST NOT</strong>An attribute nameappear more than once in the same start-tag or empty-element tag.</p></div><div class="constraint"><p class="prefix"><a id="ValueType" name="ValueType"></a><b>Validity constraint: Attribute Value Type</b></p><p><a href="#attdecls"><b>3.3 Attribute-List Declarations</b></a><strong>MUST</strong><strong>MUST</strong>The attributehave been declared; the valuebe of the type declared for it. (For attribute
types, see.)</p></div><div class="constraint"><p class="prefix"><a id="NoExternalRefs" name="NoExternalRefs"></a><b>Well-formedness constraint: No External Entity References</b></p><p><strong>MUST NOT</strong>Attribute
valuescontain direct or indirect entity references to external entities.</p></div><div class="constraint"><p class="prefix"><a id="CleanAttrVals" name="CleanAttrVals"></a><b><code>&lt;</code>Well-formedness constraint: Noin Attribute Values</b></p><p><a href="#dt-repltext" title="Replacement Text">replacement text</a><code>&lt;</code><strong>MUST NOT</strong>Theof any entity
referred to directly or indirectly in an attribute valuecontain a.</p></div><div class="exampleInner"><pre>&lt;termdef id="dt-dog" term="dog"></pre></div><div class="exampleInner"><pre>&lt;/termdef></pre></div><div class="exampleInner"><pre>&lt;IMG align="left"
 src="http://www.w3.org/Icons/WWW/w3c_home" />
&lt;br>&lt;/br>
&lt;br/></pre></div><h3><a id="sec-starttags" name="sec-starttags"></a>3.1 Start-Tags, End-Tags, and Empty-Element Tags</h3><h5><a id="d0e2259" name="d0e2259"></a>Start-tag</h5><h5><a id="d0e2403" name="d0e2403"></a>End-tag</h5><h5><a id="d0e2433" name="d0e2433"></a>Content of Elements</h5><h5><a id="d0e2480" name="d0e2480"></a>Tags for Empty Elements</h5><p><a id="dt-stag" name="dt-stag" title="Start-Tag">Definition</a><b>start-tag</b>[: The beginning of every non-empty
XML element is marked by a.]</p><p><a href="#NT-Name">Name</a><a id="dt-attr" name="dt-attr" title="Attribute">Definition</a><a href="#NT-Name">Name</a><a href="#NT-AttValue">AttValue</a><a id="dt-attrname" name="dt-attrname" title="Attribute Name">Definition</a><a href="#NT-Name">Name</a><a id="dt-attrval" name="dt-attrval" title="Attribute Value">Definition</a><a href="#NT-AttValue">AttValue</a><b>type</b><b>attribute specifications</b><b>attribute name</b><b>attribute value</b><code>'</code><code>"</code>Thein the start- and end-tags gives the element's. [:  The-pairs are referred to as theof the
element], [: with thein each pair referred to as the]
and [: the content of the(the text between theordelimiters) as the.] Note
that the order of attribute specifications in a start-tag or empty-element
tag is not significant.</p><p>An example of a start-tag:</p><p><a id="dt-etag" name="dt-etag" title="End Tag">Definition</a><b>end-tag</b><strong>MUST</strong>[: The end of every element that begins
with a start-tagbe marked by ancontaining a name
that echoes the element's type as given in the start-tag:]</p><p>An example of an end-tag:</p><p><a id="dt-content" name="dt-content" title="Content">Definition</a><a href="#dt-text" title="Text">text</a><b>content</b>[: Thebetween the start-tag and end-tag is called the element's:]</p><p><a id="dt-empty" name="dt-empty" title="Empty">Definition</a><a href="#NT-content">content</a><a id="dt-eetag" name="dt-eetag" title="empty-element tag">Definition</a><b>empty</b><b>empty-element
tag</b>[: An element
with nois said to be.] The representation
of an empty element is either a start-tag immediately followed by an end-tag,
or an empty-element tag. [: Antakes a special form:]</p><p><a href="#dt-interop" title="For interoperability">For
interoperability</a><b>EMPTY</b><strong>SHOULD</strong><strong>SHOULD</strong>Empty-element tags may be used for any element which has no content, whether
or not it is declared using the keyword., the empty-element tagbe used, andonly be used, for elements which are declared
EMPTY.</p><p>Examples of empty elements:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-STag" name="NT-STag"></a>[40]</td><td><code>STag</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-Attribute">Attribute</a><a href="#NT-S">S</a>'&lt;'()*? '>'</code></td><td><a href="#uniqattspec">[WFC: Unique Att Spec]</a></td></tr><tr valign="baseline"><td><a id="NT-Attribute" name="NT-Attribute"></a>[41]</td><td><code>Attribute</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-Eq">Eq</a><a href="#NT-AttValue">AttValue</a></code></td><td><a href="#ValueType">[VC: Attribute Value Type]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#NoExternalRefs">[WFC: No External Entity References]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#CleanAttrVals">[WFC: No &lt; in Attribute Values]</a></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-ETag" name="NT-ETag"></a>[42]</td><td><code>ETag</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-S">S</a>'&lt;/'?
'>'</code></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-content" name="NT-content"></a>[43]</td><td><code>content</code></td><td>::=</td><td><code><a href="#NT-CharData">CharData</a><a href="#NT-element">element</a><a href="#NT-Reference">Reference</a><a href="#NT-CDSect">CDSect</a><a href="#NT-PI">PI</a><a href="#NT-Comment">Comment</a><a href="#NT-CharData">CharData</a>? ((||||)?)*</code></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-EmptyElemTag" name="NT-EmptyElemTag"></a>[44]</td><td><code>EmptyElemTag</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-Attribute">Attribute</a><a href="#NT-S">S</a>'&lt;'()*? '/>'</code></td><td><a href="#uniqattspec">[WFC: Unique Att Spec]</a></td></tr></tbody></table></div><div class="div2"><div class="constraint"><p class="prefix"><a id="EDUnique" name="EDUnique"></a><b>Validity constraint: Unique Element Type Declaration</b></p><p><strong>MUST NOT</strong>An element typebe declared more than once.</p></div><div class="exampleInner"><pre>&lt;!ELEMENT br EMPTY>
&lt;!ELEMENT p (#PCDATA|emph)* >
&lt;!ELEMENT %name.para; %content.para; >
&lt;!ELEMENT container ANY></pre></div><div class="div3"><div class="constraint"><p class="prefix"><a id="vc-PEinGroup" name="vc-PEinGroup"></a><b>Validity constraint: Proper Group/PE Nesting</b></p><p><a href="#dt-repltext" title="Replacement Text">replacement text</a><a href="#NT-choice">choice</a><a href="#NT-seq">seq</a><a href="#NT-Mixed">Mixed</a><a href="#dt-PERef" title="Parameter-entity reference">parameter
entity</a><strong>MUST</strong><strong>MUST</strong>Parameter-entitybe properly nested with parenthesized
groups. That is to say, if either of the opening or closing parentheses in
a,, orconstruct is contained in the replacement text for a, bothbe contained in the same replacement text.</p><p><a href="#dt-interop" title="For interoperability">For interoperability</a><a href="#NT-choice">choice</a><a href="#NT-seq">seq</a><a href="#NT-Mixed">Mixed</a><code>|</code><code>,</code><strong>SHOULD</strong><strong>SHOULD</strong>, if a parameter-entity reference
appears in a,, orconstruct, its replacement textcontain at
least one non-blank character, and neither the first nor last non-blank character
of the replacement textbe a connector (or).</p></div><div class="exampleInner"><pre>&lt;!ELEMENT spec (front, body, back?)>
&lt;!ELEMENT div1 (head, (p | list | note)*, div2*)>
&lt;!ELEMENT dictionary-body (%div.mix; | %dict.mix;)*></pre></div><h4><a id="sec-element-content" name="sec-element-content"></a>3.2.1 Element Content</h4><h5><a id="d0e2638" name="d0e2638"></a>Element-content Models</h5><p><a id="dt-elemcontent" name="dt-elemcontent" title="Element content">Definition</a><a href="#dt-stag" title="Start-Tag">type</a><a href="#dt-parentchild" title="Parent/Child">child</a><a href="#NT-S">S</a><a id="dt-content-model" name="dt-content-model" title="Content model">Definition</a><a href="#NT-cp">cp</a><b>element content</b><b>content
model</b><strong>MUST</strong>[: An elementhaswhen elements
of that typecontain onlyelements (no character data), optionally separated by white space (characters
matching the nonterminal).]
						[: In this case, the constraint includes a, a simple grammar governing the allowed types of the
child elements and the order in which they are allowed to appear.]
The grammar is built on content particles (s), which
consist of names, choice lists of content particles, or sequence lists of
content particles:</p><p><a href="#NT-Name">Name</a><a href="#dt-parentchild" title="Parent/Child">child</a><a href="#dt-elemcontent" title="Element content">element
content</a><a href="#dt-elemcontent" title="Element content">element content</a><code>+</code><code>*</code><code>?</code><strong>MUST</strong><strong>MUST</strong>where eachis the type of an element which
may appear as a. Any content
particle in a choice list may appear in theat the location where the choice list appears in the grammar;
content particles occurring in a sequence listeach appear in thein the order given in the list.
The optional character following a name or list governs whether the element
or the content particles in the list may occur one or more (),
zero or more (), or zero or one times (). The
absence of such an operator means that the element or content particleappear exactly once. This syntax and meaning are identical to those used in
the productions in this specification.</p><p><a href="#dt-compat" title="For Compatibility">For
compatibility</a><a href="#determinism"><b>E Deterministic Content Models</b></a>The content of an element matches a content model if and only if it is
possible to trace out a path through the content model, obeying the sequence,
choice, and repetition operators and matching each element in the content
against an element type in the content model., it is an error if the content model
allows an element to match more than one occurrence of an element type in the
content model. For more information, see.</p><p>Examples of element-content models:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-children" name="NT-children"></a>[47]</td><td><code>children</code></td><td>::=</td><td><code><a href="#NT-choice">choice</a><a href="#NT-seq">seq</a>(|)
('?' | '*' | '+')?</code></td></tr><tr valign="baseline"><td><a id="NT-cp" name="NT-cp"></a>[48]</td><td><code>cp</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a><a href="#NT-choice">choice</a><a href="#NT-seq">seq</a>(||) ('?' | '*' | '+')?</code></td></tr><tr valign="baseline"><td><a id="NT-choice" name="NT-choice"></a>[49]</td><td><code>choice</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-cp">cp</a><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-cp">cp</a><a href="#NT-S">S</a>'('?(? '|'?)+? ')'</code></td><td><a href="#vc-PEinGroup">[VC: Proper Group/PE Nesting]</a></td></tr><tr valign="baseline"><td><a id="NT-seq" name="NT-seq"></a>[50]</td><td><code>seq</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-cp">cp</a><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-cp">cp</a><a href="#NT-S">S</a>'('?(? ','?)*? ')'</code></td><td><a href="#vc-PEinGroup">[VC: Proper Group/PE Nesting]</a></td></tr></tbody></table></div><div class="div3"><div class="constraint"><p class="prefix"><a id="vc-MixedChildrenUnique" name="vc-MixedChildrenUnique"></a><b>Validity constraint: No Duplicate Types</b></p><p><strong>MUST NOT</strong>The
same nameappear more than once in a single mixed-content declaration.</p></div><div class="exampleInner"><pre>&lt;!ELEMENT p (#PCDATA|a|ul|b|i|em)*>
&lt;!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* >
&lt;!ELEMENT b (#PCDATA)></pre></div><h4><a id="sec-mixed-content" name="sec-mixed-content"></a>3.2.2 Mixed Content</h4><h5><a id="d0e2826" name="d0e2826"></a>Mixed-content Declaration</h5><p><a id="dt-mixed" name="dt-mixed" title="Mixed Content">Definition</a><a href="#dt-stag" title="Start-Tag">type</a><a href="#dt-parentchild" title="Parent/Child">child</a><b>mixed content</b>[: An elementhaswhen elements of that type may contain character
data, optionally interspersed withelements.] In this case, the types of the child elements may be constrained,
but not their order or their number of occurrences:</p><p><a href="#NT-Name">Name</a><b>#PCDATA</b>where thes give the types of elements that
may appear as children. The
keywordderives historically from the term "parsed
character data."</p><p>Examples of mixed content declarations:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-Mixed" name="NT-Mixed"></a>[51]</td><td><code>Mixed</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a>'('? '#PCDATA' (?
'|'?)*?
')*'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a>| '('? '#PCDATA'? ')'</code></td><td><a href="#vc-PEinGroup">[VC: Proper Group/PE Nesting]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#vc-MixedChildrenUnique">[VC: No Duplicate Types]</a></td></tr></tbody></table></div><h3><a id="elemdecls" name="elemdecls"></a>3.2 Element Type Declarations</h3><h5><a id="d0e2553" name="d0e2553"></a>Element Type Declaration</h5><p><a href="#dt-element" title="Element">element</a><a href="#dt-xml-doc" title="XML Document">XML document</a><a href="#dt-valid" title="Validity">validation</a><a href="#dt-content" title="Content">content</a>Thestructure of anmay, forpurposes, be constrained using element type and attribute-list declarations.
An element type declaration constrains the element's.</p><p><a href="#dt-parentchild" title="Parent/Child">children</a><strong>MAY</strong>Element type declarations often constrain which element types can appear
asof the element. At user
option, an XML processorissue a warning when a declaration mentions an
element type for which no declaration is provided, but this is not an error.</p><p><a id="dt-eldecl" name="dt-eldecl" title="Element Type declaration">Definition</a><b>element
type declaration</b>[: Antakes the form:]</p><p><a href="#NT-Name">Name</a>where thegives the element type being declared.</p><p>Examples of element type declarations:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-elementdecl" name="NT-elementdecl"></a>[45]</td><td><code>elementdecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-contentspec">contentspec</a><a href="#NT-S">S</a>'&lt;!ELEMENT'?
'>'</code></td><td><a href="#EDUnique">[VC: Unique Element Type Declaration]</a></td></tr><tr valign="baseline"><td><a id="NT-contentspec" name="NT-contentspec"></a>[46]</td><td><code>contentspec</code></td><td>::=</td><td><code><a href="#NT-Mixed">Mixed</a><a href="#NT-children">children</a>'EMPTY' | 'ANY' ||</code></td></tr></tbody></table></div><div class="div2"><div class="div3"><div class="constraint"><p class="prefix"><a id="id" name="id"></a><b>Validity constraint: ID</b></p><p><a href="#NT-Name">Name</a><b>ID</b><strong>MUST</strong><strong>MUST NOT</strong><strong>MUST</strong>Values of typematch theproduction. A nameappear more than once
in an XML document as a value of this type; i.e., ID valuesuniquely
identify the elements which bear them.</p></div><div class="constraint"><p class="prefix"><a id="one-id-per-el" name="one-id-per-el"></a><b>Validity constraint: One ID per Element Type</b></p><p><strong>MUST NOT</strong>An element typehave more than one ID attribute specified.</p></div><div class="constraint"><p class="prefix"><a id="id-default" name="id-default"></a><b>Validity constraint: ID Attribute Default</b></p><p><b>#IMPLIED</b><b>#REQUIRED</b><strong>MUST</strong>An ID attributehave a declared default ofor.</p></div><div class="constraint"><p class="prefix"><a id="idref" name="idref"></a><b>Validity constraint: IDREF</b></p><p><a href="#NT-Name">Name</a><a href="#NT-Names">Names</a><a href="#NT-Name">Name</a><b>IDREF</b><b>IDREFS</b><b>IDREF</b><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong>Values of typematch theproduction, and values of typematch; eachmatch the value of an ID attribute on some element in the XML document;
i.e.valuesmatch the value of some ID attribute.</p></div><div class="constraint"><p class="prefix"><a id="entname" name="entname"></a><b>Validity constraint: Entity Name</b></p><p><a href="#NT-Name">Name</a><a href="#NT-Names">Names</a><a href="#NT-Name">Name</a><a href="#dt-unparsed" title="Unparsed Entity">unparsed entity</a><a href="#dt-doctype" title="Document Type Declaration">DTD</a><b>ENTITY</b><b>ENTITIES</b><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong>Values of typematch theproduction, values of typematch; eachmatch the name of andeclared in the.</p></div><div class="constraint"><p class="prefix"><a id="nmtok" name="nmtok"></a><b>Validity constraint: Name Token</b></p><p><a href="#NT-Nmtoken">Nmtoken</a><a href="#NT-Nmtokens">Nmtokens</a><b>NMTOKEN</b><b>NMTOKENS</b><strong>MUST</strong><strong>MUST</strong>Values of typematch theproduction; values of typematch.</p></div><div class="constraint"><p class="prefix"><a id="notatn" name="notatn"></a><b>Validity constraint: Notation Attributes</b></p><p><a href="#Notations"><cite>notation</cite></a><strong>MUST</strong><strong>MUST</strong>Values of this typematch one of thenames
included in the declaration; all notation names in the declarationbe
declared.</p></div><div class="constraint"><p class="prefix"><a id="OneNotationPer" name="OneNotationPer"></a><b>Validity constraint: One Notation Per Element Type</b></p><p><b>NOTATION</b><strong>MUST NOT</strong>An element typehave more than oneattribute specified.</p></div><div class="constraint"><p class="prefix"><a id="NoNotationEmpty" name="NoNotationEmpty"></a><b>Validity constraint: No Notation on Empty Element</b></p><p><a href="#dt-compat" title="For Compatibility">For compatibility</a><b>NOTATION</b><b>EMPTY</b><strong>MUST NOT</strong>,
an attribute of typebe declared on an element
declared.</p></div><div class="constraint"><p class="prefix"><a id="NoDuplicateTokens" name="NoDuplicateTokens"></a><b>Validity constraint: No Duplicate Tokens</b></p><p><a href="#NT-NotationType">NotationType</a><a href="#NT-Nmtoken">NmToken</a><a href="#NT-Enumeration">Enumeration</a><strong>MUST</strong>The notation names in a singleattribute declaration, as well as thes in a singleattribute declaration,all be distinct.</p></div><div class="constraint"><p class="prefix"><a id="enum" name="enum"></a><b>Validity constraint: Enumeration</b></p><p><a href="#NT-Nmtoken">Nmtoken</a><strong>MUST</strong>Values of this typematch
one of thetokens in the declaration.</p></div><h4><a id="sec-attribute-types" name="sec-attribute-types"></a>3.3.1 Attribute Types</h4><h5><a id="d0e3004" name="d0e3004"></a>Attribute Types</h5><h5><a id="d0e3200" name="d0e3200"></a>Enumerated Attribute Types</h5><p><a href="#AVNormalize"><b>3.3.3 Attribute-Value Normalization</b></a>XML attribute types are of three kinds: a string type, a set of tokenized
types, and enumerated types. The string type may take any literal string as
a value; the tokenized types are more constrained.
The validity constraints noted in the grammar are applied after the attribute
value has been normalized as described in.</p><p><a id="dt-enumerated" name="dt-enumerated" title="Enumerated Attribute Values">Definition</a><b>Enumerated attributes</b><strong>MUST</strong>[:have a list of allowed values in their declaration
						]. Theytake one of those values.  There are two kinds of enumerated attribute types:</p><p><a href="#dt-notation" title="Notation">notation</a><b>NOTATION</b>Aattribute identifies a,
declared in the DTD with associated system and/or public identifiers, to be
used in interpreting the element to which the attribute is attached.</p><p><a href="#dt-interop" title="For interoperability">For interoperability,</a><a href="#NT-Nmtoken">Nmtoken</a><strong>SHOULD NOT</strong>the sameoccur more than once in the enumerated
attribute types of a single element type.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-AttType" name="NT-AttType"></a>[54]</td><td><code>AttType</code></td><td>::=</td><td><code><a href="#NT-StringType">StringType</a><a href="#NT-TokenizedType">TokenizedType</a><a href="#NT-EnumeratedType">EnumeratedType</a>||</code></td></tr><tr valign="baseline"><td><a id="NT-StringType" name="NT-StringType"></a>[55]</td><td><code>StringType</code></td><td>::=</td><td><code>'CDATA'</code></td></tr><tr valign="baseline"><td><a id="NT-TokenizedType" name="NT-TokenizedType"></a>[56]</td><td><code>TokenizedType</code></td><td>::=</td><td><code>'ID'</code></td><td><a href="#id">[VC: ID]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#one-id-per-el">[VC: One ID per Element Type]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#id-default">[VC: ID Attribute Default]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'IDREF'</code></td><td><a href="#idref">[VC: IDREF]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'IDREFS'</code></td><td><a href="#idref">[VC: IDREF]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'ENTITY'</code></td><td><a href="#entname">[VC: Entity Name]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'ENTITIES'</code></td><td><a href="#entname">[VC: Entity Name]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'NMTOKEN'</code></td><td><a href="#nmtok">[VC: Name Token]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| 'NMTOKENS'</code></td><td><a href="#nmtok">[VC: Name Token]</a></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-EnumeratedType" name="NT-EnumeratedType"></a>[57]</td><td><code>EnumeratedType</code></td><td>::=</td><td><code><a href="#NT-NotationType">NotationType</a><a href="#NT-Enumeration">Enumeration</a>|</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-NotationType" name="NT-NotationType"></a>[58]</td><td><code>NotationType</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a>'NOTATION''('?(? '|'?)*? ')'</code></td><td><a href="#notatn">[VC: Notation Attributes]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#OneNotationPer">[VC: One Notation Per Element Type]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#NoNotationEmpty">[VC: No Notation on Empty Element]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#NoDuplicateTokens">[VC: No Duplicate Tokens]</a></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-Enumeration" name="NT-Enumeration"></a>[59]</td><td><code>Enumeration</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Nmtoken">Nmtoken</a><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Nmtoken">Nmtoken</a><a href="#NT-S">S</a>'('?(? '|'?)*? ')'</code></td><td><a href="#enum">[VC: Enumeration]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#NoDuplicateTokens">[VC: No Duplicate Tokens]</a></td></tr></tbody></table></div><div class="div3"><div class="constraint"><p class="prefix"><a id="RequiredAttr" name="RequiredAttr"></a><b>Validity constraint: Required Attribute</b></p><p><b>#REQUIRED</b><strong>MUST</strong>If the default
declaration is the keyword, then the attributebe
specified for all elements of the type in the attribute-list declaration.</p></div><div class="constraint"><p class="prefix"><a id="defattrvalid" name="defattrvalid"></a><b>Validity constraint: Attribute Default Value Syntactically Correct</b></p><p><strong>MUST</strong>The declared default valuemeet the syntactic
constraints of the declared attribute type. That is, the default value of an attribute:</p><p>Note that only the
syntactic constraints of the type are required here; other constraints (e.g.
that the value be the name of a declared unparsed entity, for an attribute of
type ENTITY) will be reported by a validating
parser only if an element without a specification for this attribute
actually occurs.</p><ul><li><p><a href="#NT-Name">Name</a>of type IDREF or ENTITY must match theproduction;</p></li><li><p><a href="#NT-Names">Names</a>of type IDREFS or ENTITIES must match theproduction;</p></li><li><p><a href="#NT-Nmtoken">Nmtoken</a>of type NMTOKEN must match theproduction;</p></li><li><p><a href="#NT-Nmtokens">Nmtokens</a>of type NMTOKENS must match theproduction;</p></li><li><p><a href="#NT-EnumeratedType">enumerated type</a><a href="#NT-NotationType">NOTATION</a><a href="#NT-Enumeration">enumeration</a>of an(either atype or an) must match one of the enumerated values.</p></li></ul></div><div class="constraint"><p class="prefix"><a id="FixedAttr" name="FixedAttr"></a><b>Validity constraint: Fixed Attribute Default</b></p><p><b>#FIXED</b><strong>MUST</strong>If an attribute
has a default value declared with thekeyword, instances of
that attributematch the default value.</p></div><div class="exampleInner"><pre>&lt;!ATTLIST termdef
          id      ID      #REQUIRED
          name    CDATA   #IMPLIED>
&lt;!ATTLIST list
          type    (bullets|ordered|glossary)  "ordered">
&lt;!ATTLIST form
          method  CDATA   #FIXED "POST"></pre></div><h4><a id="sec-attr-defaults" name="sec-attr-defaults"></a>3.3.2 Attribute Defaults</h4><h5><a id="d0e3369" name="d0e3369"></a>Attribute Defaults</h5><p><a href="#dt-attdecl" title="Attribute-List Declaration">attribute declaration</a><strong>REQUIRED</strong>Anprovides information
on whether the attribute's presence is, and if not, how an XML processor
is to react if a declared attribute is absent in a document.</p><p><a id="dt-default" name="dt-default" title="Attribute Default">Definition</a><a href="#NT-AttValue">AttValue</a><b>#REQUIRED</b><b>#IMPLIED</b><b>#REQUIRED</b><b>#IMPLIED</b><b>default</b><b>#FIXED</b><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong>In an attribute declaration,means that the attributealways be provided,that no default value is provided.

						[: If
the declaration is neithernor, then
thevalue contains the declaredvalue; thekeyword states that the attributealways have
the default value.
When an XML processor encounters
an element
without a specification for an attribute for which it has read a default
value declaration, itreport the attribute with the declared default
value to the application.]</p><p>Examples of attribute-list declarations:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-DefaultDecl" name="NT-DefaultDecl"></a>[60]</td><td><code>DefaultDecl</code></td><td>::=</td><td><code>'#REQUIRED' | '#IMPLIED'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-S">S</a><a href="#NT-AttValue">AttValue</a>| (('#FIXED')?)</code></td><td><a href="#RequiredAttr">[VC: Required Attribute]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#defattrvalid">[VC: Attribute Default Value Syntactically Correct]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#CleanAttrVals">[WFC: No &lt; in Attribute Values]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#FixedAttr">[VC: Fixed Attribute Default]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#NoExternalRefs">[WFC: No External Entity References]</a></td></tr></tbody></table></div><div class="div3"><div class="exampleInner"><pre>&lt;!ENTITY d "&amp;#xD;">
&lt;!ENTITY a "&amp;#xA;">
&lt;!ENTITY da "&amp;#xD;&amp;#xA;"></pre></div><h4><a id="AVNormalize" name="AVNormalize"></a>3.3.3 Attribute-Value Normalization</h4><ol class="enumar"><li><p><a href="#sec-line-ends"><b>2.11 End-of-Line Handling</b></a><strong>MUST</strong>All line breakshave been normalized on input to #xA as described
in, so the rest of this algorithm operates
on text normalized in this way.</p></li><li><p>Begin with a normalized value consisting of the empty string.</p></li><li><p>For each character, entity reference, or character reference in the
unnormalized attribute value, beginning with the first and continuing to the
last, do the following:</p><ul><li><p>For a character reference, append the referenced character to the
normalized value.</p></li><li><p>For an entity reference, recursively apply step 3 of this algorithm
to the replacement text of the entity.</p></li><li><p>For a white space character (#x20, #xD, #xA, #x9), append a space
character (#x20) to the normalized value.</p></li><li><p>For another character, append the character to the normalized value.</p></li></ul></li></ol><p><strong>MUST</strong>Before the value of an attribute is passed to the application or checked
for validity, the XML processornormalize the attribute value by applying
the algorithm below, or by using some other method such that the value passed
to the application is the same as that produced by the algorithm.</p><p><strong>MUST</strong>If the attribute type is not CDATA, then the XML processorfurther
process the normalized attribute value by discarding any leading and trailing
space (#x20) characters, and by replacing sequences of space (#x20) characters
by a single space (#x20) character.</p><p>Note that if the unnormalized attribute value contains a character reference
to a white space character other than space (#x20), the normalized value contains
the referenced character itself (#xD, #xA or #x9). This contrasts with the
case where the unnormalized value contains a white space character (not a
reference), which is replaced with a space character (#x20) in the normalized
value and also contrasts with the case where the unnormalized value contains
an entity reference whose replacement text contains a white space character;
being recursively processed, the white space character is replaced with a
space character (#x20) in the normalized value.</p><p><b>CDATA</b><strong>SHOULD</strong>All attributes for which no declaration has been readbe treated
by a non-validating processor as if declared.</p><p><a href="#dt-attrval" title="Attribute Value">attribute
value</a><a href="#dt-entref" title="Entity Reference">reference</a>It is an error if ancontains ato an
entity for which no declaration has been read.</p><p>Following are examples of attribute normalization. Given the following
declarations:</p><p><b>NMTOKENS</b><b>CDATA</b><code>a</code><code>a</code>the attribute specifications in the left column below would be normalized
to the character sequences of the middle column if the attributeis declaredand to those of the right columns ifis declared.</p><p><b>NMTOKENS</b><code>a</code>Note that the last example is invalid (but well-formed) ifis declared to be of type.</p><table border="1" frame="border"><tbody><tr><td><div class="exampleInner"><pre>a="

xyz"</pre></div></td><td><div class="exampleInner"><pre>x y z</pre></div></td><td><div class="exampleInner"><pre>#x20 #x20 x y z</pre></div></td></tr><tr><td><div class="exampleInner"><pre>a="&amp;d;&amp;d;A&amp;a;&amp;#x20;&amp;a;B&amp;da;"</pre></div></td><td><div class="exampleInner"><pre>A #x20 B</pre></div></td><td><div class="exampleInner"><pre>#x20 #x20 A #x20 #x20 #x20 B #x20 #x20</pre></div></td></tr><tr><td><div class="exampleInner"><pre>a=
"&amp;#xd;&amp;#xd;A&amp;#xa;&amp;#xa;B&amp;#xd;&amp;#xa;"</pre></div></td><td><div class="exampleInner"><pre>#xD #xD A #xA #xA B #xD #xA</pre></div></td><td><div class="exampleInner"><pre>#xD #xD A #xA #xA B #xD #xA</pre></div></td></tr></tbody><thead><tr><th>Attribute specification</th><th>a is NMTOKENS</th><th>a is CDATA</th></tr></thead></table></div><h3><a id="attdecls" name="attdecls"></a>3.3 Attribute-List Declarations</h3><h5><a id="d0e2926" name="d0e2926"></a>Attribute-list Declaration</h5><p><a href="#dt-attr" title="Attribute">Attributes</a><a href="#dt-element" title="Element">elements</a><a href="#dt-stag" title="Start-Tag">start-tags</a><a href="#dt-eetag" title="empty-element tag">empty-element tags</a><a href="#sec-starttags"><b>3.1 Start-Tags, End-Tags, and Empty-Element Tags</b></a><strong>MUST NOT</strong>are used to associate name-value
pairs with. Attribute specificationsappear outside ofand; thus, the productions used to
recognize them appear in. Attribute-list declarations
may be used:</p><p><a id="dt-attdecl" name="dt-attdecl" title="Attribute-List Declaration">Definition</a><b>Attribute-list
declarations</b>[:specify the name, data type, and default value (if any)
of each attribute associated with a given element type:]</p><p><a href="#NT-Name">Name</a><a href="#NT-AttlistDecl">AttlistDecl</a><a href="#NT-Name">Name</a><a href="#NT-AttDef">AttDef</a><strong>MAY</strong>Thein therule is the type of an element. At user option, an XML processorissue
a warning if attributes are declared for an element type not itself declared,
but this is not an error. Thein therule is the name of the attribute.</p><p><a href="#NT-AttlistDecl">AttlistDecl</a><a href="#dt-interop" title="For interoperability">For interoperability,</a><strong>MAY</strong>When more than oneis provided
for a given element type, the contents of all those provided are merged. When
more than one definition is provided for the same attribute of a given element
type, the first declaration is binding and later declarations are ignored.writers of DTDs may choose
to provide at most one attribute-list declaration for a given element type,
at most one attribute definition for a given attribute name in an attribute-list
declaration, and at least one attribute definition in each attribute-list
declaration. For interoperability, an XML processorat user option
issue a warning when more than one attribute-list declaration is provided
for a given element type, or more than one attribute definition is provided
for a given attribute, but this is not an error.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-AttlistDecl" name="NT-AttlistDecl"></a>[52]</td><td><code>AttlistDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-AttDef">AttDef</a><a href="#NT-S">S</a>'&lt;!ATTLIST'*? '>'</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-AttDef" name="NT-AttDef"></a>[53]</td><td><code>AttDef</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-AttType">AttType</a><a href="#NT-S">S</a><a href="#NT-DefaultDecl">DefaultDecl</a></code></td></tr></tbody></table><ul><li><p>To define the set of attributes pertaining to a given element type.</p></li><li><p>To establish type constraints for these attributes.</p></li><li><p><a href="#dt-default" title="Attribute Default">default values</a>To providefor
attributes.</p></li></ul></div><div class="div2"><div class="constraint"><p class="prefix"><a id="condsec-nesting" name="condsec-nesting"></a><b>Validity constraint: Proper Conditional Section/PE Nesting</b></p><p><code>&lt;![</code><code>[</code><code>]]&gt;</code><strong>MUST</strong>If any of the "",
"", or "" of a conditional section is contained
in the replacement text for a parameter-entity reference, all of thembe contained in the same replacement text.</p></div><div class="exampleInner"><pre>&lt;!ENTITY % draft 'INCLUDE' >
&lt;!ENTITY % final 'IGNORE' >

&lt;![%draft;[
&lt;!ELEMENT book (comments*, title, body, supplements?)>
]]&gt;
&lt;![%final;[
&lt;!ELEMENT book (title, body, supplements?)>
]]&gt;</pre></div><h3><a id="sec-condition-sect" name="sec-condition-sect"></a>3.4 Conditional Sections</h3><h5><a id="d0e3658" name="d0e3658"></a>Conditional Section</h5><p><a id="dt-cond-section" name="dt-cond-section" title="conditional section">Definition</a><a href="#dt-doctype" title="Document Type Declaration">document type
declaration external subset</a><b>Conditional
sections</b>[:are portions of theor
of external parameter entities which are included in, or excluded from,
the logical structure of the DTD based on the keyword which governs them.]</p><p>Like the internal and external DTD subsets, a conditional section may contain
one or more complete declarations, comments, processing instructions, or nested
conditional sections, intermingled with white space.</p><p><b>INCLUDE</b><b>IGNORE</b><b>INCLUDE</b><b>IGNORE</b><code>[</code><code>&lt;![</code><code>]]&gt;</code><strong>MUST</strong><strong>MUST</strong><strong>NOT</strong><strong>MUST</strong><strong>MUST</strong><strong>MUST NOT</strong>If the keyword of the conditional section is, then the
contents of the conditional sectionbe processed as part of the DTD. If the keyword of
the conditional section is, then the contents of the conditional
sectionbe processed as part of the DTD.
If a conditional section with a keyword ofoccurs within
a larger conditional section with a keyword of, both the outer
and the inner conditional sectionsbe ignored. The contents
of an ignored conditional sectionbe parsed by ignoring all characters after
the "" following the keyword, except conditional section starts
"" and ends "", until the matching conditional
section end is found. Parameter entity referencesbe recognized in this
process.</p><p><strong>MUST</strong>If the keyword of the conditional section is a parameter-entity reference,
the parameter entitybe replaced by its content before the processor
decides whether to include or ignore the conditional section.</p><p>An example:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-conditionalSect" name="NT-conditionalSect"></a>[61]</td><td><code>conditionalSect</code></td><td>::=</td><td><code><a href="#NT-includeSect">includeSect</a><a href="#NT-ignoreSect">ignoreSect</a>|</code></td></tr><tr valign="baseline"><td><a id="NT-includeSect" name="NT-includeSect"></a>[62]</td><td><code>includeSect</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-extSubsetDecl">extSubsetDecl</a>'&lt;!['? 'INCLUDE'? '['']]&gt;'</code></td><td><a href="#condsec-nesting">[VC: Proper Conditional Section/PE Nesting]</a></td></tr><tr valign="baseline"><td><a id="NT-ignoreSect" name="NT-ignoreSect"></a>[63]</td><td><code>ignoreSect</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-ignoreSectContents">ignoreSectContents</a>'&lt;!['? 'IGNORE'? '['*
']]&gt;'</code></td><td><a href="#condsec-nesting">[VC: Proper Conditional Section/PE Nesting]</a></td></tr><tr valign="baseline"><td><a id="NT-ignoreSectContents" name="NT-ignoreSectContents"></a>[64]</td><td><code>ignoreSectContents</code></td><td>::=</td><td><code><a href="#NT-Ignore">Ignore</a><a href="#NT-ignoreSectContents">ignoreSectContents</a><a href="#NT-Ignore">Ignore</a>('&lt;!['']]&gt;')*</code></td></tr><tr valign="baseline"><td><a id="NT-Ignore" name="NT-Ignore"></a>[65]</td><td><code>Ignore</code></td><td>::=</td><td><code><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a><a href="#NT-Char">Char</a>* - (*
('&lt;![' | ']]&gt;')*)</code></td></tr></tbody></table></div><h2><a id="sec-logical-struct" name="sec-logical-struct"></a>3 Logical Structures</h2><h5><a id="d0e2130" name="d0e2130"></a>Element</h5><p><a id="dt-element" name="dt-element" title="Element">Definition</a><a href="#dt-xml-doc" title="XML Document">XML
document</a><a href="#dt-stag" title="Start-Tag">start-tags</a><a href="#dt-etag" title="End Tag">end-tags</a><a href="#dt-empty" title="Empty">empty</a><a href="#dt-eetag" title="empty-element tag">empty-element tag</a><a href="#dt-attrname" title="Attribute Name">name</a><a href="#dt-attrval" title="Attribute Value">value</a><b>elements</b>[: Eachcontains one or more, the boundaries
of which are either delimited byand, or, forelements, by an. Each
element has a type, identified by name, sometimes called its "generic
identifier" (GI), and may have a set of attribute specifications.]
Each attribute specification has aand a.</p><p><code>(('X'|'x')('M'|'m')('L'|'l'))</code>This specification does not constrain the
			application semantics, use, or (beyond syntax)
names of the element types and attributes, except that names beginning with
a match toare reserved for standardization
in this or future versions of this specification.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-element" name="NT-element"></a>[39]</td><td><code>element</code></td><td>::=</td><td><code><a href="#NT-EmptyElemTag">EmptyElemTag</a></code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-STag">STag</a><a href="#NT-content">content</a><a href="#NT-ETag">ETag</a>|</code></td><td><a href="#GIMatch">[WFC: Element Type Match]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#elementvalid">[VC: Element Valid]</a></td></tr></tbody></table></div><div class="div1"><div class="div2"><div class="constraint"><p class="prefix"><a id="wf-Legalchar" name="wf-Legalchar"></a><b>Well-formedness constraint: Legal Character</b></p><p><a href="#NT-Char">Char</a><strong>MUST</strong>Characters referred
to using character referencesmatch the production for.</p></div><div class="constraint"><p class="prefix"><a id="wf-entdeclared" name="wf-entdeclared"></a><b>Well-formedness constraint: Entity Declared</b></p><p><a href="#NT-Name">Name</a><a href="#dt-match" title="match">match</a><a href="#sec-entity-decl"><cite>entity
declaration</cite></a><code>standalone='yes'</code><code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><strong>MUST</strong><strong>MUST</strong>In a document
without any DTD, a document with only an internal DTD subset which contains
no parameter entity references, or a document with "", for
an entity reference that does not occur within the external subset or a parameter
entity, thegiven in the entity referencethat in anthat does not occur within the external subset or a
parameter entity, except that well-formed documents need not declare
any of the following entities:,,,,. The
declaration of a general entityprecede any reference to it which appears
in a default value in an attribute-list declaration.</p><p><a href="#include-if-valid"><cite>not
obligated to</cite></a><a href="#sec-rmd"><cite>standalone='yes'</cite></a><span class="diff-del"><span><a href="E03">E03</a>to</span></span>Note that non-validating processors areread and process entity declarations occurring in parameter entities or in
the external subset; for such documents,
the rule that an entity must be declared is a well-formedness constraint only
if.</p></div><div class="constraint"><p class="prefix"><a id="vc-entdeclared" name="vc-entdeclared"></a><b>Validity constraint: Entity Declared</b></p><p><a href="#NT-Name">Name</a><a href="#dt-match" title="match">match</a><a href="#sec-entity-decl"><cite>entity
declaration</cite></a><a href="#sec-predefined-ent"><b>4.6 Predefined Entities</b></a><code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><span class="diff-chg"><span><a href="E08">E08</a><code>standalone='no'</code>,
						if the document is not standalone (either ""
						is specified or there is no standalone declaration), then</span></span><strong>MUST</strong><strong>SHOULD</strong><strong>MUST</strong><strong>MUST</strong>In a document with an external subset or parameter  entity referencesthegiven in the entity referencethat in an. For interoperability, valid documentsdeclare
the entities,,,,, in the form specified in.
The declaration of a parameter entityprecede any reference to it. Similarly,
the declaration of a general entityprecede any attribute-list
declaration containing a default value with a direct or indirect reference
to that general entity.</p></div><div class="constraint"><p class="prefix"><a id="textent" name="textent"></a><b>Well-formedness constraint: Parsed Entity</b></p><p><a href="#dt-unparsed" title="Unparsed Entity">unparsed entity</a><a href="#dt-attrval" title="Attribute Value">attribute
values</a><b>ENTITY</b><b>ENTITIES</b><strong>MUST
NOT</strong>An entity referencecontain the name of an.
Unparsed entities may be referred to only indeclared to be of typeor.</p></div><div class="constraint"><p class="prefix"><a id="norecursion" name="norecursion"></a><b>Well-formedness constraint: No Recursion</b></p><p><strong>MUST NOT</strong>A parsed entitycontain a recursive reference to itself, either directly or indirectly.</p></div><div class="constraint"><p class="prefix"><a id="indtd" name="indtd"></a><b>Well-formedness constraint: In DTD</b></p><p><a href="#dt-doctype" title="Document Type Declaration">DTD</a><strong>MUST NOT</strong>Parameter-entity referencesappear outside
 the.</p></div><div class="exampleInner"><pre>Type &lt;key>less-than&lt;/key> (&amp;#x3C;) to save options.
This document was prepared on &amp;docdate; and
is classified &amp;security-level;.</pre></div><div class="exampleInner"><pre>&lt;!-- declare the parameter entity "ISOLat2"... -->
&lt;!ENTITY % ISOLat2
         SYSTEM "http://www.xml.com/iso/isolat2-xml.entities" >
&lt;!-- ... now reference it. -->
%ISOLat2;</pre></div><h3><a id="sec-references" name="sec-references"></a>4.1 Character and Entity References</h3><h5><a id="d0e3895" name="d0e3895"></a>Character Reference</h5><h5><a id="d0e3966" name="d0e3966"></a>Entity Reference</h5><p><a id="dt-charref" name="dt-charref" title="Character Reference">Definition</a><b>character
reference</b>[:  Arefers to a specific character in the ISO/IEC 10646 character
set, for example one not directly accessible from available input devices.]</p><p><code>&amp;#x</code><code>;</code><code>&amp;#</code><code>;</code>If the character reference begins with "",
the digits and letters up to the terminatingprovide a hexadecimal
representation of the character's code point in ISO/IEC 10646. If it begins
just with "", the digits up to the terminatingprovide a decimal representation of the character's code point.</p><p><a id="dt-entref" name="dt-entref" title="Entity Reference">Definition</a><a id="dt-GERef" name="dt-GERef" title="General Entity Reference">Definition</a><a id="dt-PERef" name="dt-PERef" title="Parameter-entity reference">Definition</a><b>entity reference</b><b>Parameter-entity references</b><code>&amp;</code><code>;</code><code>%</code><code>;</code>[: Anrefers to the content of a named entity.]
					[: References to parsed general entities use
ampersand () and semicolon () as delimiters.]
					[:use percent-sign () and semicolon () as delimiters.]</p><p>Examples of character and entity references:</p><p>Example of a parameter-entity reference:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-CharRef" name="NT-CharRef"></a>[66]</td><td><code>CharRef</code></td><td>::=</td><td><code>'&amp;#' [0-9]+ ';'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code>| '&amp;#x' [0-9a-fA-F]+ ';'</code></td><td><a href="#wf-Legalchar">[WFC: Legal Character]</a></td></tr></tbody></table><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-Reference" name="NT-Reference"></a>[67]</td><td><code>Reference</code></td><td>::=</td><td><code><a href="#NT-EntityRef">EntityRef</a><a href="#NT-CharRef">CharRef</a>|</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-EntityRef" name="NT-EntityRef"></a>[68]</td><td><code>EntityRef</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a>'&amp;'';'</code></td><td><a href="#wf-entdeclared">[WFC: Entity Declared]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#vc-entdeclared">[VC: Entity Declared]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#textent">[WFC: Parsed Entity]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#norecursion">[WFC: No Recursion]</a></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-PEReference" name="NT-PEReference"></a>[69]</td><td><code>PEReference</code></td><td>::=</td><td><code><a href="#NT-Name">Name</a>'%'';'</code></td><td><a href="#vc-entdeclared">[VC: Entity Declared]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#norecursion">[WFC: No Recursion]</a></td></tr><tr valign="baseline"><td></td><td></td><td></td><td></td><td><a href="#indtd">[WFC: In DTD]</a></td></tr></tbody></table></div><div class="div2"><div class="div3"><div class="exampleInner"><pre>&lt;!ENTITY Pub-Status "This is a pre-release of the
 specification."></pre></div><h4><a id="sec-internal-ent" name="sec-internal-ent"></a>4.2.1 Internal Entities</h4><p><a id="dt-internent" name="dt-internent" title="Internal Entity Replacement Text">Definition</a><a href="#NT-EntityValue">EntityValue</a><a href="#dt-litentval" title="Literal Entity Value">literal entity value</a><a href="#dt-repltext" title="Replacement Text">replacement text</a><a href="#intern-replacement"><b>4.5 Construction of Entity Replacement Text</b></a><b>internal entity</b>[: If the
entity definition is an, the defined
entity is called an. There is no separate physical
storage object, and the content of the entity is given in the declaration.]
Note that some processing of entity and character references in themay be required to produce
the correct: see.</p><p><a href="#dt-parsedent" title="Text Entity">parsed entity</a>An internal entity is a.</p><p>Example of an internal entity declaration:</p></div><div class="div3"><div class="constraint"><p class="prefix"><a id="not-declared" name="not-declared"></a><b>Validity constraint: Notation Declared</b></p><p><a href="#NT-Name">Name</a><a href="#dt-notation" title="Notation">notation</a><strong>MUST</strong>Thematch the declared name of a.</p></div><div class="diff-add"><div class="note"><p class="prefix"><b>Note:</b></p><p>In a future edition of this specification, the XML Core Working Group intends to replace the preceding paragraph
							and list of steps with a normative reference to an upcoming revision of IETF RFC 3987, which will define
							"Legacy Extended IRIs (LEIRIs)".  When this revision is available, it is the intent of the XML Core WG to use it to replace
							language similar to the above in any future revisions of XML-related specifications under its purview.</p></div></div><div class="exampleInner"><pre>&lt;!ENTITY open-hatch
         SYSTEM "http://www.textuality.com/boilerplate/OpenHatch.xml">
&lt;!ENTITY open-hatch
         PUBLIC "-//Textuality//TEXT Standard open-hatch boilerplate//EN"
         "http://www.textuality.com/boilerplate/OpenHatch.xml">
&lt;!ENTITY hatch-pic
         SYSTEM "../grafix/OpenHatch.gif"
         NDATA gif ></pre></div><h4><a id="sec-external-ent" name="sec-external-ent"></a>4.2.2 External Entities</h4><h5><a id="d0e4313" name="d0e4313"></a>External Entity Declaration</h5><ol class="enumar"><li><p><span class="diff-chg"><span><a href="E11">E11</a><a href="#Unicode">[Unicode]</a></span></span>Each character to be escaped is represented in UTF-8as one or more bytes.</p></li><li><p><code>%</code><var>HH</var>The resulting bytes are escaped with
the URI escaping mechanism (that is, converted to,
where HH is the hexadecimal notation of the byte value).</p></li><li><p>The original character is replaced by the resulting character sequence.</p></li></ol><p><a id="dt-extent" name="dt-extent" title="External Entity">Definition</a><b>external entity</b>[: If the entity is not internal,
it is an, declared as follows:]</p><p><a href="#NT-NDataDecl">NDataDecl</a><a href="#dt-unparsed" title="Unparsed Entity">unparsed entity</a>If theis present, this is a general; otherwise it is a parsed entity.</p><p><a id="dt-sysid" name="dt-sysid" title="System Identifier">Definition</a><a href="#NT-SystemLiteral">SystemLiteral</a><a href="#rfc3986">[IETF RFC 3986]</a><a href="#dt-docent" title="Document Entity">document
entity</a><a href="#dt-doctype" title="Document Type Declaration">external
DTD subset</a><a href="#dt-extent" title="External Entity">external parameter
entity</a><b>system
identifier</b><code>#</code><code>Location:</code>[: Theis called the entity's. It is meant to be converted to a URI reference
(as defined in),
as part of the
process of dereferencing it to obtain input for the XML processor to construct the
entity's replacement text.] It is an error for a fragment identifier
(beginning with acharacter) to be part of a system identifier.
Unless otherwise provided by information outside the scope of this specification
(e.g. a special XML element type defined by a particular DTD, or a processing
instruction defined by a particular application specification), relative URIs
are relative to the location of the resource within which the entity declaration
occurs. This is defined to
be the external entity containing the '&lt;' which starts the declaration, at the
point when it is parsed as a declaration.
A URI might thus be relative to the, to the entity containing the, or to some other. Attempts to
retrieve the resource identified by a URI may be redirected at the parser
level (for example, in an entity resolver) or below (at the protocol level,
for example, via an HTTPheader). In the absence of additional
information outside the scope of this specification within the resource,
the base URI of a resource is always the URI of the actual resource returned.
In other words, it is the URI of the resource retrieved after all redirection
has occurred.</p><p><a href="#rfc3986">[IETF RFC 3986]</a><em>unwise</em><strong>MUST</strong><strong>SHOULD</strong><strong>MUST</strong>System
identifiers (and other XML strings meant to be used as URI references) may contain
characters that, according to,
must be escaped before a URI can be used to retrieve the referenced resource. The
characters to be escaped are the control characters #x0 to #x1F and #x7F (most of
which cannot appear in XML), space #x20, the delimiters '&lt;' #x3C, '>' #x3E and
'"' #x22, thecharacters '{' #x7B, '}' #x7D, '|' #x7C, '\' #x5C, '^' #x5E and
'`' #x60, as well as all characters above #x7F. Since escaping is not always a fully
reversible process, itbe performed only when absolutely necessary and as late
as possible in a processing chain. In particular, neither the process of converting
a relative URI to an absolute one nor the process of passing a URI reference to a
process or software component responsible for dereferencing ittrigger escaping.
When escaping does occur, itbe performed as follows:</p><p><a id="dt-pubid" name="dt-pubid" title="Public identifier">Definition</a><b>public identifier</b><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong>[:  In addition to a system
identifier, an external identifier may include a.]
An XML processor attempting to retrieve the entity's content may use
any combination of
the public and system identifiers as well as additional information outside the
scope of this specification to try to generate an alternative URI reference.
If the processor is unable to do so, ituse the URI
reference specified in the system literal. Before a match is attempted,
all strings of white space in the public identifierbe normalized to
single space characters (#x20), and leading and trailing white spacebe removed.</p><p>Examples of external entity declarations:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-ExternalID" name="NT-ExternalID"></a>[75]</td><td><code>ExternalID</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-SystemLiteral">SystemLiteral</a>'SYSTEM'</code></td></tr><tr valign="baseline"><td></td><td></td><td></td><td><code><a href="#NT-S">S</a><a href="#NT-PubidLiteral">PubidLiteral</a><a href="#NT-S">S</a><a href="#NT-SystemLiteral">SystemLiteral</a>| 'PUBLIC'</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-NDataDecl" name="NT-NDataDecl"></a>[76]</td><td><code>NDataDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Name">Name</a>'NDATA'</code></td><td><a href="#not-declared">[VC: Notation Declared]</a></td></tr></tbody></table></div><h3><a id="sec-entity-decl" name="sec-entity-decl"></a>4.2 Entity Declarations</h3><h5><a id="d0e4163" name="d0e4163"></a>Entity Declaration</h5><p><a id="dt-entdecl" name="dt-entdecl" title="entity declaration">Definition</a>[:  Entities are declared
thus:]</p><p><a href="#NT-Name">Name</a><a href="#dt-entref" title="Entity Reference">entity
reference</a><b>ENTITY</b><b>ENTITIES</b><strong>MAY</strong>Theidentifies the entity in anor, in the case of an unparsed entity, in the value of
anorattribute. If the same entity is declared
more than once, the first declaration encountered is binding; at user option,
an XML processorissue a warning if entities are declared multiple times.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-EntityDecl" name="NT-EntityDecl"></a>[70]</td><td><code>EntityDecl</code></td><td>::=</td><td><code><a href="#NT-GEDecl">GEDecl</a><a href="#NT-PEDecl">PEDecl</a>|</code></td></tr><tr valign="baseline"><td><a id="NT-GEDecl" name="NT-GEDecl"></a>[71]</td><td><code>GEDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-EntityDef">EntityDef</a><a href="#NT-S">S</a>'&lt;!ENTITY'?
'>'</code></td></tr><tr valign="baseline"><td><a id="NT-PEDecl" name="NT-PEDecl"></a>[72]</td><td><code>PEDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-PEDef">PEDef</a><a href="#NT-S">S</a>'&lt;!ENTITY''%'? '>'</code></td></tr><tr valign="baseline"><td><a id="NT-EntityDef" name="NT-EntityDef"></a>[73]</td><td><code>EntityDef</code></td><td>::=</td><td><code><a href="#NT-EntityValue">EntityValue</a><a href="#NT-ExternalID">ExternalID</a><a href="#NT-NDataDecl">NDataDecl</a>| (?)</code></td></tr><tr valign="baseline"><td><a id="NT-PEDef" name="NT-PEDef"></a>[74]</td><td><code>PEDef</code></td><td>::=</td><td><code><a href="#NT-EntityValue">EntityValue</a><a href="#NT-ExternalID">ExternalID</a>|</code></td></tr></tbody></table></div><div class="div2"><div class="div3"><h4><a id="sec-TextDecl" name="sec-TextDecl"></a>4.3.1 The Text Declaration</h4><h5><a id="d0e4481" name="d0e4481"></a>Text Declaration</h5><p><b>text declaration</b><strong>SHOULD</strong>External parsed entitieseach begin with a.</p><p><a href="#dt-repltext" title="Replacement Text">replacement text</a><strong>MUST</strong><strong>MUST NOT</strong>The text declarationbe provided literally, not by reference
					to a parsed entity. The text declarationappear at any
					position other than the beginning of an external parsed entity. The text declaration
          in an external parsed entity is not considered part of its.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-TextDecl" name="NT-TextDecl"></a>[77]</td><td><code>TextDecl</code></td><td>::=</td><td><code><a href="#NT-VersionInfo">VersionInfo</a><a href="#NT-EncodingDecl">EncodingDecl</a><a href="#NT-S">S</a>'&lt;?xml'?? '?>'</code></td></tr></tbody></table></div><div class="div3"><div class="note"><p class="prefix"><b>Note:</b></p><p>Only parsed entities that are referenced directly or indirectly within the document are required to be well-formed.</p></div><h4><a id="wf-entities" name="wf-entities"></a>4.3.2 Well-Formed Parsed Entities</h4><h5><a id="d0e4524" name="d0e4524"></a>Well-Formed External Parsed Entity</h5><p><a href="#NT-document">document</a><a href="#NT-extParsedEnt">extParsedEnt</a>The document entity is well-formed if it matches the production labeled. An external general parsed entity is well-formed
if it matches the production labeled. All
external parameter entities are well-formed by definition.</p><p><a href="#NT-content">content</a>An internal general parsed entity is well-formed if its replacement text
matches the production labeled. All internal
parameter entities are well-formed by definition.</p><p><a href="#dt-stag" title="Start-Tag">start-tag</a><a href="#dt-etag" title="End Tag">end-tag</a><a href="#dt-empty" title="Empty">empty-element tag</a><a href="#dt-element" title="Element">element</a><a href="#dt-comment" title="Comment">comment</a><a href="#dt-pi" title="Processing instruction">processing instruction</a><a href="#dt-charref" title="Character Reference">character
reference</a><a href="#dt-entref" title="Entity Reference">entity reference</a>A consequence of well-formedness in general
entities is that the logical and physical
structures in an XML document are properly nested; no,,,,,,, orcan begin in one entity and end in another.</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-extParsedEnt" name="NT-extParsedEnt"></a>[78]</td><td><code>extParsedEnt</code></td><td>::=</td><td><code><a href="#NT-TextDecl">TextDecl</a><a href="#NT-content">content</a>?</code></td></tr></tbody></table></div><div class="div3"><div class="diff-add"><p><a href="E06">E06</a>If the replacement text of an external entity is to
						begin with the character U+FEFF, and no text declaration
						is present, then a Byte Order Mark MUST be present,
						whether the entity is encoded in UTF-8 or UTF-16.</p></div><div class="exampleInner"><pre>&lt;?xml encoding='UTF-8'?>
&lt;?xml encoding='EUC-JP'?></pre></div><h4><a id="charencoding" name="charencoding"></a>4.3.3 Character Encoding in Entities</h4><h5><a id="d0e4623" name="d0e4623"></a>Encoding Declaration</h5><p><span class="diff-del"><span><a href="E05">E05</a>character encodings with any other labels, even if the encodings or labels are very similar to UTF-8 or UTF-16.</span></span><span class="diff-add"><span><a href="E05">E05</a>related character encodings, including but not limited to UTF-16BE, UTF-16LE, or CESU-8.</span></span><strong>MUST</strong>Each external parsed entity in an XML document may use a different encoding
for its characters. All XML processorsbe able to read entities in both
the UTF-8 and UTF-16 encodings. The terms "UTF-8"
and "UTF-16" in this specification do not apply to</p><p><a href="#ISO10646-2000">[ISO/IEC 10646:2000]</a><a href="#Unicode">[Unicode]</a><span class="diff-chg"><span><a href="E11">E11</a>16.8</span></span><span class="diff-del"><span><a href="E11">E11</a><a href="#Unicode3">[Unicode3]</a>, and section 2.7 of</span></span><strong>MUST</strong><strong>MAY</strong><strong>MUST</strong>Entities encoded in UTF-16and entities
encoded in UTF-8begin with the Byte Order Mark described by
Annex H of, sectionof(the ZERO WIDTH NO-BREAK SPACE character, #xFEFF). This is an encoding signature,
not part of either the markup or the character data of the XML document. XML
processorsbe able to use this character to differentiate between UTF-8
and UTF-16 encoded documents.</p><p><a href="#sec-TextDecl"><b>4.3.1 The Text Declaration</b></a><strong>MUST</strong>Although an XML processor is required to read only entities in the UTF-8
and UTF-16 encodings, it is recognized that other encodings are used around
the world, and it may be desired for XML processors to read entities that
use them. In
the absence of external character encoding information (such as MIME headers),
parsed entities which are stored in an encoding other than UTF-8 or UTF-16begin with a text declaration (see) containing
an encoding declaration:</p><p><a href="#dt-docent" title="Document Entity">document entity</a><a href="#dt-xmldecl" title="XML Declaration">XML declaration</a><a href="#NT-EncName">EncName</a>In the, the encoding
declaration is part of the.
Theis the name of the encoding used.</p><p><a href="#IANA">[IANA-CHARSETS]</a><code>UTF-8</code><code>UTF-16</code><code>ISO-10646-UCS-2</code><code>ISO-10646-UCS-4</code><code>ISO-8859-1</code><code>ISO-8859-2</code><code>ISO-8859-</code><code>ISO-2022-JP</code><code>Shift_JIS</code><code>EUC-JP</code><em>charset</em><strong>SHOULD</strong><strong>SHOULD</strong><strong>SHOULD</strong><strong>RECOMMENDED</strong><strong>SHOULD</strong><strong>SHOULD</strong><strong>SHOULD</strong><var>n</var><var>n</var>In an encoding declaration, the values "", "",
"", and ""be used
for the various encodings and transformations of Unicode / ISO/IEC 10646,
the values "", "",
... "" (whereis the part number)be used for the parts of ISO 8859, and
the values "", "",
and ""be used for the various encoded
forms of JIS X-0208-1997. It
isthat character encodings registered (ass)
with the Internet Assigned Numbers Authority,
other than those just listed, be referred to using their registered names;
other encodingsuse names starting with an "x-" prefix.
XML processorsmatch character encoding names in a case-insensitive
way andeither interpret an IANA-registered name as the encoding registered
at IANA for that name or treat it as unknown (processors are, of course, not
required to support all IANA-registered encodings).</p><p><a href="#dt-fatal" title="Fatal Error">fatal error</a>In the absence of information provided by an external transport protocol
(e.g. HTTP or MIME), it is afor
an entity including an encoding declaration to be presented to the XML processor
in an encoding other than that named in the declaration, or for an entity which
begins with neither a Byte Order Mark
nor an encoding declaration to use an encoding other than UTF-8. Note that
since ASCII is a subset of UTF-8, ordinary ASCII entities do not strictly
need an encoding declaration.</p><p><a href="#dt-fatal" title="Fatal Error">fatal error</a><a href="#NT-TextDecl">TextDecl</a>It is afor ato occur other
than at the beginning of an external entity.</p><p><a href="#dt-fatal" title="Fatal Error">fatal error</a><a href="#dt-fatal" title="Fatal Error">fatal error</a><a href="#dt-fatal" title="Fatal Error">fatal error</a><span class="diff-del"><span><a href="E11">E11</a>irregular</span></span><span class="diff-add"><span><a href="E11">E11</a>ill-formed</span></span><span class="diff-add"><span><a href="E11">E11</a>section 3.9 of</span></span><span class="diff-del"><span><a href="E11">E11</a>3.1</span></span><span class="diff-chg"><span><a href="E11">E11</a><a href="#Unicode">[Unicode]</a></span></span>It is awhen an XML processor
encounters an entity with an encoding that it is unable to process. It
is aif an XML entity is determined (via default, encoding declaration,
or higher-level protocol) to be in a certain encoding but contains byte
sequences that are not legal in that encoding. Specifically, it is a
fatal error if an entity encoded in UTF-8 contains anycode unit sequences,
as defined inUnicode. Unless an encoding
is determined by a higher-level protocol, it is also aif an XML entity
contains no encoding declaration and its content is not legal UTF-8 or UTF-16.</p><p>Examples of text declarations containing encoding declarations:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-EncodingDecl" name="NT-EncodingDecl"></a>[80]</td><td><code>EncodingDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Eq">Eq</a><a href="#NT-EncName">EncName</a><a href="#NT-EncName">EncName</a>'encoding'('"''"' | "'""'" )</code></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-EncName" name="NT-EncName"></a>[81]</td><td><code>EncName</code></td><td>::=</td><td><code>[A-Za-z] ([A-Za-z0-9._] | '-')*</code></td><td><i>/* Encoding
name contains only Latin characters */</i></td></tr></tbody></table></div><h3><a id="TextEntities" name="TextEntities"></a>4.3 Parsed Entities</h3></div><div class="div2"><div class="div3"><h4><a id="not-recognized" name="not-recognized"></a>4.4.1 Not Recognized</h4><p><a href="#NT-content">content</a><code>%</code>Outside the DTD, thecharacter has no special significance;
thus, what would be parameter entity references in the DTD are not recognized
as markup in. Similarly, the names of unparsed
entities are not recognized except when they appear in the value of an appropriately
declared attribute.</p></div><div class="div3"><h4><a id="included" name="included"></a>4.4.2 Included</h4><p><a id="dt-include" name="dt-include" title="Include">Definition</a><a href="#dt-repltext" title="Replacement Text">replacement text</a><a href="#dt-chardata" title="Character Data">character data</a><a href="#dt-markup" title="Markup">markup</a><b>included</b><b>included</b><code>AT&amp;amp;T;</code><code>AT&amp;T;</code><strong>MUST</strong>[: An entity iswhen itsis retrieved
and processed, in place of the reference itself, as though it were part of
the document at the location the reference was recognized.] The replacement
text may contain bothand (except for parameter entities),
whichbe recognized in the usual way. (The string ""
expands to "" and the remaining ampersand
is not recognized as an entity-reference delimiter.) A character reference
iswhen the indicated character is processed in place
of the reference itself.</p></div><div class="div3"><h4><a id="include-if-valid" name="include-if-valid"></a>4.4.3 Included If Validating</h4><p><a href="#dt-valid" title="Validity">validate</a><a href="#dt-include" title="Include">include</a><strong>MUST</strong><strong>MAY</strong><strong>MUST</strong>When an XML processor recognizes a reference to a parsed entity, in order
tothe document, the processorits replacement text. If
the entity is external, and the processor is not attempting to validate the
XML document, the processor, but need
not, include the entity's replacement text. If a non-validating processor
does not include the replacement text, itinform the application that
it recognized, but did not read, the entity.</p><p>This rule is based on the recognition that the automatic inclusion provided
by the SGML and XML entity mechanism, primarily designed to support modularity
in authoring, is not necessarily appropriate for other applications, in particular
document browsing. Browsers, for example, when encountering an external parsed
entity reference, might choose to provide a visual indication of the entity's
presence and retrieve it for display only on demand.</p></div><div class="div3"><h4><a id="forbidden" name="forbidden"></a>4.4.4 Forbidden</h4><p><a href="#dt-fatal" title="Fatal Error">fatal
errors</a>The following are forbidden, and constitute:</p><ul><li><p><a href="#dt-unparsed" title="Unparsed Entity">unparsed
entity</a><a href="#NT-EntityValue">EntityValue</a>the appearance of a reference to an, except in thein an entity declaration.</p></li><li><p><a href="#NT-EntityValue">EntityValue</a><a href="#NT-AttValue">AttValue</a>the appearance of any character or general-entity reference in the
DTD except within anor.</p></li><li><p>a reference to an external entity in an attribute value.</p></li></ul></div><div class="div3"><div class="exampleInner"><pre>&lt;!ENTITY % YN '"Yes"' >
&lt;!ENTITY WhatHeSaid "He said %YN;" ></pre></div><div class="exampleInner"><pre>&lt;!ENTITY EndAttr "27'" >
&lt;element attribute='a-&amp;EndAttr;></pre></div><h4><a id="inliteral" name="inliteral"></a>4.4.5 Included in Literal</h4><p><a href="#dt-entref" title="Entity Reference">entity reference</a><a href="#dt-repltext" title="Replacement Text">replacement text</a><strong>MUST</strong><strong>MUST</strong><strong>MUST NOT</strong>When anappears in
an attribute value, or a parameter entity reference appears in a literal entity
value, itsbe processed
in place of the reference itself as though it were part of the document at
the location the reference was recognized, except that a single or double
quote character in the replacement textalways be treated as a normal data
character andterminate the literal. For example, this is well-formed:</p><p>while this is not:</p></div><div class="div3"><h4><a id="notify" name="notify"></a>4.4.6 Notify</h4><p><a href="#dt-unparsed" title="Unparsed Entity">unparsed entity</a><a href="#dt-sysid" title="System Identifier">system</a><a href="#dt-pubid" title="Public identifier">public</a><a href="#dt-notation" title="Notation">notation</a><b>ENTITY</b><b>ENTITIES</b><strong>MUST</strong>When the name of anappears as a token in the value of an attribute of declared typeor, a validating processorinform the application of
theand(if any) identifiers for both the entity and its associated.</p></div><div class="div3"><h4><a id="bypass" name="bypass"></a>4.4.7 Bypassed</h4><p><a href="#NT-EntityValue">EntityValue</a><strong>MUST</strong>When a general entity reference appears in thein an entity declaration, itbe bypassed and left as is.</p></div><div class="div3"><h4><a id="as-PE" name="as-PE"></a>4.4.8 Included as PE</h4><p><a href="#include-if-valid"><cite>included if validating</cite></a><a href="#dt-repltext" title="Replacement Text">replacement
text</a><a href="#inliteral"><b>4.4.5 Included in Literal</b></a><strong>MUST</strong><strong>MUST NOT</strong>Just as with external parsed entities, parameter entities need only be. When a parameter-entity
reference is recognized in the DTD and included, itsbe enlarged by the attachment of one leading and one following
space (#x20) character; the intent is to constrain the replacement text of
parameter entities to contain an integral number of grammatical tokens in
the DTD. This
behaviorapply to parameter entity references within entity values;
these are described in.</p></div><div class="div3"><h4><a id="error" name="error"></a>4.4.9 Error</h4><p><a href="#dt-error" title="Error">error</a><a href="#NT-EntityValue">EntityValue</a>It is anfor a reference to
		an unparsed entity to appear in thein an
		entity declaration.</p></div><dl><dd><p><a href="#dt-stag" title="Start-Tag">start-tag</a><a href="#dt-etag" title="End Tag">end-tag</a><a href="#NT-content">content</a>as a reference anywhere after theand before theof an element; corresponds
to the nonterminal.</p></dd><dd><p><a href="#dt-stag" title="Start-Tag">start-tag</a><a href="#dt-attdecl" title="Attribute-List Declaration">attribute declaration</a><a href="#NT-AttValue">AttValue</a>as a reference within either the value of an attribute in a,
or a default value in an;
corresponds to the nonterminal.</p></dd><dd><p><a href="#NT-Name">Name</a><b>ENTITY</b><b>ENTITIES</b>as a, not a reference, appearing either as
the value of an attribute which has been declared as type,
or as one of the space-separated tokens in the value of an attribute which
has been declared as type.</p></dd><dd><p><a href="#dt-litentval" title="Literal Entity Value">literal
entity value</a><a href="#NT-EntityValue">EntityValue</a>as a reference within a parameter or internal entity'sin the entity's declaration; corresponds to the nonterminal.</p></dd><dd><p><a href="#dt-doctype" title="Document Type Declaration">DTD</a><a href="#NT-EntityValue">EntityValue</a><a href="#NT-AttValue">AttValue</a><a href="#NT-PI">PI</a><a href="#NT-Comment">Comment</a><a href="#NT-SystemLiteral">SystemLiteral</a><a href="#NT-PubidLiteral">PubidLiteral</a><a href="#sec-condition-sect"><b>3.4 Conditional Sections</b></a>as a reference within either the internal or external subsets of the, but outside of an,,,,,,
or the contents of an ignored conditional section (see).</p><p>.</p></dd><dt class="label">Reference in Content</dt><dt class="label">Reference in Attribute Value</dt><dt class="label">Occurs as Attribute Value</dt><dt class="label">Reference in Entity Value</dt><dt class="label">Reference in DTD</dt></dl><h3><a id="entproc" name="entproc"></a>4.4 XML Processor Treatment of Entities and References</h3><p><a href="#dt-xml-proc" title="XML Processor">XML processor</a><strong>REQUIRED</strong>The table below summarizes the contexts in which character references,
entity references, and invocations of unparsed entities might appear and thebehavior of anin each case. The labels in the leftmost column describe the recognition context:</p><p></p><table border="1" cellpadding="7" frame="border"><tbody align="center"><tr><td rowspan="2"></td><td align="center" colspan="4" valign="bottom">Entity
Type</td><td align="center" rowspan="2">Character</td></tr><tr align="center" valign="bottom"><td>Parameter</td><td>Internal General</td><td>External Parsed
General</td><td>Unparsed</td></tr><tr align="center" valign="middle"><td align="right">Reference
in Content</td><td><a href="#not-recognized"><cite>Not recognized</cite></a></td><td><a href="#included"><cite>Included</cite></a></td><td><a href="#include-if-valid"><cite>Included
if validating</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#included"><cite>Included</cite></a></td></tr><tr align="center" valign="middle"><td align="right">Reference in Attribute Value</td><td><a href="#not-recognized"><cite>Not recognized</cite></a></td><td><a href="#inliteral"><cite>Included
in literal</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#included"><cite>Included</cite></a></td></tr><tr align="center" valign="middle"><td align="right">Occurs as Attribute
Value</td><td><a href="#not-recognized"><cite>Not recognized</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#notify"><cite>Notify</cite></a></td><td><a href="#not-recognized"><cite>Not recognized</cite></a></td></tr><tr align="center" valign="middle"><td align="right">Reference in EntityValue</td><td><a href="#inliteral"><cite>Included in literal</cite></a></td><td><a href="#bypass"><cite>Bypassed</cite></a></td><td><a href="#bypass"><cite>Bypassed</cite></a></td><td><a href="#error"><cite>Error</cite></a></td><td><a href="#included"><cite>Included</cite></a></td></tr><tr align="center" valign="middle"><td align="right">Reference in DTD</td><td><a href="#as-PE"><cite>Included as PE</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td><td><a href="#forbidden"><cite>Forbidden</cite></a></td></tr></tbody></table></div><div class="div2"><div class="exampleInner"><pre>&lt;!ENTITY % pub    "&amp;#xc9;ditions Gallimard" >
&lt;!ENTITY   rights "All rights reserved" >
&lt;!ENTITY   book   "La Peste: Albert Camus,
&amp;#xA9; 1947 %pub;. &amp;rights;" ></pre></div><div class="exampleInner"><pre>La Peste: Albert Camus,
© 1947 Éditions Gallimard. &amp;rights;</pre></div><h3><a id="intern-replacement" name="intern-replacement"></a>4.5 Construction of Entity Replacement Text</h3><p><a id="dt-litentval" name="dt-litentval" title="Literal Entity Value">Definition</a><a href="#NT-EntityValue">EntityValue</a><a id="dt-extlitentval" name="dt-extlitentval" title="Literal Entity Value">Definition</a><a id="dt-repltext" name="dt-repltext" title="Replacement Text">Definition</a><a id="dt-extrepltext" name="dt-extrepltext" title="Replacement Text">Definition</a><b>literal
entity value</b><b>literal
entity value</b><b>replacement text</b><b>replacement text</b>In discussing the treatment of entities, it is useful to distinguish
two forms of the entity's value.
[: For an
internal entity, theis the quoted string actually present in the entity declaration,
corresponding to the non-terminal.]
					[: For an external entity, theis the exact text contained in the entity.]
					[: For an
internal entity, theis the content of the entity, after replacement of character references and
parameter-entity references.]
					[: For
an external entity, theis the content of the entity,
after stripping the text declaration (leaving any surrounding whitespace) if there
is one but without any replacement of character references or parameter-entity
references.]</p><p><a href="#NT-EntityValue">EntityValue</a><a href="#dt-include" title="Include">included</a><a href="#inliteral" title="">included in literal</a><em>replacement
text</em><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong><strong>MUST</strong>The literal entity value as given in an internal entity declaration () may contain character, parameter-entity,
and general-entity references. Such referencesbe contained entirely
within the literal entity value. The actual replacement text that is(or) as described abovecontain theof any parameter entities referred to, andcontain the character
referred to, in place of any character references in the literal entity value;
however, general-entity referencesbe left as-is, unexpanded. For example,
given the following declarations:</p><p><code>book</code>then the replacement text for the entity ""
is:</p><p><code>&amp;rights;</code><code>&amp;book;</code>The general-entity reference "" would
be expanded should the reference "" appear
in the document's content or an attribute value.</p><p><a href="#sec-entexpand"><b>D Expansion of Entity and Character References</b></a>These simple rules may have complex interactions; for a detailed discussion
of a difficult example, see.</p></div><div class="div2"><div class="exampleInner"><pre>&lt;!ENTITY lt     "&amp;#38;#60;">
&lt;!ENTITY gt     "&amp;#62;">
&lt;!ENTITY amp    "&amp;#38;#38;">
&lt;!ENTITY apos   "&amp;#39;">
&lt;!ENTITY quot   "&amp;#34;"></pre></div><h3><a id="sec-predefined-ent" name="sec-predefined-ent"></a>4.6 Predefined Entities</h3><p><a id="dt-escape" name="dt-escape" title="escape">Definition</a><b>escape</b><code>amp</code><code>lt</code><code>gt</code><code>apos</code><code>quot</code><code>&amp;#60;</code><code>&amp;#38;</code><code>&lt;</code><code>&amp;</code><strong>MUST</strong>[: Entity and character references may
both be used tothe left angle bracket, ampersand, and
other delimiters. A set of general entities (,,,,) is specified for
this purpose. Numeric character references may also be used; they are expanded
immediately when recognized andbe treated as character data, so the
numeric character references "" and "" may be used to escapeandwhen they occur
in character data.]</p><p><a href="#dt-interop" title="For interoperability">For interoperability</a><code>lt</code><code>amp</code><code>gt</code><code>apos</code><code>quot</code><strong>MUST</strong><strong>SHOULD</strong><strong>MUST</strong><strong>REQUIRED</strong><strong>MUST</strong><strong>OPTIONAL</strong>All XML processorsrecognize these entities whether they are declared
or not., valid XML
documentsdeclare these entities, like any others, before using them. If
the entitiesorare declared, theybe
declared as internal entities whose replacement text is a character reference
to the respective
character (less-than sign or ampersand) being escaped; the double
escaping isfor these entities so that references to them produce
a well-formed result. If the entities,,
orare declared, theybe declared as internal entities
whose replacement text is the single character being escaped (or a character
reference to that character; the double escaping here isbut harmless).
For example:</p></div><div class="div2"><div class="constraint"><p class="prefix"><a id="UniqueNotationName" name="UniqueNotationName"></a><b>Validity constraint: Unique Notation Name</b></p><p><a href="#NT-Name">Name</a><strong>MUST NOT</strong>A givenbe declared in more than one notation declaration.</p></div><h3><a id="Notations" name="Notations"></a>4.7 Notation Declarations</h3><h5><a id="d0e5457" name="d0e5457"></a>Notation Declarations</h5><p><a id="dt-notation" name="dt-notation" title="Notation">Definition</a><a href="#dt-unparsed" title="Unparsed Entity">unparsed entities</a><a href="#dt-pi" title="Processing instruction">processing instruction</a><b>Notations</b>[:identify
by name the format of,
the format of elements which bear a notation attribute, or the application
to which ais addressed.]</p><p><a id="dt-notdecl" name="dt-notdecl" title="Notation Declaration">Definition</a><b>Notation declarations</b>[:provide a name for the notation, for use in entity and attribute-list declarations
and in attribute specifications, and an external identifier for the notation
which may allow an XML processor or its client application to locate a helper
application capable of processing data in the given notation.]</p><p><a href="#dt-sysid" title="System Identifier">system identifier</a><strong>MUST</strong><strong>MAY</strong>XML processorsprovide applications with the name and external identifier(s)
of any notation declared and referred to in an attribute value, attribute
definition, or entity declaration. Theyadditionally resolve the external
identifier into the, file
name, or other information needed to allow the application to call a processor
for data in the notation described. (It is not an error, however, for XML
documents to declare and refer to notations for which notation-specific applications
are not available on the system where the XML processor or application is
running.)</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-NotationDecl" name="NT-NotationDecl"></a>[82]</td><td><code>NotationDecl</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-Name">Name</a><a href="#NT-S">S</a><a href="#NT-ExternalID">ExternalID</a><a href="#NT-PublicID">PublicID</a><a href="#NT-S">S</a>'&lt;!NOTATION'(|)? '>'</code></td><td><a href="#UniqueNotationName">[VC: Unique Notation Name]</a></td></tr></tbody><tbody><tr valign="baseline"><td><a id="NT-PublicID" name="NT-PublicID"></a>[83]</td><td><code>PublicID</code></td><td>::=</td><td><code><a href="#NT-S">S</a><a href="#NT-PubidLiteral">PubidLiteral</a>'PUBLIC'</code></td></tr></tbody></table></div><div class="div2"><h3><a id="sec-doc-entity" name="sec-doc-entity"></a>4.8 Document Entity</h3><p><a id="dt-docent" name="dt-docent" title="Document Entity">Definition</a><a href="#dt-xml-proc" title="XML Processor">XML processor</a><b>document entity</b>[: Theserves as the root of the entity tree and a starting-point for an.] This specification does
not specify how the document entity is to be located by an XML processor;
unlike other entities, the document entity has no name and might well appear
on a processor input stream without any identification at all.</p></div><h2><a id="sec-physical-struct" name="sec-physical-struct"></a>4 Physical Structures</h2><p><a id="dt-entity" name="dt-entity" title="Entity">Definition</a><a href="#dt-docent" title="Document Entity">document entity</a><a href="#dt-doctype" title="Document Type Declaration">external DTD subset</a><a href="#dt-docent" title="Document Entity">document entity</a><a href="#dt-xml-proc" title="XML Processor">XML processor</a><b>entities</b><b>content</b><b>name</b>[: An XML document may consist of one
or many storage units. These
are called; they all haveand are
all (except for theand
the) identified by
entity.] Each XML document has one entity
called the, which serves
as the starting point for theand may contain the whole document.</p><p><a id="dt-parsedent" name="dt-parsedent" title="Text Entity">Definition</a><a href="#dt-repltext" title="Replacement Text">replacement
text</a><a href="#dt-text" title="Text">text</a><b>parsed
entity</b>Entities may be either parsed or unparsed. [: The contents of aare referred to as its; thisis considered an
integral part of the document.]</p><p><a id="dt-unparsed" name="dt-unparsed" title="Unparsed Entity">Definition</a><a href="#dt-text" title="Text">text</a><a href="#dt-notation" title="Notation">notation</a><b>unparsed entity</b>[: Anis a resource whose contents may or may not be,
and if text, may
be other than XML. Each unparsed entity has an associated, identified by name. Beyond a requirement
that an XML processor make the identifiers for the entity and notation available
to the application, XML places no constraints on the contents of unparsed
entities.]</p><p><b>ENTITY</b><b>ENTITIES</b>Parsed entities are invoked by name using entity references; unparsed entities
by name, given in the value oforattributes.</p><p><a id="gen-entity" name="gen-entity" title="general entity">Definition</a><a id="dt-PE" name="dt-PE" title="Parameter entity">Definition</a><b>General entities</b><b>Parameter
entities</b><em>entity</em>[:are entities for use within the document content. In this specification, general
entities are sometimes referred to with the unqualified termwhen this leads to no ambiguity.]
				[:are parsed entities for use within the DTD.]
These two types of entities use different forms of reference and are recognized
in different contexts. Furthermore, they occupy different namespaces; a parameter
entity and a general entity with the same name are two distinct entities.</p></div><div class="div1"><div class="div2"><h3><a id="proc-types" name="proc-types"></a>5.1 Validating and Non-Validating Processors</h3><p><a href="#dt-xml-proc" title="XML Processor">XML processors</a>Conformingfall into
two classes: validating and non-validating.</p><p><a href="#dt-docent" title="Document Entity">document entity</a><a href="#dt-parsedent" title="Text Entity">parsed
entities</a><strong>MUST</strong>Validating and non-validating processors alikereport violations of
this specification's well-formedness constraints in the content of theand any otherthat they read.</p><p><a id="dt-validating" name="dt-validating" title="Validating Processor">Definition</a><a href="#dt-doctype" title="Document Type Declaration">DTD</a><b>Validating
processors</b><strong>MUST</strong><strong>MUST</strong>[:,
at user option, report violations of the constraints expressed by
the declarations in the, and failures
to fulfill the validity constraints given in this specification.]
To accomplish this, validating XML processorsread and process the entire
DTD and all external parsed entities referenced in the document.</p><p><a href="#dt-docent" title="Document Entity">document
entity</a><a id="dt-use-mdecl" name="dt-use-mdecl" title="Process Declarations">Definition</a><a href="#AVNormalize"><cite>normalize</cite></a><a href="#included"><cite>include</cite></a><a href="#sec-attr-defaults"><cite>default
attribute values</cite></a><a href="#dt-use-mdecl" title="Process Declarations">process</a><a href="#dt-entdecl" title="entity declaration">entity
declarations</a><a href="#dt-attdecl" title="Attribute-List Declaration">attribute-list declarations</a><b>process</b><code>standalone="yes"</code><code>standalone="yes"</code><em>not</em><strong>REQUIRED</strong><strong>REQUIRED</strong><strong>MUST</strong><strong>MUST NOT</strong><strong>MUST</strong>Non-validating processors areto check only the, including the entire internal DTD subset, for well-formedness. [:  While they are not required
to check the document for validity, they aretoall the declarations they read in the internal DTD subset and in any parameter
entity that they read, up to the first reference to a parameter entity that
they doread; that is to say, theyuse the information
in those declarations toattribute values,the replacement
text of internal entities, and supply.] Except when, theyorencountered after a reference to a parameter entity that is not read, since
the entity may have contained overriding declarations; when, processorsprocess these declarations.</p><p>Note that when processing invalid documents with a non-validating
processor the application may not be presented with consistent
information.  For example, several requirements for uniqueness
within the document may not be met, including more than one element
with the same id, duplicate declarations of elements or notations
with the same name, etc.  In these cases the behavior of the parser
with respect to reporting such information to the application is
undefined.</p></div><div class="div2"><h3><a id="safe-behavior" name="safe-behavior"></a>5.2 Using XML Processors</h3><p>The behavior of a validating XML processor is highly predictable; it must
read every piece of a document and report all well-formedness and validity
violations. Less is required of a non-validating processor; it need not read
any part of the document other than the document entity. This has two effects
that may be important to users of XML processors:</p><p><strong>SHOULD NOT</strong><strong>SHOULD</strong>For maximum reliability in interoperating between different XML processors,
applications which use non-validating processorsrely on any behaviors
not required of such processors. Applications which require DTD facilities not related to validation (such
as the declaration of default attributes and internal entities that are or may be specified in
external entities)use validating XML processors.</p><ul><li><p><a href="#wf-entdeclared"><cite>Entity Declared</cite></a><a href="#textent"><cite>Parsed Entity</cite></a><a href="#norecursion"><cite>No
Recursion</cite></a><a href="#forbidden"><cite>forbidden</cite></a><a href="#entproc"><b>4.4 XML Processor Treatment of Entities and References</b></a>Certain well-formedness errors, specifically those that require reading
external entities, may fail to be detected by a non-validating processor. Examples
include the constraints entitled,, and, as well as some of the cases described asin.</p></li><li><p><a href="#AVNormalize"><cite>normalize</cite></a><a href="#included"><cite>include</cite></a><a href="#sec-attr-defaults"><cite>default
attribute values</cite></a><span class="diff-add"><span><a href="E04">E04</a>, or in the internal subset after an unread 
parameter entity reference</span></span>The information passed from the processor to the application may
vary, depending on whether the processor reads parameter and external entities.
For example, a non-validating processor may fail toattribute values,the replacement
text of internal entities, or supply, where doing so depends on having read declarations
in external or parameter entities.</p></li></ul></div><h2><a id="sec-conformance" name="sec-conformance"></a>5 Conformance</h2></div><div class="div1"><div class="exampleInner"><pre>symbol ::= expression</pre></div><dl><dd><p><code>N</code><code>N</code><code>#xN</code>whereis a hexadecimal integer, the expression matches the character
whose number
(code point) in ISO/IEC 10646 is. The number of leading zeros in theform is insignificant.</p></dd><dd><p><a href="#NT-Char">Char</a>matches anywith a value in the range(s) indicated (inclusive).</p></dd><dd><p><a href="#NT-Char">Char</a>matches anywith a value among the characters
enumerated. Enumerations and ranges can be mixed in one set of brackets.</p></dd><dd><p><a href="#NT-Char">Char</a><em>outside</em>matches anywith a valuethe range
indicated.</p></dd><dd><p><a href="#NT-Char">Char</a>matches anywith a value not among the characters given. Enumerations
and ranges of forbidden values can be mixed in one set of brackets.</p></dd><dd><p><a href="#dt-match" title="match">matching</a>matches a literal stringthat
given inside the double quotes.</p></dd><dd><p><a href="#dt-match" title="match">matching</a>matches a literal stringthat
given inside the single quotes.</p></dd><dt class="label"><code>#xN</code></dt><dt class="label"><code>[a-zA-Z]</code><code>[#xN-#xN]</code>,</dt><dt class="label"><code>[abc]</code><code>[#xN#xN#xN]</code>,</dt><dt class="label"><code>[^a-z]</code><code>[^#xN-#xN]</code>,</dt><dt class="label"><code>[^abc]</code><code>[^#xN#xN#xN]</code>,</dt><dt class="label"><code>"string"</code></dt><dt class="label"><code>'string'</code></dt></dl><dl><dd><p><code>expression</code>is treated as a unit and may be combined as described
in this list.</p></dd><dd><p><code>A</code><code>A</code>matchesor nothing; optional.</p></dd><dd><p><code>A</code><code>B</code><code>A B | C D</code><code>(A B) | (C D)</code>matchesfollowed by. This
operator has higher precedence than alternation; thusis identical to.</p></dd><dd><p><code>A</code><code>B</code>matchesor.</p></dd><dd><p><code>A</code><code>B</code>matches any string that matchesbut does not match.</p></dd><dd><p><code>A</code><code>A+ | B+</code><code>(A+) | (B+)</code>matches one or more occurrences of. Concatenation
has higher precedence than alternation; thusis identical
to.</p></dd><dd><p><code>A</code><code>A* | B*</code><code>(A*) | (B*)</code>matches zero or more occurrences of. Concatenation
has higher precedence than alternation; thusis identical
to.</p></dd><dt class="label"><code>expression</code>()</dt><dt class="label"><code>A?</code></dt><dt class="label"><code>A B</code></dt><dt class="label"><code>A | B</code></dt><dt class="label"><code>A - B</code></dt><dt class="label"><code>A+</code></dt><dt class="label"><code>A*</code></dt></dl><dl><dd><p>comment.</p></dd><dd><p><a href="#dt-wellformed" title="Well-Formed">well-formed</a>well-formedness constraint; this identifies by name a constraint ondocuments associated with a production.</p></dd><dd><p><a href="#dt-valid" title="Validity">valid</a>validity constraint; this identifies by name a constraint ondocuments associated with a production.</p></dd><dt class="label"><code>/* ... */</code></dt><dt class="label"><code>[ wfc: ... ]</code></dt><dt class="label"><code>[ vc: ... ]</code></dt></dl><h2><a id="sec-notation" name="sec-notation"></a>6 Notation</h2><p>The formal grammar of XML is given in this specification using a simple
Extended Backus-Naur Form (EBNF) notation. Each rule in the grammar defines
one symbol, in the form</p><p>Symbols are written with an initial capital letter if they are the
start symbol of a regular language, otherwise with an initial lowercase letter.
Literal strings are quoted.</p><p>Within the expression on the right-hand side of a rule, the following expressions
are used to match strings of one or more characters:</p><p><code>A</code><code>B</code>These symbols may be combined to match more complex patterns as follows,
whereandrepresent simple expressions:</p><p>Other notations used in the productions are:</p><p></p></div></div><div class="back"><div class="div1"><div class="div2"><dl><dd><a href="http://www.iana.org/assignments/character-sets"><cite>Official Names for Character Sets</cite></a>(Internet
Assigned Numbers Authority),
ed. Keld Simonsen et al.  (See http://www.iana.org/assignments/character-sets.)</dd><dd><a href="http://www.ietf.org/rfc/rfc2119.txt"><cite>RFC 2119: Key words for use in RFCs to Indicate Requirement Levels</cite></a>IETF
(Internet Engineering Task Force)..
Scott Bradner, 1997.  (See http://www.ietf.org/rfc/rfc2119.txt.)</dd><dd><div class="diff-chg"><a href="E01">E01</a><a href="ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt"><cite>BCP 47, consisting of RFC 4646: Tags for Identifying Languages, and RFC 4647: Matching of Language Tags</cite></a>IETF
						(Internet Engineering Task Force).,
						A. Phillips, M. Davis. 2006.  (See ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt.)</div></dd><dd><a href="http://www.ietf.org/rfc/rfc3986.txt"><cite>RFC 3986: Uniform Resource Identifier (URI): Generic Syntax</cite></a>IETF (Internet Engineering Task Force).. T. Berners-Lee, R. Fielding, L. Masinter. 2005.  (See http://www.ietf.org/rfc/rfc3986.txt.)</dd><dd><a href="http://www.iso.org/iso/home.htm">http://www.iso.org/iso/home.htm</a><cite>ISO/IEC 10646-1:2000. Information
technology — Universal Multiple-Octet Coded Character Set (UCS) —
Part 1: Architecture and Basic Multilingual Plane</cite><cite>ISO/IEC 10646-2:2001.
Information technology — Universal Multiple-Octet Coded Character Set (UCS) — Part 2:
Supplementary Planes</cite>ISO (International
Organization for Standardization).and, as, from time to time, amended, replaced by a new edition or
expanded by the addition of new parts. [Geneva]: International Organization for Standardization.
(Seefor the latest version.)</dd><dd><cite>ISO/IEC 10646-1:2000. Information
technology — Universal Multiple-Octet Coded Character Set (UCS) —
Part 1: Architecture and Basic Multilingual Plane.</cite>ISO (International
Organization for Standardization).[Geneva]: International
Organization for Standardization, 2000.</dd><dd><em><span class="diff-chg"><span><a href="E11">E11</a>5.0.0,</span></span>The Unicode
Standard, Version</em><span class="diff-del"><span><a href="E11">E11</a>Reading, Mass.: Addison-Wesley Developers Press,
1996</span></span><span class="diff-add"><span><a href="E11">E11</a>defined by: The Unicode Standard, Version 5.0 (Boston, MA,
Addison-Wesley, 2007. ISBN 0-321-48091-0)</span></span>The Unicode Consortium..</dd><dd><a href="http://unicode.org/reports/tr15/"><cite>Unicode normalization forms</cite></a>The Unicode
Consortium..  Mark Davis and
Martin Durst.  2008.  (See http://unicode.org/reports/tr15/.)</dd><dd><div class="diff-del"><a href="E11">E11</a><a href="http://www.unicode.org/reports/tr27/">http://www.unicode.org/reports/tr27</a><a href="http://www.unicode.org/reports/tr28/">http://www.unicode.org/reports/tr28</a><em>The Unicode Standard, Version 3.2</em><em>The Unicode Standard, Version 3.0</em><em>Unicode
Standard Annex #27: Unicode 3.1</em><em>Unicode Standard Annex #28: Unicode
3.2</em>The Unicode
Consortium., defined by:(Reading, MA,
Addison-Wesley, 2000. ISBN 0-201-61633-5), as amended by the() and the().</div></dd><dt class="label"><a id="IANA" name="IANA"></a>IANA-CHARSETS</dt><dt class="label"><a id="rfc2119" name="rfc2119"></a>IETF RFC 2119</dt><dt class="label"><span class="diff-chg"><a name="RFC1766"></a>IETF BCP 47</span></dt><dt class="label"><a id="rfc3986" name="rfc3986"></a>IETF RFC 3986</dt><dt class="label"><a id="ISO10646" name="ISO10646"></a>ISO/IEC 10646</dt><dt class="label"><a id="ISO10646-2000" name="ISO10646-2000"></a>ISO/IEC 10646:2000</dt><dt class="label"><a id="Unicode" name="Unicode"></a>Unicode</dt><dt class="label"><a id="unipart15" name="unipart15"></a>UnicodeNormal</dt><dt class="label"><span class="diff-del"><a name="Unicode3"></a>Unicode3</span></dt></dl><h3><a id="sec-existing-stds" name="sec-existing-stds"></a>A.1 Normative References</h3></div><div class="div2"><dl><dd><cite>Compilers: Principles, Techniques, and Tools</cite>Aho, Alfred V., Ravi Sethi, and Jeffrey D.
Ullman..
Reading: Addison-Wesley, 1986, rpt. corr. 1988.</dd><dd><a href="ftp://ftp.informatik.uni-freiburg.de/documents/papers/brueggem/habil.ps"><cite>Formal Models in Document Processing</cite></a>Brüggemann-Klein,
Anne.. Habilitationsschrift. Faculty
of Mathematics at the University of Freiburg, 1993.  (See ftp://ftp.informatik.uni-freiburg.de/documents/papers/brueggem/habil.ps.)</dd><dd><cite>Deterministic Regular Languages</cite><cite>One-Unambiguous
Regular Languages</cite>Brüggemann-Klein,
Anne, and Derick Wood..
Universität Freiburg, Institut für Informatik, Bericht 38, Oktober 1991. Extended
abstract in A. Finkel, M. Jantzen, Hrsg., STACS 1992, S. 173-184. Springer-Verlag,
Berlin 1992. Lecture Notes in Computer Science 577. Full version titledin Information and Computation 140 (2): 229-253,
February 1998.</dd><dd><a href="http://www.w3.org/TR/NOTE-sgml-xml-971215"><cite>Comparison of SGML and XML</cite></a>James Clark..  (See http://www.w3.org/TR/NOTE-sgml-xml-971215.)</dd><dd><div class="diff-chg"><a href="E01">E01</a><a href="http://www.iana.org/assignments/language-subtag-registry"><cite>Registry of Language Tags</cite></a>(Internet
Assigned Numbers Authority)(See http://www.iana.org/assignments/language-subtag-registry.)</div></dd><dd><a href="http://www.ietf.org/rfc/rfc2141.txt"><cite>RFC 2141: URN Syntax</cite></a>IETF
(Internet Engineering Task Force)., ed.
R. Moats. 1997.   (See http://www.ietf.org/rfc/rfc2141.txt.)</dd><dd><a href="http://www.ietf.org/rfc/rfc3023.txt"><cite>RFC 3023: XML Media Types</cite></a>IETF
(Internet Engineering Task Force)..
eds. M. Murata, S. St.Laurent, D. Kohn. 2001.  (See http://www.ietf.org/rfc/rfc3023.txt.)</dd><dd><a href="http://www.ietf.org/rfc/rfc2781.txt"><cite>RFC 2781: UTF-16, an encoding
of ISO 10646</cite></a>IETF
(Internet Engineering Task Force)., ed. P. Hoffman, F. Yergeau. 2000.  (See http://www.ietf.org/rfc/rfc2781.txt.)</dd><dd><cite>ISO 639:1988 (E).
Code for the representation of names of languages.</cite>(International Organization for Standardization).[Geneva]: International
Organization for Standardization, 1988.</dd><dd><cite>ISO 3166-1:1997
(E). Codes for the representation of names of countries and their subdivisions —
Part 1: Country codes</cite>(International Organization for Standardization).[Geneva]: International Organization for
Standardization, 1997.</dd><dd><cite>ISO
8879:1986(E). Information processing — Text and Office Systems —
Standard Generalized Markup Language (SGML).</cite>ISO (International Organization for Standardization).First edition —
1986-10-15. [Geneva]: International Organization for Standardization, 1986.</dd><dd><cite>ISO/IEC 10744-1992 (E). Information technology —
Hypermedia/Time-based Structuring Language (HyTime).</cite><em>Extended Facilities
Annexe.</em>ISO (International Organization for
Standardization).[Geneva]:
International Organization for Standardization, 1992.[Geneva]: International Organization for Standardization, 1996.</dd><dd><a href="http://www.sgmlsource.com/8879/n0029.htm"><cite>ISO 8879:1986
TC2. Information technology — Document Description and Processing Languages</cite></a>ISO
(International Organization for Standardization)..
[Geneva]: International Organization for Standardization, 1998.  (See http://www.sgmlsource.com/8879/n0029.htm.)</dd><dd><a href="http://www.w3.org/TR/xml-names/"><cite>Namespaces in XML</cite></a>Tim Bray,
Dave Hollander, and Andrew Layman, editors..
Textuality, Hewlett-Packard, and Microsoft. World Wide Web Consortium, 1999.  (See http://www.w3.org/TR/xml-names/.)</dd><dt class="label"><a id="Aho" name="Aho"></a>Aho/Ullman</dt><dt class="label"><a id="ABK" name="ABK"></a>Brüggemann-Klein</dt><dt class="label"><a id="ABKDW" name="ABKDW"></a>Brüggemann-Klein and Wood</dt><dt class="label"><a id="Clark" name="Clark"></a>Clark</dt><dt class="label"><span class="diff-chg"><a name="IANA-LANGCODES"></a>IANA-LANGCODES</span></dt><dt class="label"><a id="RFC2141" name="RFC2141"></a>IETF RFC 2141</dt><dt class="label"><a id="rfc2376" name="rfc2376"></a>IETF RFC 3023</dt><dt class="label"><a id="rfc2781" name="rfc2781"></a>IETF RFC 2781</dt><dt class="label"><a id="ISO639" name="ISO639"></a>ISO 639</dt><dt class="label"><a id="ISO3166" name="ISO3166"></a>ISO 3166</dt><dt class="label"><a id="ISO8879" name="ISO8879"></a>ISO 8879</dt><dt class="label"><a id="ISO10744" name="ISO10744"></a>ISO/IEC 10744</dt><dt class="label"><a id="websgml" name="websgml"></a>WEBSGML</dt><dt class="label"><a id="xml-names" name="xml-names"></a>XML Names</dt></dl><h3><a id="null" name="null"></a>A.2 Other References</h3></div><h2><a id="sec-bibliography" name="sec-bibliography"></a>A References</h2></div><div class="div1"><div class="diff-add"><p><a href="E09">E09</a><a href="#NT-NameStartChar">[4]</a><a href="#NT-Name">[5]</a><a href="http://www.w3.org/TR/2006/REC-xml-20060816/">Fourth Edition</a>Because of changes to productionsand, the productions in
				this Appendix are now orphaned and not used anymore in determining
				name characters.  This Appendix may be removed in a future edition of 
				this specification; other specifications that wish to refer to the productions herein should
				do so by means of a reference to the relevant production(s) in theof this specification.</p></div><h2><a id="CharClasses" name="CharClasses"></a>B Character Classes</h2><h5><a id="CHARACTERS" name="CHARACTERS"></a>Characters</h5><p>Following the characteristics defined in the Unicode standard, characters
are classed as base characters (among others, these contain the alphabetic
characters of the Latin alphabet), ideographic characters, and combining characters (among
others, this class contains most diacritics). Digits and extenders are also
distinguished.</p><p>The character classes defined here can be derived from the Unicode 2.0
character database as follows:</p><table class="scrap" summary="Scrap"><tbody><tr valign="baseline"><td><a id="NT-Letter" name="NT-Letter"></a>[84]</td><td><code>Letter</code></td><td>::=</td><td><code><a href="#NT-BaseChar">BaseChar</a><a href="#NT-Ideographic">Ideographic</a>|</code></td></tr><tr valign="baseline"><td><a id="NT-BaseChar" name="NT-BaseChar"></a>[85]</td><td><code>BaseChar</code></td><td>::=</td><td><code>[#x0041-#x005A] | [#x0061-#x007A] | [#x00C0-#x00D6]
| [#x00D8-#x00F6] | [#x00F8-#x00FF] | [#x0100-#x0131] | [#x0134-#x013E]
| [#x0141-#x0148] | [#x014A-#x017E] | [#x0180-#x01C3] | [#x01CD-#x01F0]
| [#x01F4-#x01F5] | [#x01FA-#x0217] | [#x0250-#x02A8] | [#x02BB-#x02C1]
| #x0386 | [#x0388-#x038A] | #x038C | [#x038E-#x03A1]
| [#x03A3-#x03CE] | [#x03D0-#x03D6] | #x03DA | #x03DC
| #x03DE | #x03E0 | [#x03E2-#x03F3] | [#x0401-#x040C]
| [#x040E-#x044F] | [#x0451-#x045C] | [#x045E-#x0481] | [#x0490-#x04C4]
| [#x04C7-#x04C8] | [#x04CB-#x04CC] | [#x04D0-#x04EB] | [#x04EE-#x04F5]
| [#x04F8-#x04F9] | [#x0531-#x0556] | #x0559 | [#x0561-#x0586]
| [#x05D0-#x05EA] | [#x05F0-#x05F2] | [#x0621-#x063A] | [#x0641-#x064A]
| [#x0671-#x06B7] | [#x06BA-#x06BE] | [#x06C0-#x06CE] | [#x06D0-#x06D3]
| #x06D5 | [#x06E5-#x06E6] | [#x0905-#x0939] | #x093D
| [#x0958-#x0961] | [#x0985-#x098C] | [#x098F-#x0990] | [#x0993-#x09A8]
| [#x09AA-#x09B0] | #x09B2 | [#x09B6-#x09B9] | [#x09DC-#x09DD]
| [#x09DF-#x09E1] | [#x09F0-#x09F1] | [#x0A05-#x0A0A] | [#x0A0F-#x0A10]
| [#x0A13-#x0A28] | [#x0A2A-#x0A30] | [#x0A32-#x0A33] | [#x0A35-#x0A36]
| [#x0A38-#x0A39] | [#x0A59-#x0A5C] | #x0A5E | [#x0A72-#x0A74]
| [#x0A85-#x0A8B] | #x0A8D | [#x0A8F-#x0A91] | [#x0A93-#x0AA8]
| [#x0AAA-#x0AB0] | [#x0AB2-#x0AB3] | [#x0AB5-#x0AB9] | #x0ABD
| #x0AE0 | [#x0B05-#x0B0C] | [#x0B0F-#x0B10] | [#x0B13-#x0B28]
| [#x0B2A-#x0B30] | [#x0B32-#x0B33] | [#x0B36-#x0B39] | #x0B3D
| [#x0B5C-#x0B5D] | [#x0B5F-#x0B61] | [#x0B85-#x0B8A] | [#x0B8E-#x0B90]
| [#x0B92-#x0B95] | [#x0B99-#x0B9A] | #x0B9C | [#x0B9E-#x0B9F]
| [#x0BA3-#x0BA4] | [#x0BA8-#x0BAA] | [#x0BAE-#x0BB5] | [#x0BB7-#x0BB9]
| [#x0C05-#x0C0C] | [#x0C0E-#x0C10] | [#x0C12-#x0C28] | [#x0C2A-#x0C33]
| [#x0C35-#x0C39] | [#x0C60-#x0C61] | [#x0C85-#x0C8C] | [#x0C8E-#x0C90]
| [#x0C92-#x0CA8] | [#x0CAA-#x0CB3] | [#x0CB5-#x0CB9] | #x0CDE
| [#x0CE0-#x0CE1] | [#x0D05-#x0D0C] | [#x0D0E-#x0D10] | [#x0D12-#x0D28]
| [#x0D2A-#x0D39] | [#x0D60-#x0D61] | [#x0E01-#x0E2E] | #x0E30
| [#x0E32-#x0E33] | [#x0E40-#x0E45] | [#x0E81-#x0E82] | #x0E84
| [#x0E87-#x0E88] | #x0E8A | #x0E8D | [#x0E94-#x0E97]
| [#x0E99-#x0E9F] | [#x0EA1-#x0EA3] | #x0EA5 | #x0EA7
| [#x0EAA-#x0EAB] | [#x0EAD-#x0EAE] | #x0EB0 | [#x0EB2-#x0EB3]
| #x0EBD | [#x0EC0-#x0EC4] | [#x0F40-#x0F47] | [#x0F49-#x0F69]
| [#x10A0-#x10C5] | [#x10D0-#x10F6] | #x1100 | [#x1102-#x1103]
| [#x1105-#x1107] | #x1109 | [#x110B-#x110C] | [#x110E-#x1112]
| #x113C | #x113E | #x1140 | #x114C | #x114E | #x1150
| [#x1154-#x1155] | #x1159 | [#x115F-#x1161] | #x1163
| #x1165 | #x1167 | #x1169 | [#x116D-#x116E] | [#x1172-#x1173]
| #x1175 | #x119E | #x11A8 | #x11AB | [#x11AE-#x11AF]
| [#x11B7-#x11B8] | #x11BA | [#x11BC-#x11C2] | #x11EB
| #x11F0 | #x11F9 | [#x1E00-#x1E9B] | [#x1EA0-#x1EF9]
| [#x1F00-#x1F15] | [#x1F18-#x1F1D] | [#x1F20-#x1F45] | [#x1F48-#x1F4D]
| [#x1F50-#x1F57] | #x1F59 | #x1F5B | #x1F5D | [#x1F5F-#x1F7D]
| [#x1F80-#x1FB4] | [#x1FB6-#x1FBC] | #x1FBE | [#x1FC2-#x1FC4]
| [#x1FC6-#x1FCC] | [#x1FD0-#x1FD3] | [#x1FD6-#x1FDB] | [#x1FE0-#x1FEC]
| [#x1FF2-#x1FF4] | [#x1FF6-#x1FFC] | #x2126 | [#x212A-#x212B]
| #x212E | [#x2180-#x2182] | [#x3041-#x3094] | [#x30A1-#x30FA]
| [#x3105-#x312C] | [#xAC00-#xD7A3]</code></td></tr><tr valign="baseline"><td><a id="NT-Ideographic" name="NT-Ideographic"></a>[86]</td><td><code>Ideographic</code></td><td>::=</td><td><code>[#x4E00-#x9FA5] | #x3007 | [#x3021-#x3029]</code></td></tr><tr valign="baseline"><td><a id="NT-CombiningChar" name="NT-CombiningChar"></a>[87]</td><td><code>CombiningChar</code></td><td>::=</td><td><code>[#x0300-#x0345] | [#x0360-#x0361] | [#x0483-#x0486]
| [#x0591-#x05A1] | [#x05A3-#x05B9] | [#x05BB-#x05BD] | #x05BF
| [#x05C1-#x05C2] | #x05C4 | [#x064B-#x0652] | #x0670
| [#x06D6-#x06DC] | [#x06DD-#x06DF] | [#x06E0-#x06E4] | [#x06E7-#x06E8]
| [#x06EA-#x06ED] | [#x0901-#x0903] | #x093C | [#x093E-#x094C]
| #x094D | [#x0951-#x0954] | [#x0962-#x0963] | [#x0981-#x0983]
| #x09BC | #x09BE | #x09BF | [#x09C0-#x09C4] | [#x09C7-#x09C8]
| [#x09CB-#x09CD] | #x09D7 | [#x09E2-#x09E3] | #x0A02
| #x0A3C | #x0A3E | #x0A3F | [#x0A40-#x0A42] | [#x0A47-#x0A48]
| [#x0A4B-#x0A4D] | [#x0A70-#x0A71] | [#x0A81-#x0A83] | #x0ABC
| [#x0ABE-#x0AC5] | [#x0AC7-#x0AC9] | [#x0ACB-#x0ACD] | [#x0B01-#x0B03]
| #x0B3C | [#x0B3E-#x0B43] | [#x0B47-#x0B48] | [#x0B4B-#x0B4D]
| [#x0B56-#x0B57] | [#x0B82-#x0B83] | [#x0BBE-#x0BC2] | [#x0BC6-#x0BC8]
| [#x0BCA-#x0BCD] | #x0BD7 | [#x0C01-#x0C03] | [#x0C3E-#x0C44]
| [#x0C46-#x0C48] | [#x0C4A-#x0C4D] | [#x0C55-#x0C56] | [#x0C82-#x0C83]
| [#x0CBE-#x0CC4] | [#x0CC6-#x0CC8] | [#x0CCA-#x0CCD] | [#x0CD5-#x0CD6]
| [#x0D02-#x0D03] | [#x0D3E-#x0D43] | [#x0D46-#x0D48] | [#x0D4A-#x0D4D]
| #x0D57 | #x0E31 | [#x0E34-#x0E3A] | [#x0E47-#x0E4E]
| #x0EB1 | [#x0EB4-#x0EB9] | [#x0EBB-#x0EBC] | [#x0EC8-#x0ECD]
| [#x0F18-#x0F19] | #x0F35 | #x0F37 | #x0F39 | #x0F3E
| #x0F3F | [#x0F71-#x0F84] | [#x0F86-#x0F8B] | [#x0F90-#x0F95]
| #x0F97 | [#x0F99-#x0FAD] | [#x0FB1-#x0FB7] | #x0FB9
| [#x20D0-#x20DC] | #x20E1 | [#x302A-#x302F] | #x3099
| #x309A</code></td></tr><tr valign="baseline"><td><a id="NT-Digit" name="NT-Digit"></a>[88]</td><td><code>Digit</code></td><td>::=</td><td><code>[#x0030-#x0039] | [#x0660-#x0669] | [#x06F0-#x06F9]
| [#x0966-#x096F] | [#x09E6-#x09EF] | [#x0A66-#x0A6F] | [#x0AE6-#x0AEF]
| [#x0B66-#x0B6F] | [#x0BE7-#x0BEF] | [#x0C66-#x0C6F] | [#x0CE6-#x0CEF]
| [#x0D66-#x0D6F] | [#x0E50-#x0E59] | [#x0ED0-#x0ED9] | [#x0F20-#x0F29]</code></td></tr><tr valign="baseline"><td><a id="NT-Extender" name="NT-Extender"></a>[89]</td><td><code>Extender</code></td><td>::=</td><td><code>#x00B7 | #x02D0 | #x02D1 | #x0387 | #x0640
| #x0E46 | #x0EC6 | #x3005 | [#x3031-#x3035] | [#x309D-#x309E]
| [#x30FC-#x30FE]</code></td></tr></tbody></table><ul><li><p>Name start characters must have one of the categories Ll, Lu, Lo,
Lt, Nl.</p></li><li><p>Name characters other than Name-start characters must have one of
the categories Mc, Me, Mn, Lm, or Nd.</p></li><li><p>Characters in the compatibility area (i.e. with character code greater
than #xF900 and less than #xFFFE) are not allowed in XML names.</p></li><li><p>Characters which have a font or compatibility decomposition (i.e.
those with a "compatibility formatting tag" in field 5 of the
database -- marked by field 5 beginning with a "&lt;") are not
allowed.</p></li><li><p>The following characters are treated as name-start characters rather
than name characters, because the property file classifies them as Alphabetic:
[#x02BB-#x02C1], #x0559, #x06E5, #x06E6.</p></li><li><p>Characters #x20DD-#x20E0 are excluded (in accordance with Unicode 2.0,
section 5.14).</p></li><li><p>Character #x00B7 is classified as an extender, because the property
list so identifies it.</p></li><li><p>Character #x0387 is added as a name character, because #x00B7 is
its canonical equivalent.</p></li><li><p>Characters ':' and '_' are allowed as name-start characters.</p></li><li><p>Characters '-' and '.' are allowed as name characters.</p></li></ul></div><div class="div1"><h2><a id="sec-xml-and-sgml" name="sec-xml-and-sgml"></a>C XML and SGML (Non-Normative)</h2><p><a href="#Clark">[Clark]</a>XML
is designed to be a subset of SGML, in that every XML document should also
be a conforming SGML document. For a detailed comparison of the additional
restrictions that XML places on documents beyond those of SGML, see.</p></div><div class="div1"><div class="exampleInner"><pre>&lt;!ENTITY example "&lt;p>An ampersand (&amp;#38;#38;) may be escaped
numerically (&amp;#38;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p>" ></pre></div><div class="exampleInner"><pre>&lt;p>An ampersand (&amp;#38;) may be escaped
numerically (&amp;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p></pre></div><div class="exampleInner"><pre>An ampersand (&amp;) may be escaped
numerically (&amp;#38;) or with a general entity
(&amp;amp;).</pre></div><div class="exampleInner"><pre>1 &lt;?xml version='1.0'?>
2 &lt;!DOCTYPE test [
3 &lt;!ELEMENT test (#PCDATA) >
4 &lt;!ENTITY % xx '&amp;#37;zz;'>
5 &lt;!ENTITY % zz '&amp;#60;!ENTITY tricky "error-prone" >' >
6 %xx;
7 ]>
8 &lt;test>This sample shows a &amp;tricky; method.&lt;/test></pre></div><div class="diff-add"><p><a href="E07">E07</a>In the following example</p></div><div class="diff-add"><div class="exampleInner"><pre class="diff-add"><a href="E07">E07</a>&lt;!DOCTYPE foo [ 
&lt;!ENTITY x "&amp;lt;"> 
]> 
&lt;foo attr="&amp;x;"/></pre></div></div><div class="diff-add"><p><a href="E07">E07</a><a href="#bypass"><cite>bypassed</cite></a><a href="#sec-predefined-ent"><b>4.6 Predefined Entities</b></a>the replacement text of x is the four characters "&amp;lt;" because
				references to general entities in entity values are.
				The replacement text of lt is a character reference to
				the less-than character, for example the five characters "&amp;#60;"
				(see).  Since neither of these contains a less-than character
				the result is well-formed.</p></div><div class="diff-add"><p><a href="E07">E07</a>If the definition of x had been</p></div><div class="diff-add"><div class="exampleInner"><pre class="diff-add"><a href="E07">E07</a>&lt;!ENTITY x "&amp;#60;"></pre></div></div><div class="diff-add"><p><a href="E07">E07</a><a href="#CleanAttrVals"><cite>WFC: No &lt; in Attribute Values</cite></a>then the document would not have been well-formed, because the
				replacement text of x would be the single character "&lt;" which
				is not permitted in attribute values (see).</p></div><h2><a id="sec-entexpand" name="sec-entexpand"></a>D Expansion of Entity and Character References (Non-Normative)</h2><p><a href="#entproc"><b>4.4 XML Processor Treatment of Entities and References</b></a>This appendix contains some examples illustrating the sequence of entity-
and character-reference recognition and expansion, as specified in.</p><p>If the DTD contains the declaration</p><p><code>example</code>then the XML processor will recognize the character references when it
parses the entity declaration, and resolve them before storing the following
string as the value of the entity "":</p><p><code>&amp;example;</code><code>p</code><code>p</code>A reference in the document to ""
will cause the text to be reparsed, at which time the start- and end-tags
of theelement will be recognized and the three references will
be recognized and expanded, resulting in aelement with the following
content (all data, no delimiters or markup):</p><p>A more complex example will illustrate the rules and their effects fully.
In the following example, the line numbers are solely for reference.</p><p>This produces the following:</p><ul><li><p><code>xx</code><code>%zz;</code><code>zz</code><code>zz</code>in line 4, the reference to character 37 is expanded immediately,
and the parameter entity "" is stored in the symbol
table with the value "". Since the replacement
text is not rescanned, the reference to parameter entity ""
is not recognized. (And it would be an error if it were, since ""
is not yet declared.)</p></li><li><p><code>&amp;#60;</code><code>zz</code><code>&lt;!ENTITY tricky "error-prone"
></code>in line 5, the character reference ""
is expanded immediately and the parameter entity ""
is stored with the replacement text "", which is a well-formed entity declaration.</p></li><li><p><code>xx</code><code>xx</code><code>%zz;</code><code>zz</code><code>&lt;!ENTITY tricky "error-prone"
></code><code>tricky</code><code>error-prone</code>in line 6, the reference to "" is recognized,
and the replacement text of "" (namely "")
is parsed. The reference to "" is recognized in
its turn, and its replacement text ("") is parsed. The general entity ""
has now been declared, with the replacement text "".</p></li><li><p><code>tricky</code><code>test</code><em>This sample
shows a error-prone method.</em>in line 8, the reference to the general entity ""
is recognized, and it is expanded, so the full content of theelement is the self-describing (and ungrammatical) string</p></li></ul></div><div class="div1"><h2><a id="determinism" name="determinism"></a>E Deterministic Content Models (Non-Normative)</h2><p><a href="#sec-element-content"><b>3.2.1 Element Content</b></a><a href="#dt-compat" title="For Compatibility">for compatibility</a>As
noted in, it is required that content
models in element type declarations be deterministic. This requirement iswith SGML (which calls deterministic
content models "unambiguous"); XML processors built
using SGML systems may flag non-deterministic content models as errors.</p><p><code>((b, c) | (b, d))</code><code>b</code><code>b</code><code>b</code><code>b</code><code>(b,
(c | d))</code><code>b</code><code>c</code><code>d</code>For example, the content modelis non-deterministic,
because given an initialthe XML processor
cannot know whichin the model is being matched without looking
ahead to see which element follows the. In this case, the two references
tocan be collapsed into a single reference, making the model read. An initialnow clearly matches only a single name
in the content model. The processor doesn't need to look ahead to see what follows; eitherorwould be accepted.</p><p><a href="#Aho">[Aho/Ullman]</a>More formally: a finite state automaton may be constructed from the content
model using the standard algorithms, e.g. algorithm 3.5 in section 3.9 of
Aho, Sethi, and Ullman. In many such algorithms, a follow
set is constructed for each position in the regular expression (i.e., each
leaf node in the syntax tree for the regular expression); if any position
has a follow set in which more than one following position is labeled with
the same element type name, then the content model is in error and may be
reported as an error.</p><p><a href="#ABK">[Brüggemann-Klein]</a>Algorithms exist which allow many but not all non-deterministic content
models to be reduced automatically to equivalent deterministic models; see
Brüggemann-Klein 1991.</p></div><div class="div1"><div class="div2"><div class="note"><p class="prefix"><b>Note:</b></p><p>In cases above which do not require reading the encoding declaration to
determine the encoding, section 4.3.3 still requires that the encoding declaration,
if present, be read and that the encoding name be checked to match the actual
encoding of the entity. Also, it is possible that new character encodings
will be invented that will make it necessary to use the encoding declaration
to determine the encoding, in cases where this is not required at present.</p></div><h3><a id="sec-guessing-no-ext-info" name="sec-guessing-no-ext-info"></a>F.1 Detection Without External Encoding Information</h3><p><code>&lt;?xml</code><code>#x0000003C</code><code>#x0000003F</code><code>#xFEFF</code><var>##</var><var>##</var>Because each XML entity not accompanied by external
encoding information and not in UTF-8 or UTF-16 encoding must
begin with an XML encoding declaration, in which the first characters must
be '', any conforming processor can detect, after two
to four octets of input, which of the following cases apply. In reading this
list, it may help to know that in UCS-4, '&lt;' is ""
and '?' is "", and the Byte Order Mark
required of UTF-16 data streams is "". The notationis used to denote any byte value except that two consecutives cannot be both 00.</p><p>With a Byte Order Mark:</p><p>Without a Byte Order Mark:</p><p>This level of autodetection is enough to read the XML encoding declaration
and parse the character-encoding identifier, which is still necessary to distinguish
the individual members of each family of encodings (e.g. to tell UTF-8 from
8859, and the parts of 8859 from each other, or to distinguish the specific
EBCDIC code page in use, and so on).</p><p>Because the contents of the encoding declaration are restricted to characters
from the ASCII repertoire (however encoded),
a processor can reliably read the entire encoding declaration as soon as it
has detected which family of encodings is in use. Since in practice, all widely
used character encodings fall into one of the categories above, the XML encoding
declaration allows reasonably reliable in-band labeling of character encodings,
even when external sources of information at the operating-system or transport-protocol
level are unreliable. Character encodings such as UTF-7
that make overloaded usage of ASCII-valued bytes may fail to be reliably detected.</p><p>Once the processor has detected the character encoding in use, it can act
appropriately, whether by invoking a separate input routine for each case,
or by calling the proper conversion function on each character of input.</p><p>Like any self-labeling system, the XML encoding declaration will not work
if any software changes the entity's character set or encoding without updating
the encoding declaration. Implementors of character-encoding routines should
be careful to ensure the accuracy of the internal and external information
used to label the entity.</p><table border="1" frame="border"><tbody><tr><td><code>00 00 FE
FF</code></td><td>UCS-4, big-endian machine (1234 order)</td></tr><tr><td><code>FF
FE 00 00</code></td><td>UCS-4, little-endian machine (4321 order)</td></tr><tr><td><code>00 00 FF FE</code></td><td>UCS-4, unusual octet order (2143)</td></tr><tr><td><code>FE FF 00 00</code></td><td>UCS-4, unusual octet order (3412)</td></tr><tr><td><code>FE FF ## ##</code></td><td>UTF-16, big-endian</td></tr><tr><td><code>FF FE ## ##</code></td><td>UTF-16, little-endian</td></tr><tr><td><code>EF BB BF</code></td><td>UTF-8</td></tr></tbody></table><table border="1" frame="border"><tbody><tr><td><code>00 00 00 3C</code></td><td rowspan="4">UCS-4 or other encoding with a 32-bit code unit and ASCII
characters encoded as ASCII values, in respectively big-endian (1234), little-endian
(4321) and two unusual byte orders (2143 and 3412). The encoding declaration
must be read to determine which of UCS-4 or other supported 32-bit encodings
applies.</td></tr><tr><td><code>3C 00 00 00</code></td></tr><tr><td><code>00 00 3C 00</code></td></tr><tr><td><code>00 3C 00 00</code></td></tr><tr><td><code>00 3C 00 3F</code></td><td>UTF-16BE or big-endian ISO-10646-UCS-2
or other encoding with a 16-bit code unit in big-endian order and ASCII characters
encoded as ASCII values (the encoding declaration must be read to determine
which)</td></tr><tr><td><code>3C 00 3F 00</code></td><td>UTF-16LE or little-endian
ISO-10646-UCS-2 or other encoding with a 16-bit code unit in little-endian
order and ASCII characters encoded as ASCII values (the encoding declaration
must be read to determine which)</td></tr><tr><td><code>3C 3F 78 6D</code></td><td>UTF-8, ISO 646, ASCII, some part of ISO 8859, Shift-JIS, EUC, or any other
7-bit, 8-bit, or mixed-width encoding which ensures that the characters of
ASCII have their normal positions, width, and values; the actual encoding
declaration must be read to detect which of these applies, but since all of
these encodings use the same bit patterns for the relevant ASCII characters,
the encoding declaration itself may be read reliably</td></tr><tr><td><code>4C
6F A7 94</code></td><td>EBCDIC (in some flavor; the full encoding declaration
must be read to tell which code page is in use)</td></tr><tr><td>Other</td><td>UTF-8 without an encoding declaration, or else the data stream is mislabeled
(lacking a required encoding declaration), corrupt, fragmentary, or enclosed
in a wrapper of some kind</td></tr></tbody></table></div><div class="div2"><h3><a id="sec-guessing-with-ext-info" name="sec-guessing-with-ext-info"></a>F.2 Priorities in the Presence of External Encoding Information</h3><p><a href="#rfc2376">[IETF RFC 3023]</a><code>text/xml</code><code>application/xml</code>The second possible case occurs when the XML entity is accompanied by encoding
information, as in some file systems and some network protocols. When multiple
sources of information are available, their relative priority and the preferred
method of handling conflict should be specified as part of the higher-level
protocol used to deliver XML. In particular, please refer
toor its successor, which defines theandMIME types and provides some useful guidance.
In the interests of interoperability, however, the following rule is recommended.</p><ul><li><p>If an XML entity is in a file, the Byte-Order Mark and encoding declaration are used
(if present) to determine the character encoding.</p></li></ul></div><h2><a id="sec-guessing" name="sec-guessing"></a>F Autodetection of Character Encodings (Non-Normative)</h2><p><span class="diff-add"><span><a href="E05">E05</a>will</span></span><span class="diff-del"><span><a href="E05">E05</a>the first case first.</span></span><span class="diff-add"><span><a href="E05">E05</a>these cases in turn.</span></span>The XML encoding declaration functions as an internal label on each entity,
indicating which character encoding is in use. Before an XML processor can
read the internal label, however, it apparently has to know what character
encoding is in use—which is what the internal label is trying to indicate.
In the general case, this is a hopeless situation. It is not entirely hopeless
in XML, however, because XML limits the general case in two ways: each implementation
is assumed to support only a finite set of character encodings, and the XML
encoding declaration is restricted in position and content in order to make
it feasible to autodetect the character encoding in use in each entity in
normal cases. Also, in many cases other sources of information are available
in addition to the XML data stream itself. Two cases may be distinguished,
depending on whether the XML entity is presented to the processor without,
or with, any accompanying (external) information. Weconsider</p></div><div class="div1"><h2><a id="sec-xml-wg" name="sec-xml-wg"></a>G W3C XML Working Group (Non-Normative)</h2><p>This specification was prepared and approved for publication by the W3C
XML Working Group (WG). WG approval of this specification does not necessarily
imply that all WG members voted for its approval. The current and former
participants of the XML WG are:</p><ul><li><i>Chair</i>Jon Bosak, Sun ()</li><li><i>Technical Lead</i>James Clark ()</li><li><i>XML Co-editor</i>Tim Bray, Textuality and Netscape ()</li><li><i>XML Co-editor</i>Jean Paoli, Microsoft ()</li><li><i>XML Co-editor</i>C. M. Sperberg-McQueen, U. of Ill. ()</li><li><i>W3C Liaison</i>Dan Connolly, W3C ()</li><li>Paula Angerstein, Texcel</li><li>Steve DeRose, INSO</li><li>Dave Hollander, HP</li><li>Eliot Kimber, ISOGEN</li><li>Eve Maler, ArborText</li><li>Tom Magliery, NCSA</li><li>Murray Maloney, SoftQuad, Grif SA, Muzmo and Veo Systems</li><li>MURATA Makoto (FAMILY Given), Fuji Xerox Information Systems</li><li>Joel Nava, Adobe</li><li>Conleth O'Connell, Vignette</li><li>Peter Sharpe, SoftQuad</li><li>John Tigue, DataChannel</li></ul></div><div class="div1"><h2><a id="sec-core-wg" name="sec-core-wg"></a>H W3C XML Core Working Group (Non-Normative)</h2><p><span class="diff-chg"><span>fifth</span></span>Theedition of this specification was prepared by the W3C XML Core
Working Group (WG). The participants in the WG at the time of publication of this
edition were:</p><ul><li>John Cowan, Google</li><li>Andrew Fang, PTC-Arbortext</li><li><i>Co-Chair</i>Paul Grosso, PTC-Arbortext ()</li><li>Konrad Lanz, A-SIT</li><li>Glenn Marcy, IBM</li><li><i>Staff Contact</i>Henry Thompson, W3C ()</li><li>Richard Tobin, University of Edinburgh</li><li>Daniel Veillard</li><li><i>Co-Chair</i>Norman Walsh, Mark Logic ()</li><li>François Yergeau</li></ul></div><div class="div1"><div class="diff-chg"><p><a href="http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">XMLspec DTD, v2.10</a><a href="http://www.w3.org/2002/xmlspec/xhtml/1.13/xmlspec.xsl">xmlspec.xsl</a><a href="http://www.w3.org/2002/xmlspec/xhtml/1.13/diffspec.xsl">diffspec.xsl</a><a href="REC-xml.xsl">REC-xml.xsl</a>This edition was encoded in a
slightly modified version of the.
The XHTML versions were produced with a combination of the,,
andXSLT stylesheets.</p></div><h2><a id="prod-notes" name="prod-notes"></a>I Production Notes (Non-Normative)</h2></div><div class="diff-add"><div class="div1"><h2><a id="sec-suggested-names" name="sec-suggested-names"></a><a href="E09">E09</a>JSuggestions for XML Names (Non-Normative)</h2><ol class="enumar"><li><p>The first character of any name should have a Unicode property
						of ID_Start, or else be '_' #x5F.</p></li><li><p>Characters other than the first should have a Unicode property
						of ID_Continue, or be one of the characters listed in the table
						entitled "Characters for Natural Language Identifiers" in UAX
						#31, with the exception of "'" #x27 and "’" #x2019.</p></li><li><p><a href="#unipart15">[UnicodeNormal]</a>Characters in names should be expressed using
Normalization Form C as defined in.</p></li><li><p>Ideographic characters which have a canonical decomposition
						(including those in the ranges [#xF900-#xFAFF] and
						[#x2F800-#x2FFFD], with 12 exceptions) should not be used in names.</p></li><li><p>Characters which have a compatibility decomposition (those with
						a "compatibility formatting tag" in field 5 of the Unicode
						Character Database -- marked by field 5 beginning with a "&lt;")
						should not be used in names.  This suggestion does not apply
						to characters which
						despite their compatibility decompositions are in regular use in
						their scripts, for
example #x0E33 THAI CHARACTER SARA AM or #x0EB3 LAO CHARACTER AM.</p></li><li><p>Combining characters meant for use with symbols only (including
						those in the ranges [#x20D0-#x20EF] and [#x1D165-#x1D1AD]) should
						not be used in names.</p></li><li><p>The interlinear annotation characters ([#xFFF9-#xFFFB]) should
						not be used in names.</p></li><li><p>Variation selector characters should not be used in names.</p></li><li><p>Names which are nonsensical, unpronounceable, hard to read, or
						easily confusable with other names should not be employed.</p></li></ol><p><a href="E09">E09</a>The following suggestions define what is believed to be best
				practice in the construction of XML names used as element names,
				attribute names, processing instruction targets, entity names,
				notation names, and the values of attributes of type ID, and are
				intended as guidance for document authors and schema designers.
				All references to Unicode are understood with respect to
				a particular version of the Unicode Standard greater than or equal
				to 5.0; which version should be used is left to the discretion of
				the document author or schema designer.</p><p><a href="#Unicode">[Unicode]</a>The first two suggestions are directly derived from the rules
				given for identifiers in Standard Annex #31 (UAX #31) of the Unicode Standard, version 5.0, and
				exclude all control characters, enclosing nonspacing marks,
				non-decimal numbers, private-use characters, punctuation characters
				(with the noted exceptions), symbol characters, unassigned
				codepoints, and white space characters. The other suggestions
				are mostly derived from Appendix B in previous editions of this specification.</p></div></div></div><hr/><hr/></body><head><link href="http://www.w3.org/StyleSheets/TR/W3C-REC.css" rel="stylesheet" type="text/css"/><meta content="text/html; charset=utf-8" http-equiv="Content-Type"/><style type="text/css">code           { font-family: monospace; }

div.constraint,
div.issue,
div.note,
div.notice     { margin-left: 2em; }

ol.enumar      { list-style-type: decimal; }
ol.enumla      { list-style-type: lower-alpha; }
ol.enumlr      { list-style-type: lower-roman; }
ol.enumua      { list-style-type: upper-alpha; }
ol.enumur      { list-style-type: upper-roman; }


div.exampleInner pre { margin-left: 1em;
                       margin-top: 0em; margin-bottom: 0em}
div.exampleOuter {border: 4px double gray;
                  margin: 0em; padding: 0em}
div.exampleInner { background-color: #d5dee3;
                   border-top-width: 4px;
                   border-top-style: double;
                   border-top-color: #d3d3d3;
                   border-bottom-width: 4px;
                   border-bottom-style: double;
                   border-bottom-color: #d3d3d3;
                   padding: 4px; margin: 0em }
div.exampleWrapper { margin: 4px }
div.exampleHeader { font-weight: bold;
                    margin: 4px}

div.diff-add  { background-color: #FFFF99; }
div.diff-del  { text-decoration: line-through; }
div.diff-chg  { background-color: #99FF99; }
div.diff-off  {  }

span.diff-add { background-color: #FFFF99; }
span.diff-del { text-decoration: line-through; }
span.diff-chg { background-color: #99FF99; }
span.diff-off {  }

td.diff-add   { background-color: #FFFF99; }
td.diff-del   { text-decoration: line-through }
td.diff-chg   { background-color: #99FF99; }
td.diff-off   {  }</style><title>Extensible Markup Language (XML) 1.0 (Fifth Edition) -- Review Version</title></head></html>