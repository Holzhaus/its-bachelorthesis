{"spec":{"header":{"title":"Extensible Markup Language (XML)","version":"1.0 (Fifth Edition)","w3c-designation":"REC-xml-20081126","w3c-doctype":"W3C Recommendation","pubdate":{"day":"26","month":"November","year":"2008"},"publoc":{"loc":{"$href":"http://www.w3.org/TR/2008/REC-xml-20081126/","_":"http://www.w3.org/TR/2008/REC-xml-20081126/"}},"altlocs":{"loc":[{"$href":"REC-xml-20081126.xml","_":"XML"},{"$href":"REC-xml-20081126-review.html","_":"XHTML with color-coded revision indicators"}]},"latestloc":{"loc":{"$href":"http://www.w3.org/TR/xml/","_":"http://www.w3.org/TR/xml/"}},"prevlocs":{"loc":[{"$href":"http://www.w3.org/TR/2008/PER-xml-20080205/","_":"http://www.w3.org/TR/2008/PER-xml-20080205/"},{"$href":"http://www.w3.org/TR/2006/REC-xml-20060816/","_":"http://www.w3.org/TR/2006/REC-xml-20060816/"}]},"authlist":{"author":[{"name":"Tim Bray","affiliation":"Textuality and Netscape","email":{"$href":"mailto:tbray@textuality.com","_":"tbray@textuality.com"},"$role":"1e"},{"name":"Jean Paoli","affiliation":"Microsoft","email":{"$href":"mailto:jeanpa@microsoft.com","_":"jeanpa@microsoft.com"},"$role":"1e"},{"name":"C. M. Sperberg-McQueen","affiliation":"W3C","email":{"$href":"mailto:cmsmcq@w3.org","_":"cmsmcq@w3.org"},"$role":"1e"},{"name":"Eve Maler","affiliation":"Sun Microsystems, Inc.","email":{"$href":"mailto:elm@east.sun.com","_":"eve.maler@east.sun.com"}},{"name":"Fran√ßois Yergeau"}]},"errataloc":{"$href":"http://www.w3.org/XML/xml-V10-5e-errata"},"preverrataloc":{"$href":"http://www.w3.org/XML/xml-V10-4e-errata"},"translationloc":{"$href":"http://www.w3.org/2003/03/Translations/byTechnology?technology=xml"},"abstract":{"p":"The Extensible Markup Language (XML) is a subset of SGML that is completely\ndescribed in this document. Its goal is to enable generic SGML to be served,\nreceived, and processed on the Web in the way that is now possible with HTML.\nXML has been designed for ease of implementation and for interoperability\nwith both SGML and HTML."},"status":{"p":[{"emph":{"loc":{"$href":"http://www.w3.org/TR/","_":"W3C technical reports index"},"_":"This section describes the status of this document at the time of its publication.\n\t\t\t\tOther documents may supersede this document. A list of current W3C publications and the\n\t\t\t\tlatest revision of this technical report can be found in theat\n\t\t\t\thttp://www.w3.org/TR/."}},{"loc":[{"$href":"http://www.w3.org/XML/Core/","_":"XML Core Working Group"},{"$href":"http://www.w3.org/XML/Activity","_":"XML Activity"},{"$href":"http://www.w3.org/2003/03/Translations/byTechnology?technology=xml","_":"http://www.w3.org/2003/03/Translations/byTechnology?technology=xml"}],"_":"This document specifies a syntax created by subsetting an existing, widely\n\t\t\t\tused international text processing standard (Standard Generalized Markup Language,\n\t\t\t\tISO 8879:1986(E) as amended and corrected) for use on the World Wide Web.\n\t\t\t\tIt is a product of theas part of the.\n\t\t\t\tThe English version of this specification is the only normative version. However,\n\t\t\t\tfor translations of this document, see."},{"loc":[{"$href":"http://www.w3.org/2005/10/Process-20051014/tr.html#q74","_":"W3C Recommendation"},{"$href":"http://www.w3.org/XML/xml-V10-4e-errata","_":"http://www.w3.org/XML/xml-V10-4e-errata"},{"$href":"http://www.w3.org/TR/2006/REC-xml-20060816/","_":"Fourth\n\t\t\t\tEdition of XML 1.0, dated 16 August 2006"},{"$href":"http://www.w3.org/XML/xml-V10-4e-errata#E09","_":"[E09]"}],"emph":"not","_":"This document is a. This fifth edition isa new version of XML. As a convenience to readers,\n\t\t\t\tit incorporates the changes dictated by the accumulated errata (available at) to the.  In particular, erratumrelaxes the restrictions on element and attribute names, thereby providing in XML 1.0 the major end user benefit\n\t\t\t\tcurrently achievable only by using XML\n1.1.  As a consequence, many possible\n documents which were not well-formed according to previous editions of this\n specification are now well-formed, and previously invalid documents\nusing the newly-allowed name characters in, for example, ID\nattributes, are now valid."},{"loc":{"$href":"http://www.w3.org/TR/2006/REC-xml-20060816/","_":"W3C Recommendation\n\t\t\t\tof 16 August 2006"},"_":"This edition supersedes the previous."},{"loc":[{"$href":"mailto:xml-editor@w3.org","_":"xml-editor@w3.org"},{"$href":"http://lists.w3.org/Archives/Public/xml-editor/","_":"archives"},{"$href":"REC-xml-20081126-review.html","_":"XHTML version with color-coded revision indicators"},{"$href":"http://www.w3.org/XML/xml-V10-4e-errata","_":"errata\nlist"},{"$href":"http://www.w3.org/XML/xml-V10-5e-errata","_":"http://www.w3.org/XML/xml-V10-5e-errata"}],"_":"Please report errors in this document to\nthe publicmail list; publicare available. For the convenience of readers,\n\t\t\t\tanis\n\t\t\t\talso provided; this version highlights each change due to an erratum published in thefor the previous edition, together with a link to the particular\n\t\t\t\terratum in that list. Most of the\nerrata in the list provide a rationale for the change.  The errata\nlist for this fifth edition is available at."},{"loc":[{"$href":"http://www.w3.org/XML/2008/01/xml10-5e-implementation.html","_":"http://www.w3.org/XML/2008/01/xml10-5e-implementation.html"},{"$href":"http://www.w3.org/XML/Test/","_":"Test Suite"}],"_":"An implementation report is available at.\n\t\t\t\tAis maintained to help assessing conformance to this specification."},"This document has been reviewed by W3C Members, by software developers, and by other W3C groups and interested parties, and is endorsed by the Director as a W3C Recommendation. It is a stable document and may be used as reference material or cited from another document. W3C's role in making the Recommendation is to draw attention to the specification and to promote its widespread deployment. This enhances the functionality and interoperability of the Web.",{"loc":[{"$role":"disclosure","$href":"http://www.w3.org/2002/08/xmlcore-IPR-statements","_":"public list of\n\t\t\t\tany patent disclosures"},{"$href":"http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential","_":"Essential\n\t\t\t\tClaim(s)"},{"$href":"http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure","_":"section 6 of the W3C Patent Policy"}],"_":"W3C maintains amade in connection with the deliverables of\n\t\t\t\tthe group; that page also includes instructions for disclosing a patent.\n\t\t\t\tAn individual who has actual knowledge of a patent which the individual\n\t\t\t\tbelieves containsmust disclose the information in accordance with."}]},"pubstmt":{"p":"Chicago, Vancouver, Mountain View, Edinburgh, et al.: World-Wide Web Consortium, XML\nWorking Group, 1996, 1997, 2000, 2006, 2008."},"sourcedesc":{"p":"Created in electronic form."},"langusage":{"language":[{"$id":"EN","_":"English"},{"$id":"ebnf","_":"Extended Backus-Naur Form (formal grammar)"}]},"revisiondesc":{"p":{"$role":"cvsid","_":"$Id: REC-xml-20081126.xml,v 1.3 2013-02-07 15:01:59 denis Exp $"}}},"body":{"div1":[{"head":"Introduction","p":[{"termref":{"$def":"dt-xml-doc","_":"XML documents"},"bibref":{"$ref":"ISO8879"},"_":"Extensible Markup Language, abbreviated XML, describes a class of data\nobjects calledand partially\ndescribes the behavior of computer programs which process them. XML is an\napplication profile or restricted form of SGML, the Standard Generalized Markup\nLanguage. By construction, XML documents are conforming\nSGML documents."},{"termref":[{"$def":"dt-entity","_":"entities"},{"$def":"dt-character","_":"characters"},{"$def":"dt-chardata","_":"character\ndata"},{"$def":"dt-markup","_":"markup"}],"_":"XML documents are made up of storage units called,\nwhich contain either parsed or unparsed data. Parsed data is made up of, some of which form, and some of which form.\nMarkup encodes a description of the document's storage layout and logical\nstructure. XML provides a mechanism to impose constraints on the storage layout\nand logical structure."},{"termdef":[{"term":"XML processor","$id":"dt-xml-proc","$term":"XML Processor","_":"A software module called\nanis used to read XML documents and provide access\nto their content and structure."},{"term":"application","$id":"dt-app","$term":"Application","_":"It\nis assumed that an XML processor is doing its work on behalf of another module,\ncalled the."}],"_":"This specification describes\nthe required behavior of an XML processor in terms of how it must read XML\ndata and the information it must provide to the application."}],"div2":[{"head":"Origin and Goals","p":["XML was developed by an XML Working Group (originally known as the SGML\nEditorial Review Board) formed under the auspices of the World Wide Web Consortium\n(W3C) in 1996. It was chaired by Jon Bosak of Sun Microsystems with the active\nparticipation of an XML Special Interest Group (previously known as the SGML\nWorking Group) also organized by the W3C. The membership of the XML Working\nGroup is given in an appendix. Dan Connolly served as the Working Group's contact with\nthe W3C.","The design goals for XML are:",{"bibref":[{"$ref":"Unicode"},{"$ref":"ISO10646"},{"$ref":"RFC1766"}],"phrase":[{"$diff":"del","_":"RFC 3066"},{"loc":{"$role":"erratumref","$href":"E01"},"$diff":"add","_":"BCP 47"},{"loc":{"$role":"erratumref","$href":"E01"},"bibref":{"$ref":"IANA-LANGCODES"},"$diff":"add","_":"and the Language Subtag Registry"},{"loc":{"$role":"erratumref","$href":"E01"},"bibref":[{"$ref":"ISO639"},{"$ref":"ISO3166"}],"$diff":"del","_":", ISO 639for language name codes, and ISO 3166for country name codes"}],"_":"This specification, together with associated standards (Unicodeand ISO/IEC 10646for characters, Internetfor language\n\t\t\t\t\tidentification tags), provides\nall the information necessary to understand XML Version 1.0 and\nconstruct computer programs to process it."},"This version of the XML specification may be distributed freely, as long as\nall text and legal notices remain intact."],"olist":{"item":[{"p":"XML shall be straightforwardly usable over the Internet."},{"p":"XML shall support a wide variety of applications."},{"p":"XML shall be compatible with SGML."},{"p":"It shall be easy to write programs which process XML documents."},{"p":"The number of optional features in XML is to be kept to the absolute\nminimum, ideally zero."},{"p":"XML documents should be human-legible and reasonably clear."},{"p":"The XML design should be prepared quickly."},{"p":"The design of XML shall be formal and concise."},{"p":"XML documents shall be easy to create."},{"p":"Terseness in XML markup is of minimal importance."}]},"$id":"sec-origin-goals"},{"head":"Terminology","p":{"rfc2119":["MUST","MUST NOT","REQUIRED","SHALL","SHALL NOT","SHOULD","SHOULD NOT","RECOMMENDED","MAY","OPTIONAL","EMPHASIZED"],"bibref":{"$ref":"rfc2119"},"glist":{"gitem":[{"label":"error","def":{"p":{"termdef":{"rfc2119":["MUST","REQUIRED","MUST NOT","SHALL","SHALL NOT","MAY","MAY"],"$id":"dt-error","$term":"Error","_":"A violation of the rules of this specification;\nresults are undefined. Unless otherwise specified, failure to observe a prescription of this specification indicated by one of the keywords,,,andis an error.  Conforming softwaredetect and report an error\nandrecover from it."}}}},{"label":"fatal error","def":{"p":{"termdef":{"termref":{"$def":"dt-xml-proc","_":"XML processor"},"rfc2119":["MUST","MAY","MAY","MAY","MUST NOT","MUST NOT"],"$id":"dt-fatal","$term":"Fatal Error","_":"An error which a conformingdetect and report to the application.\nAfter encountering a fatal error, the processorcontinue processing the\ndata to search for further errors andreport such errors to the application.\nIn order to support correction of errors, the processormake unprocessed\ndata from the document (with intermingled character data and markup) available\nto the application. Once a fatal error is detected, however, the processorcontinue normal processing (i.e., itcontinue to pass character\ndata and information about the document's logical structure to the application\nin the normal way)."}}}},{"label":"at user option","def":{"p":{"termdef":{"rfc2119":["MAY","MUST","MUST"],"$id":"dt-atuseroption","$term":"At user option","_":"Conforming softwareor(depending on the modal verb in the sentence) behave as described;\nif it does, itprovide users a means to enable or disable the behavior\ndescribed."}}}},{"label":"validity constraint","def":{"p":{"termdef":{"termref":[{"$def":"dt-valid","_":"valid"},{"$def":"dt-validating","_":"validating XML processors"}],"rfc2119":"MUST","$id":"dt-vc","$term":"Validity constraint","_":"A rule which applies to\nallXML documents. Violations of validity\nconstraints are errors; they, at user option, be reported by."}}}},{"label":"well-formedness constraint","def":{"p":{"termdef":{"termref":[{"$def":"dt-wellformed","_":"well-formed"},{"$def":"dt-fatal","_":"fatal errors"}],"$id":"dt-wfc","$term":"Well-formedness constraint","_":"A rule which applies\nto allXML documents. Violations\nof well-formedness constraints are."}}}},{"label":"match","def":{"p":{"termdef":{"specref":{"$ref":"elementvalid"},"$id":"dt-match","$term":"match","_":"(Of strings or names:) Two strings\nor names being compared are identical. Characters with multiple possible\nrepresentations in ISO/IEC 10646 (e.g. characters with both precomposed and\nbase+diacritic forms) match only if they have the same representation in both\nstrings. No\ncase folding is performed. (Of strings and rules in the grammar:) A string\nmatches a grammatical production if it belongs to the language generated by\nthat production. (Of content and content models:) An element matches its declaration\nwhen it conforms in the fashion described in the constraint."}}}},{"label":"for compatibility","def":{"p":{"termdef":{"$id":"dt-compat","$term":"For Compatibility","_":"Marks\na sentence describing a feature of XML included solely to ensure\nthat XML remains compatible with SGML."}}}},{"label":"for interoperability","def":{"p":{"termdef":{"$id":"dt-interop","$term":"For interoperability","_":"Marks\na sentence describing a non-binding recommendation included to increase\nthe chances that XML documents can be processed by the existing installed\nbase of SGML processors which predate the \"WebSGML Adaptations Annex to ISO 879."}}}}]},"_":"The terminology used to describe XML documents is defined in the body of\nthis specification. The key words,,,,,,,,, and, when,\nare to be interpreted as described in. In addition, the terms defined\nin the following list are used in building\nthose definitions and in describing the actions of an XML processor:"},"$id":"sec-terminology"}],"$id":"sec-intro"},{"head":"Documents","p":[{"termdef":{"term":"XML\ndocument","termref":[{"$def":"dt-wellformed","_":"well-formed"},{"$def":"dt-valid","_":"valid"}],"$id":"dt-xml-doc","$term":"XML Document","_":"A data object is anif it is,\nas defined in this specification. In addition, the XML document isif it meets certain further constraints."}},{"termref":[{"$def":"dt-entity","_":"entities"},{"$def":"dt-entref","_":"refer"},{"$def":"dt-docent","_":"document entity"}],"quote":"root","rfc2119":"MUST","specref":{"$ref":"wf-entities"},"_":"Each XML document has both a logical and a physical structure. Physically,\nthe document is composed of units called.\nAn entity mayto other entities to\ncause their inclusion in the document. A document begins in aor. Logically, the document\nis composed of declarations, elements, comments, character references, and\nprocessing instructions, all of which are indicated in the document by explicit\nmarkup. The logical and physical structuresnest properly, as described\nin."}],"div2":[{"head":"Well-Formed XML Documents","p":[{"termdef":{"term":"well-formed","$id":"dt-wellformed","$term":"Well-Formed","_":"A textual object is aXML document if:"}},{"nt":{"$def":"NT-document","_":"document"},"_":"Matching theproduction implies that:"},{"termdef":{"el":["C","P","C","P","P","P","C","C","P"],"term":["parent","child"],"$id":"dt-parentchild","$term":"Parent/Child","_":"As a consequence of this,\nfor each non-root elementin the document, there is one other elementin the document such thatis in the content of, but\nis not in the content of any other element that is in the content of.is referred to as theof, andas\naof."}}],"olist":[{"item":[{"p":{"nt":{"$def":"NT-document","_":"document"},"_":"Taken as a whole, it matches the production labeled."}},{"p":"It meets all the well-formedness constraints given in this specification."},{"p":{"termref":[{"$def":"dt-parsedent","_":"parsed entities"},{"$def":"dt-wellformed","_":"well-formed"}],"_":"Each of thewhich is referenced directly or indirectly within the document is."}}]},{"item":[{"p":{"termref":{"$def":"dt-element","_":"elements"},"_":"It contains one or more."}},{"p":{"termdef":{"term":"root","termref":{"$def":"dt-content","_":"content"},"$id":"dt-root","$term":"Root Element","_":"There is exactly one element,\ncalled the, or document element, no part of which appears\nin theof any other element."},"termref":[{"$def":"dt-stag","_":"start-tag"},{"$def":"dt-etag","_":"end-tag"}],"_":"For\nall other elements, if theis in\nthe content of another element, theis in the content of the same element. More simply stated, the elements,\ndelimited by start- and end-tags, nest properly within each other."}}]}],"scrap":{"head":"Document","prod":{"lhs":"document","rhs":{"nt":[{"$def":"NT-prolog","_":"prolog"},{"$def":"NT-element","_":"element"},{"$def":"NT-Misc","_":"Misc"}],"_":"*"},"$id":"NT-document","$num":"1"},"$id":"document","$lang":"ebnf"},"$id":"sec-well-formed"},{"head":"Characters","p":[{"termdef":[{"term":"text","termref":{"$def":"dt-character","_":"characters"},"$id":"dt-text","$term":"Text","_":"A parsed entity contains,\na sequence of, which may\nrepresent markup or character data."},{"term":"character","bibref":{"$ref":"ISO10646"},"specref":{"$ref":"sec-existing-stds"},"rfc2119":"MUST","nt":{"$def":"NT-Char","_":"Char"},"$id":"dt-character","$term":"Character","_":"Ais an atomic unit of text as specified by ISO/IEC 10646:2000. Legal characters are tab, carriage\nreturn, line feed, and the legal characters\nof Unicode and ISO/IEC 10646. The\nversions of these standards cited inwere\ncurrent at the time this document was prepared. New characters may be added\nto these standards by amendments or new editions. Consequently, XML processorsaccept any character in the range specified for."}]},{"rfc2119":"MUST","phrase":[{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"del","_":"3.1"},{"loc":{"$role":"erratumref","$href":"E11"},"bibref":{"$ref":"Unicode"},"$diff":"chg"}],"specref":{"$ref":"charencoding"},"_":"The mechanism for encoding character code points into bit patterns may\nvary from entity to entity. All XML processorsaccept the UTF-8 and UTF-16\nencodings of Unicode;\nthe mechanisms for signaling which of the two is in use,\nor for bringing other encodings into play, are discussed later, in."}],"scrap":{"head":"Character Range","prodgroup":{"prod":{"lhs":"Char","rhs":"#x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]","com":"any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.","$id":"NT-Char","$num":"2"},"$pcw2":"4","$pcw4":"17.5","$pcw5":"11"},"$id":"char32","$lang":"ebnf"},"note":{"p":{"quote":"compatibility characters","phrase":[{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"chg","_":"2.3"},{"loc":{"$role":"erratumref","$href":"E11"},"bibref":{"$ref":"Unicode3"},"$diff":"del","_":"(see also D21 in section 3.6 of)"}],"bibref":{"$ref":"Unicode"},"_":"Document authors are encouraged to avoid, as defined\nin sectionof. The characters defined in the following ranges are also\ndiscouraged. They are either control characters or permanently undefined Unicode\ncharacters:"},"eg":{"phrase":{"loc":{"$role":"erratumref","$href":"E02"},"$diff":"chg","_":"E"},"_":"[#x7F-#x84], [#x86-#x9F], [#xFDD0-#xFDF],\n[#x1FFFE-#x1FFFF], [#x2FFFE-#x2FFFF], [#x3FFFE-#x3FFFF],\n[#x4FFFE-#x4FFFF], [#x5FFFE-#x5FFFF], [#x6FFFE-#x6FFFF],\n[#x7FFFE-#x7FFFF], [#x8FFFE-#x8FFFF], [#x9FFFE-#x9FFFF],\n[#xAFFFE-#xAFFFF], [#xBFFFE-#xBFFFF], [#xCFFFE-#xCFFFF],\n[#xDFFFE-#xDFFFF], [#xEFFFE-#xEFFFF], [#xFFFFE-#xFFFFF],\n[#x10FFFE-#x10FFFF]."}},"$id":"charsets"},{"head":"Common Syntactic Constructs","p":["This section defines some symbols used widely in the grammar.",{"nt":{"$def":"NT-S","_":"S"},"_":"(white space) consists of one or more space (#x20)\ncharacters, carriage returns, line feeds, or tabs."},{"loc":{"$role":"erratumref","$href":"E09"},"specref":{"$ref":"CharClasses"},"$diff":"del","_":"Characters are classified for convenience as letters, digits, or other\ncharacters. A\nletter consists of an alphabetic or syllabic base character or an ideographic\ncharacter. Full definitions of the specific characters in each class\nare given in."},{"nt":{"$def":"NT-Nmtoken","_":"Nmtoken"},"_":"An(name token) is any mixture of name\ncharacters."},{"loc":{"$role":"erratumref","$href":"E09"},"termdef":{"term":"Name","$id":"dt-name-x","$term":"Name","_":"Ais a token beginning\nwith a letter or one of a few punctuation characters, and continuing with\nletters, digits, hyphens, underscores, colons, or full stops, together known\nas name characters."},"$diff":"del"},{"loc":{"$role":"erratumref","$href":"E09"},"termdef":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-Nmtoken","_":"Nmtoken"}],"$id":"dt-name","$term":"Name","_":"Ais anwith a restricted set of initial characters."},"nt":{"$def":"NT-Name","_":"Names"},"$diff":"add","_":"Disallowed initial characters forinclude digits, diacritics, the full stop and the hyphen."},{"quote":{"code":"xml"},"code":"(('X'|'x') ('M'|'m') ('L'|'l'))","_":"Names beginning with the string,\nor with any string which would match,\nare reserved for standardization in this or future versions of this specification."},{"loc":{"$role":"erratumref","$href":"E09"},"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-NameStartChar","_":"NameStartChar"},{"$def":"NT-NameChar","_":"NameChars"}],"rfc2119":["MUST","MUST"],"specref":{"$ref":"sec-suggested-names"},"$diff":"add","_":"The first character of abe a, and any\n\t\t\t\t\tother charactersbe; this mechanism is used to\n\t\t\t\t\tprevent names from beginning with European (ASCII) digits or with\n\t\t\t\t\tbasic combining characters. Almost all characters are permitted in\n\t\t\t\t\tnames, except those which either are or reasonably could be used as\n\t\t\t\t\tdelimiters. The intention is to be inclusive rather than exclusive,\n\t\t\t\t\tso that writing systems not yet encoded in Unicode can be used in\n\t\t\t\t\tXML names. Seefor suggestions on the creation of\n\t\t\t\t\tnames."},{"loc":{"$role":"erratumref","$href":"E09"},"$diff":"add","_":"Document authors are encouraged to use names which are\n\t\t\t\t\tmeaningful words or combinations of words in natural languages, and\n\t\t\t\t\tto avoid symbolic or white space characters in names. Note that\n\t\t\t\t\tCOLON, HYPHEN-MINUS, FULL STOP (period), LOW LINE (underscore), and\n\t\t\t\t\tMIDDLE DOT are explicitly permitted."},{"loc":{"$role":"erratumref","$href":"E09"},"emph":"cannot","$diff":"add","_":"The ASCII symbols and punctuation marks, along with a fairly\n\t\t\t\t\tlarge group of Unicode symbol characters, are excluded from names\n\t\t\t\t\tbecause they are more useful as delimiters in contexts where XML\n\t\t\t\t\tnames are used outside XML documents; providing this group gives\n\t\t\t\t\tthose contexts hard guarantees about whatbe part of\n\t\t\t\t\tan XML name. The character #x037E, GREEK QUESTION MARK, is excluded\n\t\t\t\t\tbecause when normalized it becomes a semicolon, which could change\n\t\t\t\t\tthe meaning of entity references."},{"nt":[{"$def":"NT-EntityValue","_":"EntityValue"},{"$def":"NT-AttValue","_":"AttValue"},{"$def":"NT-SystemLiteral","_":"SystemLiteral"},{"$def":"NT-SystemLiteral","_":"SystemLiteral"}],"_":"Literal data is any quoted string not containing the quotation mark used\nas a delimiter for that string. Literals are used for specifying the content\nof internal entities (), the values\nof attributes (), and external identifiers\n(). Note that acan be parsed without scanning for markup."}],"scrap":[{"head":"White Space","prodgroup":{"prod":{"lhs":"S","rhs":"(#x20 | #x9 | #xD | #xA)+","$id":"NT-S","$num":"3"},"$pcw2":"4","$pcw4":"17.5","$pcw5":"11"},"$id":"white","$lang":"ebnf"},{"head":"Names and Tokens","prod":[{"lhs":{"$diff":"chg","_":"NameStartChar"},"rhs":{"$diff":"chg","_":"\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]"},"com":{"loc":{"$role":"erratumref","$href":"E09"},"$diff":"chg"},"$id":"NT-NameStartChar","$num":"4"},{"lhs":"NameChar","rhs":{"nt":{"$def":"NT-NameStartChar","_":"NameStartChar"},"_":"| \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]"},"com":{"loc":{"$role":"erratumref","$href":"E09"},"$diff":"add"},"$id":"NT-NameChar","$num":"4a","$diff":"add"},{"lhs":"Name","rhs":{"nt":[{"$def":"NT-NameStartChar","_":"NameStartChar"},{"$def":"NT-NameChar","_":"NameChar"}],"$diff":"chg","_":"()*"},"com":{"loc":{"$role":"erratumref","$href":"E09"},"$diff":"chg"},"$id":"NT-Name","$num":"5"},{"lhs":"Names","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-Name","_":"Name"}],"_":"(#x20)*"},"$id":"NT-Names","$num":"6"},{"lhs":"Nmtoken","rhs":{"nt":{"$def":"NT-NameChar","_":"NameChar"},"_":"()+"},"$id":"NT-Nmtoken","$num":"7"},{"lhs":"Nmtokens","rhs":{"nt":[{"$def":"NT-Nmtoken","_":"Nmtoken"},{"$def":"NT-Nmtoken","_":"Nmtoken"}],"_":"(#x20)*"},"$id":"NT-Nmtokens","$num":"8"}],"$lang":"ebnf"},{"head":"Literals","prod":[{"lhs":"EntityValue","rhs":[{"nt":[{"$def":"NT-PEReference","_":"PEReference"},{"$def":"NT-Reference","_":"Reference"}],"_":"'\"' ([^%&\"] ||)* '\"'"},{"nt":[{"$def":"NT-PEReference","_":"PEReference"},{"$def":"NT-Reference","_":"Reference"}],"_":"|¬† \"'\" ([^%&'] ||)* \"'\""}],"$id":"NT-EntityValue","$num":"9"},{"lhs":"AttValue","rhs":[{"nt":{"$def":"NT-Reference","_":"Reference"},"_":"'\"' ([^<&\"] |)*\n'\"'"},{"nt":{"$def":"NT-Reference","_":"Reference"},"_":"|¬† \"'\" ([^<&'] |)*\n\"'\""}],"$id":"NT-AttValue","$num":"10"},{"lhs":"SystemLiteral","rhs":"('\"' [^\"]* '\"') |¬†(\"'\" [^']* \"'\")","$id":"NT-SystemLiteral","$num":"11"},{"lhs":"PubidLiteral","rhs":{"nt":[{"$def":"NT-PubidChar","_":"PubidChar"},{"$def":"NT-PubidChar","_":"PubidChar"}],"_":"'\"'* '\"'\n| \"'\" (- \"'\")* \"'\""},"$id":"NT-PubidLiteral","$num":"12"},{"lhs":"PubidChar","rhs":"#x20 | #xD | #xA |¬†[a-zA-Z0-9] |¬†[-'()+,./:=?;!*#@$_%]","$id":"NT-PubidChar","$num":"13"}],"$lang":"ebnf"}],"note":[{"p":{"loc":{"$href":"http://www.w3.org/TR/1998/REC-xml-19980210","_":"First Edition"},"specref":{"$ref":"sec-line-ends"},"_":"The presence of #xD in the above production is\n\tmaintained purely for backward compatibility with the.\n\tAs explained in,\n\tall #xD characters literally present in an XML document\n\tare either removed or replaced by #xA characters before\n\tany other processing is done. The only way to get a #xD character to match this production is to\n  use a character reference in an entity value literal."}},{"p":{"bibref":{"$ref":"xml-names"},"_":"The\nNamespaces in XML Recommendationassigns a meaning\nto names containing colon characters. Therefore, authors should not use the\ncolon in XML names except for namespace purposes, but XML processors must\naccept the colon as a name character."}},{"p":{"nt":[{"$def":"NT-Names","_":"Names"},{"$def":"NT-Nmtokens","_":"Nmtokens"}],"specref":{"$ref":"sec-attribute-types"},"_":"Theandproductions are used to define the validity\nof tokenized attribute values after normalization (see)."}},{"p":{"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"code":["<","<!ENTITY mylt \"<\">"],"_":"Although\ntheproduction allows the definition\nof a general entity consisting of a single explicitin the literal\n(e.g.,), it is strongly advised to avoid\nthis practice since any reference to that entity will cause a well-formedness\nerror."}}],"$id":"sec-common-syn"},{"head":"Character Data and Markup","p":[{"termref":[{"$def":"dt-text","_":"Text"},{"$def":"dt-chardata","_":"character data"}],"termdef":{"term":"Markup","termref":[{"$def":"dt-stag","_":"start-tags"},{"$def":"dt-etag","_":"end-tags"},{"$def":"dt-empty","_":"empty-element tags"},{"$def":"dt-entref","_":"entity references"},{"$def":"dt-charref","_":"character\nreferences"},{"$def":"dt-comment","_":"comments"},{"$def":"dt-cdsection","_":"CDATA section"},{"$def":"dt-doctype","_":"document\ntype declarations"},{"$def":"dt-pi","_":"processing instructions"}],"nt":[{"$def":"NT-XMLDecl","_":"XML declarations"},{"$def":"NT-TextDecl","_":"text declarations"}],"$id":"dt-markup","$term":"Markup","_":"takes the form of,,,,,,delimiters,,,,,\nand any white space that is at the top level of the document entity (that\nis, outside the document element and not inside any other markup)."},"_":"consists of intermingledand markup."},{"termdef":{"term":"character data","$id":"dt-chardata","$term":"Character Data","_":"All text that is not markup\nconstitutes theof the document."}},{"rfc2119":["MUST NOT","MUST","MUST"],"termref":[{"$def":"dt-comment","_":"comment"},{"$def":"dt-pi","_":"processing\ninstruction"},{"$def":"dt-cdsection","_":"CDATA section"},{"$def":"dt-escape","_":"escaped"},{"$def":"dt-charref","_":"numeric character references"},{"$def":"dt-compat","_":"for compatibility"},{"$def":"dt-cdsection","_":"CDATA\nsection"}],"quote":[{"code":"&amp;"},{"code":"&lt;"},{"code":"&gt;"},{"code":"&gt;"},{"code":"]]>"}],"_":"The ampersand character (&) and the left angle bracket (<)appear\nin their literal form, except when used as markup delimiters, or\nwithin a, a, or a.If they are needed elsewhere, theybeusing eitheror the stringsandrespectively. The right angle bracket (>) may be represented using the string,\nand,, be escaped\nusing eitheror a character reference when it\nappears in the stringin content, when\nthat string is not marking the end of a."},{"quote":[{"code":"]]>"},{"code":"]]>"}],"_":"In the content of elements, character data is any string of characters\nwhich does not contain the start-delimiter of any markup and does not include the CDATA-section-close\ndelimiter,. In a CDATA section,\ncharacter data is any string of characters not including the CDATA-section-close\ndelimiter,."},{"quote":[{"code":"&apos;"},{"code":"&quot;"}],"_":"To allow attribute values to contain both single and double quotes, the\napostrophe or single-quote character (') may be represented as,\nand the double-quote character (\") as."}],"scrap":{"head":"Character Data","prod":{"lhs":"CharData","rhs":"[^<&]* - ([^<&]* ']]>' [^<&]*)","$id":"NT-CharData","$num":"14"},"$lang":"ebnf"},"$id":"syntax"},{"head":"Comments","p":[{"termdef":{"term":"Comments","termref":[{"$def":"dt-markup","_":"markup"},{"$def":"dt-chardata","_":"character\ndata"},{"$def":"dt-compat","_":"For\ncompatibility"}],"rfc2119":["MAY","MUST NOT"],"quote":{"code":"--"},"$id":"dt-comment","$term":"Comment","_":"may appear\nanywhere in a document outside other;\nin addition, they may appear within the document type declaration at places\nallowed by the grammar. They are not part of the document's; an XML processor, but need not, make it possible for an\napplication to retrieve the text of comments., the string(double-hyphen)occur within comments."},"rfc2119":"MUST NOT","_":"Parameter\nentity referencesbe recognized within comments."},"An example of a comment:",{"code":"--->","emph":"not","_":"Note\nthat the grammar does not allow a comment ending in. The\nfollowing example iswell-formed."}],"scrap":{"head":"Comments","prod":{"lhs":"Comment","rhs":{"nt":[{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"}],"_":"'<!--' ((- '-') | ('-'\n(- '-')))* '-->'"},"$id":"NT-Comment","$num":"15"},"$lang":"ebnf"},"eg":["<!-- declarations for <head> & <body> -->","<!-- B+, B, or B--->"],"$id":"sec-comments"},{"head":"Processing Instructions","p":[{"termdef":{"term":"Processing instructions","$id":"dt-pi","$term":"Processing instruction","_":"(PIs) allow documents to contain instructions for applications."}},{"termref":[{"$def":"dt-chardata","_":"character\ndata"},{"$def":"dt-notation","_":"Notation"}],"rfc2119":["MUST","MUST NOT"],"nt":{"$def":"NT-PITarget","_":"PITarget"},"quote":[{"code":"XML"},{"code":"xml"}],"_":"PIs are not part of the document's, butbe passed through to the application. The PI begins\nwith a target () used to identify the application\nto which the instruction is directed. The target names,,\nand so on are reserved for standardization in this or future versions of this\nspecification. The XMLmechanism\nmay be used for formal declaration of PI targets. Parameter\nentity referencesbe recognized within processing instructions."}],"scrap":{"head":"Processing Instructions","prod":[{"lhs":"PI","rhs":{"nt":[{"$def":"NT-PITarget","_":"PITarget"},{"$def":"NT-S","_":"S"},{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"}],"_":"'<?'((* - (* '?>'*)))? '?>'"},"$id":"NT-PI","$num":"16"},{"lhs":"PITarget","rhs":{"nt":{"$def":"NT-Name","_":"Name"},"_":"- (('X' | 'x') ('M' |\n'm') ('L' | 'l'))"},"$id":"NT-PITarget","$num":"17"}],"$lang":"ebnf"},"$id":"sec-pi"},{"head":"CDATA Sections","p":[{"termdef":{"term":"CDATA sections","quote":[{"code":"<![CDATA["},{"code":"]]>"}],"$id":"dt-cdsection","$term":"CDATA Section","_":"may occur anywhere character data may occur; they are used to escape blocks\nof text containing characters which would otherwise be recognized as markup.\nCDATA sections begin with the stringand end with the string:"}},{"nt":{"$def":"NT-CDEnd","_":"CDEnd"},"quote":[{"code":"&lt;"},{"code":"&amp;"}],"_":"Within a CDATA section, only thestring is\nrecognized as markup, so that left angle brackets and ampersands may occur\nin their literal form; they need not (and cannot) be escaped usingand. CDATA sections cannot nest."},{"quote":[{"code":"<greeting>"},{"code":"</greeting>"}],"termref":[{"$def":"dt-chardata","_":"character data"},{"$def":"dt-markup","_":"markup"}],"_":"An example of a CDATA section, in whichandare recognized as, not:"}],"scrap":{"head":"CDATA Sections","prod":[{"lhs":"CDSect","rhs":{"nt":[{"$def":"NT-CDStart","_":"CDStart"},{"$def":"NT-CData","_":"CData"},{"$def":"NT-CDEnd","_":"CDEnd"}]},"$id":"NT-CDSect","$num":"18"},{"lhs":"CDStart","rhs":"'<![CDATA['","$id":"NT-CDStart","$num":"19"},{"lhs":"CData","rhs":{"nt":[{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"}],"_":"(* - (*\n']]>'*))"},"$id":"NT-CData","$num":"20"},{"lhs":"CDEnd","rhs":"']]>'","$id":"NT-CDEnd","$num":"21"}],"$lang":"ebnf"},"eg":"<![CDATA[<greeting>Hello, world!</greeting>]]>","$id":"sec-cdata-sect"},{"head":"Prolog and Document Type Declaration","p":[{"termdef":{"rfc2119":"SHOULD","term":"XML declaration","$id":"dt-xmldecl","$term":"XML Declaration","_":"XML documentsbegin with anwhich specifies the version of\nXML being used."},"termref":[{"$def":"dt-wellformed","_":"well-formed"},{"$def":"dt-valid","_":"valid"}],"_":"For example, the following is a complete XML document,but not:"},"and so is this:",{"termref":{"$def":"dt-doctype","_":"document\ntype declaration"},"termdef":{"term":"valid","$id":"dt-valid","$term":"Validity","_":"An XML document isif it has an associated\ndocument type declaration and if the document complies with the constraints\nexpressed in it."},"_":"The function of the markup in an XML document is to describe its storage and\nlogical structure and to associate attribute\nname-value pairs with its logical structures. XML provides a mechanism, the, to define constraints on the logical structure\nand to support the use of predefined storage units."},{"rfc2119":"MUST","termref":{"$def":"dt-element","_":"element"},"_":"The document type declarationappear before the firstin the document."},{"loc":{"$role":"erratumref","$href":"E10"},"nt":{"$def":"NT-VersionNum","_":"VersionNum"},"rfc2119":"SHOULD NOT","$diff":"add","_":"Even though theproduction matches\n\t\t\t\t\tany version number of the form '1.x', XML 1.0 documentsspecify a version number other than '1.0'."},{"termdef":{"term":["document\ntype declaration","DTD"],"termref":[{"$def":"dt-markupdecl","_":"markup\ndeclarations"},{"$def":"dt-extent","_":"external entity"}],"$id":"dt-doctype","$term":"Document Type Declaration","_":"The XMLcontains or points tothat provide a grammar for a class of documents. This\ngrammar is known as a document type definition, or. The document\ntype declaration can point to an external subset (a special kind of) containing markup declarations,\nor can contain the markup declarations directly in an internal subset, or\ncan do both. The DTD for a document consists of both subsets taken together."}},{"termdef":{"term":"markup declaration","termref":[{"$def":"dt-eldecl","_":"element type declaration"},{"$def":"dt-attdecl","_":"attribute-list declaration"},{"$def":"dt-entdecl","_":"entity\ndeclaration"},{"$def":"dt-notdecl","_":"notation declaration"}],"$id":"dt-markupdecl","$term":"markup declaration","_":"Ais an, an, an, or a."},"termref":{"$def":"dt-PE","_":"parameter\nentities"},"specref":{"$ref":"sec-physical-struct"},"_":"These declarations may be contained in whole or in part within, as described in the well-formedness and validity constraints\nbelow. For further\ninformation, see."},{"nt":{"$def":"NT-doctypedecl","_":"doctypedecl"},"_":"Note\nthat it is possible to construct a well-formed document containing athat neither points to an external subset nor contains an internal subset."},{"termref":[{"$def":"dt-repltext","_":"replacement text"},{"$def":"dt-PE","_":"parameter\nentities"},{"$def":"dt-include","_":"included"}],"nt":[{"$def":"NT-elementdecl","_":"elementdecl"},{"$def":"NT-AttlistDecl","_":"AttlistDecl"}],"emph":"after","_":"The markup declarations may be made up in whole or in part of theof. The productions later in this specification for individual\nnonterminals (,,\nand so on) describe the declarationsall the parameter\nentities have been."},{"specref":{"$ref":"sec-condition-sect"},"_":"Parameter\nentity references are recognized anywhere in the DTD (internal and external\nsubsets and external parameter entities), except in literals, processing instructions,\ncomments, and the contents of ignored conditional sections (see).\nThey are also recognized in entity value literals. The use of parameter entities\nin the internal subset is restricted as described below."},{"nt":[{"$def":"NT-DeclSep","_":"DeclSep"},{"$def":"NT-markupdecl","_":"markupdecl"}],"rfc2119":"MUST","termref":[{"$def":"dt-PERef","_":"parameter-entity references"},{"$def":"dt-cond-section","_":"conditional section"}],"_":"Like the internal subset, the external subset and any external parameter\nentities referenced\nin aconsist of a series of\ncomplete markup declarations of the types allowed by the non-terminal symbol, interspersed with white space or. However, portions of\nthe contents of the external subset or of these\nexternal parameter entities may conditionally be ignored by using theconstruct; this is not\nallowed in the internal subset but is\nallowed in external parameter entities referenced in the internal subset."},{"termref":{"$def":"dt-PERef","_":"parameter-entity\nreferences"},"emph":["within","between"],"_":"The external subset and external parameter entities also differ from the\ninternal subset in that in them,are permittedmarkup declarations,\nnot onlymarkup declarations."},"An example of an XML document with a document type declaration:",{"termref":{"$def":"dt-sysid","_":"system identifier"},"quote":{"code":"hello.dtd"},"_":"Thegives the address (a URI reference) of a DTD for the document."},"The declarations can also be given locally, as in this example:",{"rfc2119":"MUST","_":"If both the external and internal subsets are used, the internal subsetbe considered to occur before the external subset.This has the effect that entity and attribute-list declarations in the internal\nsubset take precedence over those in the external subset."}],"eg":["<?xml version=\"1.0\"?>\n<greeting>Hello, world!</greeting> ","<greeting>Hello, world!</greeting>","<?xml version=\"1.0\"?>\n<!DOCTYPE greeting SYSTEM \"hello.dtd\">\n<greeting>Hello, world!</greeting> ","<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE greeting [\n  <!ELEMENT greeting (#PCDATA)>\n]>\n<greeting>Hello, world!</greeting>"],"scrap":[{"head":"Prolog","prodgroup":{"prod":[{"lhs":"prolog","rhs":{"nt":[{"$def":"NT-XMLDecl","_":"XMLDecl"},{"$def":"NT-Misc","_":"Misc"},{"$def":"NT-doctypedecl","_":"doctypedecl"},{"$def":"NT-Misc","_":"Misc"}],"_":"?*\n(*)?"},"$id":"NT-prolog","$num":"22"},{"lhs":"XMLDecl","rhs":{"nt":[{"$def":"NT-VersionInfo","_":"VersionInfo"},{"$def":"NT-EncodingDecl","_":"EncodingDecl"},{"$def":"NT-SDDecl","_":"SDDecl"},{"$def":"NT-S","_":"S"}],"_":"'<?xml'??? '?>'"},"$id":"NT-XMLDecl","$num":"23"},{"lhs":"VersionInfo","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Eq","_":"Eq"},{"$def":"NT-VersionNum","_":"VersionNum"},{"$def":"NT-VersionNum","_":"VersionNum"}],"_":"'version'(\"'\"\"'\" | '\"''\"')"},"$id":"NT-VersionInfo","$num":"24"},{"lhs":"Eq","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"}],"_":"? '='?"},"$id":"NT-Eq","$num":"25"},{"lhs":"VersionNum","rhs":{"$diff":"chg","_":"'1.' [0-9]+"},"com":{"loc":{"$role":"erratumref","$href":"E10"},"$diff":"chg"},"$id":"NT-VersionNum","$num":"26"},{"lhs":"Misc","rhs":{"nt":[{"$def":"NT-Comment","_":"Comment"},{"$def":"NT-PI","_":"PI"},{"$def":"NT-S","_":"S"}],"_":"||"},"$id":"NT-Misc","$num":"27"}],"$pcw2":"6","$pcw4":"17.5","$pcw5":"9"},"$id":"xmldoc","$lang":"ebnf"},{"head":"Document Type Definition","prodgroup":{"prod":[{"lhs":"doctypedecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-ExternalID","_":"ExternalID"},{"$def":"NT-S","_":"S"},{"$def":"NT-intSubset","_":"intSubset"},{"$def":"NT-S","_":"S"}],"_":"'<!DOCTYPE'()??\n('['']'?)? '>'"},"vc":{"$def":"vc-roottype"},"wfc":{"$def":"ExtSubset"},"$id":"NT-doctypedecl","$num":"28"},{"lhs":"DeclSep","rhs":{"nt":[{"$def":"NT-PEReference","_":"PEReference"},{"$def":"NT-S","_":"S"}],"_":"|"},"wfc":{"$def":"PE-between-Decls"},"$id":"NT-DeclSep","$num":"28a"},{"lhs":"intSubset","rhs":{"nt":[{"$def":"NT-markupdecl","_":"markupdecl"},{"$def":"NT-DeclSep","_":"DeclSep"}],"_":"(|)*"},"$id":"NT-intSubset","$num":"28b"},{"lhs":"markupdecl","rhs":{"nt":[{"$def":"NT-elementdecl","_":"elementdecl"},{"$def":"NT-AttlistDecl","_":"AttlistDecl"},{"$def":"NT-EntityDecl","_":"EntityDecl"},{"$def":"NT-NotationDecl","_":"NotationDecl"},{"$def":"NT-PI","_":"PI"},{"$def":"NT-Comment","_":"Comment"}],"_":"|||||"},"vc":{"$def":"vc-PEinMarkupDecl"},"wfc":{"$def":"wfc-PEinInternalSubset"},"$id":"NT-markupdecl","$num":"29"}],"$pcw2":"6","$pcw4":"17.5","$pcw5":"9"},"$id":"dtd","$lang":"ebnf"},{"head":"External Subset","prodgroup":{"prod":[{"lhs":"extSubset","rhs":{"nt":[{"$def":"NT-TextDecl","_":"TextDecl"},{"$def":"NT-extSubsetDecl","_":"extSubsetDecl"}],"_":"?"},"$id":"NT-extSubset","$num":"30"},{"lhs":"extSubsetDecl","rhs":{"nt":[{"$def":"NT-markupdecl","_":"markupdecl"},{"$def":"NT-conditionalSect","_":"conditionalSect"},{"$def":"NT-DeclSep","_":"DeclSep"}],"_":"(||)*"},"$id":"NT-extSubsetDecl","$num":"31"}],"$pcw2":"6","$pcw4":"17.5","$pcw5":"9"},"$id":"ext-Subset","$lang":"ebnf"}],"note":{"p":{"loc":{"$role":"erratumref","$href":"E10"},"_":"When an XML 1.0 processor encounters a document that specifies\n\t\t\t\t\t\ta 1.x version number other than '1.0', it will process it as\n\t\t\t\t\t\ta 1.0 document.  This means that an XML 1.0 processor will accept\n\t\t\t\t\t\t1.x documents provided they do not use any non-1.0 features."},"$diff":"add"},"vcnote":[{"head":"Root Element Type","p":{"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":"MUST","termref":{"$def":"dt-root","_":"root element"},"_":"Thein the document type declarationmatch the element type of the."},"$id":"vc-roottype"},{"head":"Proper Declaration/PE Nesting","p":{"termref":[{"$def":"dt-repltext","_":"replacement text"},{"$def":"dt-PERef","_":"parameter-entity\nreference"}],"rfc2119":["MUST","MUST"],"nt":{"$def":"NT-markupdecl","_":"markupdecl"},"_":"Parameter-entitybe properly nested with markup declarations. That is to say, if either\nthe first character or the last character of a markup declaration (above) is contained in the replacement text for a, bothbe contained in the same replacement text."},"$id":"vc-PEinMarkupDecl"}],"wfcnote":[{"head":"PEs in Internal Subset","p":{"termref":{"$def":"dt-PERef","_":"parameter-entity references"},"rfc2119":"MUST NOT","_":"In\nthe internal DTD subset,occur within markup declarations; they may occur where markup declarations can occur.\n(This does not apply to references that occur in external parameter entities\nor to the external subset.)"},"$id":"wfc-PEinInternalSubset"},{"head":"External Subset","p":{"rfc2119":"MUST","nt":{"$def":"NT-extSubset","_":"extSubset"},"_":"The external subset, if any,match the production for."},"$id":"ExtSubset"},{"head":"PE Between Declarations","p":{"nt":[{"$def":"NT-DeclSep","_":"DeclSep"},{"$def":"NT-extSubsetDecl","_":"extSubsetDecl"}],"rfc2119":"MUST","_":"The replacement text of a parameter entity reference\nin amatch the production."},"$id":"PE-between-Decls"}],"$id":"sec-prolog-dtd"},{"head":"Standalone Document Declaration","p":[{"termref":[{"$def":"dt-xml-proc","_":"XML processor"},{"$def":"dt-docent","_":"document\nentity"}],"termdef":{"term":"external\nmarkup declaration","$id":"dt-extmkpdecl","$term":"External Markup Declaration","_":"Anis defined as a markup declaration occurring in\nthe external subset or in a parameter entity (external or internal, the latter\nbeing included because non-validating processors are not required to read\nthem)."},"_":"Markup declarations can affect the content of the document, as passed from\nanto an application; examples\nare attribute defaults and entity declarations. The standalone document declaration,\nwhich may appear as a component of the XML declaration, signals whether or\nnot there are such declarations which appear external to theor in parameter entities."},{"attval":["yes","no"],"termref":{"$def":"dt-extmkpdecl","_":"external markup declarations"},"emph":["declarations","entities"],"_":"In a standalone document declaration, the valueindicates\nthat there are nowhich\naffect the information passed from the XML processor to the application. The\nvalueindicates that there are or may be such external\nmarkup declarations. Note that the standalone document declaration only denotes\nthe presence of external; the presence, in a document,\nof references to external, when those entities are internally\ndeclared, does not change its standalone status."},{"attval":"no","_":"If there are no external markup declarations, the standalone document declaration\nhas no meaning. If there are external markup declarations but there is no\nstandalone document declaration, the valueis assumed."},{"code":"standalone=\"no\"","_":"Any XML document for whichholds can be converted\nalgorithmically to a standalone document, which may be desirable for some\nnetwork delivery applications."},"An example XML declaration with a standalone document declaration:"],"scrap":{"head":"Standalone Document Declaration","prodgroup":{"prod":{"lhs":"SDDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Eq","_":"Eq"}],"_":"'standalone'((\"'\" ('yes' | 'no') \"'\") | ('\"' ('yes' | 'no') '\"'))"},"vc":{"$def":"vc-check-rmd"},"$id":"NT-SDDecl","$num":"32"},"$pcw2":"4","$pcw4":"19.5","$pcw5":"9"},"$id":"fulldtd","$lang":"ebnf"},"vcnote":{"head":"Standalone Document Declaration","p":{"rfc2119":"MUST","attval":"no","_":"The\nstandalone document declarationhave the valueif\nany external markup declarations contain declarations of:"},"ulist":{"item":[{"p":{"termref":{"$def":"dt-default","_":"default"},"_":"attributes withvalues,\nif elements to which these attributes apply appear in the document without\nspecifications of values for these attributes, or"}},{"p":{"code":["amp","lt","gt","apos","quot"],"termref":{"$def":"dt-entref","_":"references"},"_":"entities (other than,,,,), ifto those entities appear in the document, or"}},{"p":{"titleref":{"$href":"#AVNormalize","_":"normalization"},"_":"attributes with\ntokenized types, where the\nattribute appears in the document with a value such thatwill produce a different value from that which would be produced\nin the absence of the declaration, or"}},{"p":{"termref":{"$def":"dt-elemcontent","_":"element content"},"_":"element types with,\nif white space occurs directly within any instance of those types."}}]},"$id":"vc-check-rmd"},"eg":"<?xml version=\"1.0\" standalone='yes'?>","$id":"sec-rmd"},{"head":"White Space Handling","p":[{"quote":["white space","significant"],"_":"In editing XML documents, it is often convenient to use(spaces, tabs, and blank lines)\nto set apart the markup for greater readability. Such white space is typically\nnot intended for inclusion in the delivered version of the document. On the\nother hand,white space that should be preserved\nin the delivered version is common, for example in poetry and source code."},{"termref":[{"$def":"dt-xml-proc","_":"XML processor"},{"$def":"dt-validating","_":"validating XML processor"},{"$def":"dt-elemcontent","_":"element content"}],"rfc2119":["MUST","MUST"],"_":"Analways pass\nall characters in a document that are not markup through to the application.\nAalso\ninform the application which of these characters constitute white space appearing\nin."},{"termref":[{"$def":"dt-attr","_":"attribute"},{"$def":"dt-attdecl","_":"declared"},{"$def":"dt-enumerated","_":"enumerated\ntype"}],"att":"xml:space","rfc2119":["MUST","MUST"],"attval":["default","preserve"],"_":"A specialnamedmay be attached to an element to signal an intention that in that element,\nwhite space should be preserved by applications. In valid documents, this\nattribute, like any other,beif it is used. When declared, itbe given as anwhose values\nare one or both ofand.\nFor example:"},{"attval":["default","preserve","default","preserve"],"att":["xml:space","xml:space"],"rfc2119":["MAY","MAY"],"_":"The valuesignals that applications' default white-space\nprocessing modes are acceptable for this element; the valueindicates the intent that applications preserve all the white space. This\ndeclared intent is considered to apply to all elements within the content\nof the element where it is specified, unless overridden with\nanother instance of theattribute. This specification does not give meaning to any value ofother thanand. It is an error for other values to be specified; the XML processorreport the error orrecover by ignoring the attribute specification or by reporting the (erroneous) value to the application. Applications may ignore or reject erroneous values."},{"termref":{"$def":"dt-root","_":"root element"},"_":"Theof any document is considered\nto have signaled no intentions as regards application space handling, unless\nit provides a value for this attribute or the attribute is declared with a\ndefault value."}],"eg":"<!ATTLIST poem  xml:space (default|preserve) 'preserve'><!ATTLIST pre xml:space (preserve) #FIXED 'preserve'>","$id":"sec-white-space"},{"head":"End-of-Line Handling","p":[{"termref":{"$def":"dt-parsedent","_":"parsed entities"},"_":"XMLare often stored\nin computer files which, for editing convenience, are organized into lines.\nThese lines are typically separated by some combination of the characters\nCARRIAGE RETURN (#xD) and LINE FEED (#xA)."},{"termref":[{"$def":"dt-app","_":"applications"},{"$def":"dt-xml-proc","_":"XML\nprocessor"}],"rfc2119":"MUST","_":"To\nsimplify the tasks of, thebehave as if it normalized all line breaks in external parsed\nentities (including the document entity) on input, before parsing, by translating\nboth the two-character sequence #xD #xA and any #xD that is not followed by\n#xA to a single #xA character."}],"$id":"sec-line-ends"},{"head":"Language Identification","p":[{"termref":[{"$def":"dt-attr","_":"attribute"},{"$def":"dt-attdecl","_":"declared"}],"att":"xml:lang","rfc2119":"MUST","bibref":{"$ref":"RFC1766"},"titleref":"Tags\nfor the Identification of Languages","phrase":{"$diff":"del","_":", or its successor"},"_":"In document processing, it is often useful to identify the natural or formal\nlanguage in which the content is written. A specialnamedmay be inserted in documents to specify the language\nused in the contents and attribute values of any element in an XML document.\nIn valid documents, this attribute, like any other,beif it is used. The\nvalues of the attribute are language identifiers as defined by,; in addition, the empty string may be specified."},"(Productions 33 through 38 have been removed.)","For example:",{"att":["xml:lang","xml:lang","xml:lang","xml:lang","xml:lang","xml:lang"],"_":"The language specified byapplies to the element where it is specified\n\t\t (including the values of its attributes), and  to all elements in its content unless\n     overridden with another instance of. In particular, the empty value ofis used on an element B to override\n\t\t a specification ofon an enclosing element A, without specifying another language. Within B,\n\t\t it is considered that there is no language information available, just as ifhad not been specified\n\t\t on B or any of its ancestors. Applications determine which of an element's attribute values\n     and which parts of its character content, if any, are treated as language-dependent values described by."},{"att":"xml:lang","_":"A simple declaration formight take the form"},{"att":"xml:lang","_":"but specific default values may also be given, if appropriate. In a collection\nof French poems for English students, with glosses and notes in English, theattribute might be declared this way:"}],"eg":["<p xml:lang=\"en\">The quick brown fox jumps over the lazy dog.</p>\n<p xml:lang=\"en-GB\">What colour is it?</p>\n<p xml:lang=\"en-US\">What color is it?</p>\n<sp who=\"Faust\" desc='leise' xml:lang=\"de\">\n  <l>Habe nun, ach! Philosophie,</l>\n  <l>Juristerei, und Medizin</l>\n  <l>und leider auch Theologie</l>\n  <l>durchaus studiert mit hei√üem Bem√ºh'n.</l>\n</sp>","xml:lang CDATA #IMPLIED","<!ATTLIST poem   xml:lang CDATA 'fr'>\n<!ATTLIST gloss  xml:lang CDATA 'en'>\n<!ATTLIST note   xml:lang CDATA 'en'>"],"note":{"p":{"att":"xml:lang","_":"Language information may also be provided by external transport protocols (e.g. HTTP or\n  MIME). When available, this information may be used by XML applications, but the more local\n  information provided byshould be considered to override it."}},"$id":"sec-lang-tag"}],"$id":"sec-documents"},{"head":"Logical Structures","p":[{"termdef":{"termref":[{"$def":"dt-xml-doc","_":"XML\ndocument"},{"$def":"dt-stag","_":"start-tags"},{"$def":"dt-etag","_":"end-tags"},{"$def":"dt-empty","_":"empty"},{"$def":"dt-eetag","_":"empty-element tag"}],"term":"elements","quote":"generic\nidentifier","$id":"dt-element","$term":"Element","_":"Eachcontains one or more, the boundaries\nof which are either delimited byand, or, forelements, by an. Each\nelement has a type, identified by name, sometimes called its(GI), and may have a set of attribute specifications."},"termref":[{"$def":"dt-attrname","_":"name"},{"$def":"dt-attrval","_":"value"}],"_":"Each attribute specification has aand a."},{"code":"(('X'|'x')('M'|'m')('L'|'l'))","_":"This specification does not constrain the\n\t\t\tapplication semantics, use, or (beyond syntax)\nnames of the element types and attributes, except that names beginning with\na match toare reserved for standardization\nin this or future versions of this specification."}],"scrap":{"head":"Element","prod":{"lhs":"element","rhs":[{"nt":{"$def":"NT-EmptyElemTag","_":"EmptyElemTag"}},{"nt":[{"$def":"NT-STag","_":"STag"},{"$def":"NT-content","_":"content"},{"$def":"NT-ETag","_":"ETag"}],"_":"|"}],"wfc":{"$def":"GIMatch"},"vc":{"$def":"elementvalid"},"$id":"NT-element","$num":"39"},"$lang":"ebnf"},"wfcnote":{"head":"Element Type Match","p":{"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":"MUST","_":"Thein an element's end-tagmatch the element type in the start-tag."},"$id":"GIMatch"},"vcnote":{"head":"Element Valid","p":{"nt":[{"$def":"NT-elementdecl","_":"elementdecl"},{"$def":"NT-Name","_":"Name"}],"_":"An element is valid\nif there is a declaration matchingwhere thematches the element type, and one of\nthe following holds:"},"olist":{"item":[{"p":{"kw":"EMPTY","termref":{"$def":"dt-content","_":"content"},"_":"The declaration matchesand the element has no(not even entity\nreferences, comments, PIs or white space)."}},{"p":{"nt":[{"$def":"NT-children","_":"children"},{"$def":"NT-Misc","_":"Misc"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"}],"termref":{"$def":"dt-parentchild","_":"child elements"},"_":"The declaration matchesand the\nsequence ofbelongs\nto the language generated by the regular expression in the content model,\nwith optional white space, comments and\nPIs (i.e. markup matching production [27]) between the\nstart-tag and the first child element, between child elements, or between\nthe last child element and the end-tag. Note that a CDATA section containing\nonly white space or a reference\nto an entity whose replacement text is character references expanding to white\nspace do not\nmatch the nonterminal, and\nhence cannot appear in these positions; however, a\nreference to an internal entity with a literal value consisting of character\nreferences expanding to white space does match, since its\nreplacement text is the white space resulting from expansion of the character\nreferences."}},{"p":{"nt":{"$def":"NT-Mixed","_":"Mixed"},"termref":[{"$def":"dt-chardata","_":"character data"},{"$def":"dt-cdsection","_":"CDATA sections"},{"$def":"dt-comment","_":"comments"},{"$def":"dt-pi","_":"PIs"},{"$def":"dt-parentchild","_":"child elements"}],"_":"The declaration matches, and the content\n(after replacing\nany entity references with their replacement text) consists of(including),,andwhose types match names in the\ncontent model."}},{"p":{"kw":"ANY","termref":[{"$def":"dt-cdsection","_":"CDATA\nsections"},{"$def":"dt-comment","_":"comments"},{"$def":"dt-pi","_":"PIs"},{"$def":"dt-parentchild","_":"child elements"}],"_":"The declaration matches, and the content (after replacing\nany entity references with their replacement text)\nconsists of character data,,,andwhose types have been declared."}}]},"$id":"elementvalid"},"div2":[{"head":"Start-Tags, End-Tags, and Empty-Element Tags","p":[{"termdef":{"term":"start-tag","$id":"dt-stag","$term":"Start-Tag","_":"The beginning of every non-empty\nXML element is marked by a."}},{"nt":{"$def":"NT-Name","_":"Name"},"term":"type","termdef":[{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-AttValue","_":"AttValue"}],"term":"attribute specifications","$id":"dt-attr","$term":"Attribute","_":"The-pairs are referred to as theof the\nelement"},{"nt":{"$def":"NT-Name","_":"Name"},"term":"attribute name","$id":"dt-attrname","$term":"Attribute Name","_":"with thein each pair referred to as the"},{"nt":{"$def":"NT-AttValue","_":"AttValue"},"code":["'","\""],"term":"attribute value","$id":"dt-attrval","$term":"Attribute Value","_":"the content of the(the text between theordelimiters) as the."}],"_":"Thein the start- and end-tags gives the element's.,andNote\nthat the order of attribute specifications in a start-tag or empty-element\ntag is not significant."},"An example of a start-tag:",{"termdef":{"rfc2119":"MUST","term":"end-tag","$id":"dt-etag","$term":"End Tag","_":"The end of every element that begins\nwith a start-tagbe marked by ancontaining a name\nthat echoes the element's type as given in the start-tag:"}},"An example of an end-tag:",{"termdef":{"termref":{"$def":"dt-text","_":"text"},"term":"content","$id":"dt-content","$term":"Content","_":"Thebetween the start-tag and end-tag is called the element's:"}},{"termdef":[{"nt":{"$def":"NT-content","_":"content"},"term":"empty","$id":"dt-empty","$term":"Empty","_":"An element\nwith nois said to be."},{"term":"empty-element\ntag","$id":"dt-eetag","$term":"empty-element tag","_":"Antakes a special form:"}],"_":"The representation\nof an empty element is either a start-tag immediately followed by an end-tag,\nor an empty-element tag."},{"kw":"EMPTY","termref":{"$def":"dt-interop","_":"For\ninteroperability"},"rfc2119":["SHOULD","SHOULD"],"_":"Empty-element tags may be used for any element which has no content, whether\nor not it is declared using the keyword., the empty-element tagbe used, andonly be used, for elements which are declared\nEMPTY."},"Examples of empty elements:"],"scrap":[{"head":"Start-tag","prodgroup":{"prod":[{"lhs":"STag","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-Attribute","_":"Attribute"},{"$def":"NT-S","_":"S"}],"_":"'<'()*? '>'"},"wfc":{"$def":"uniqattspec"},"$id":"NT-STag","$num":"40"},{"lhs":"Attribute","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-Eq","_":"Eq"},{"$def":"NT-AttValue","_":"AttValue"}]},"vc":{"$def":"ValueType"},"wfc":[{"$def":"NoExternalRefs"},{"$def":"CleanAttrVals"}],"$id":"NT-Attribute","$num":"41"}],"$pcw2":"6","$pcw4":"15","$pcw5":"11.5"},"$lang":"ebnf"},{"head":"End-tag","prodgroup":{"prod":{"lhs":"ETag","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"}],"_":"'</'?\n'>'"},"$id":"NT-ETag","$num":"42"},"$pcw2":"6","$pcw4":"15","$pcw5":"11.5"},"$lang":"ebnf"},{"head":"Content of Elements","prodgroup":{"prod":{"lhs":"content","rhs":{"nt":[{"$def":"NT-CharData","_":"CharData"},{"$def":"NT-element","_":"element"},{"$def":"NT-Reference","_":"Reference"},{"$def":"NT-CDSect","_":"CDSect"},{"$def":"NT-PI","_":"PI"},{"$def":"NT-Comment","_":"Comment"},{"$def":"NT-CharData","_":"CharData"}],"_":"? ((||||)?)*"},"$id":"NT-content","$num":"43"},"$pcw2":"6","$pcw4":"15","$pcw5":"11.5"},"$lang":"ebnf"},{"head":"Tags for Empty Elements","prodgroup":{"prod":{"lhs":"EmptyElemTag","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-Attribute","_":"Attribute"},{"$def":"NT-S","_":"S"}],"_":"'<'()*? '/>'"},"wfc":{"$def":"uniqattspec"},"$id":"NT-EmptyElemTag","$num":"44"},"$pcw2":"6","$pcw4":"15","$pcw5":"11.5"},"$lang":"ebnf"}],"wfcnote":[{"head":"Unique Att Spec","p":{"rfc2119":"MUST NOT","_":"An attribute nameappear more than once in the same start-tag or empty-element tag."},"$id":"uniqattspec"},{"head":"No External Entity References","p":{"rfc2119":"MUST NOT","_":"Attribute\nvaluescontain direct or indirect entity references to external entities."},"$id":"NoExternalRefs"},{"head":{"code":"<","_":"Noin Attribute Values"},"p":{"termref":{"$def":"dt-repltext","_":"replacement text"},"rfc2119":"MUST NOT","code":"<","_":"Theof any entity\nreferred to directly or indirectly in an attribute valuecontain a."},"$id":"CleanAttrVals"}],"vcnote":{"head":"Attribute Value Type","p":{"rfc2119":["MUST","MUST"],"specref":{"$ref":"attdecls"},"_":"The attributehave been declared; the valuebe of the type declared for it. (For attribute\ntypes, see.)"},"$id":"ValueType"},"eg":["<termdef id=\"dt-dog\" term=\"dog\">","</termdef>","<IMG align=\"left\"\n src=\"http://www.w3.org/Icons/WWW/w3c_home\" />\n<br></br>\n<br/>"],"$id":"sec-starttags"},{"head":"Element Type Declarations","p":[{"termref":[{"$def":"dt-element","_":"element"},{"$def":"dt-xml-doc","_":"XML document"},{"$def":"dt-valid","_":"validation"},{"$def":"dt-content","_":"content"}],"_":"Thestructure of anmay, forpurposes, be constrained using element type and attribute-list declarations.\nAn element type declaration constrains the element's."},{"termref":{"$def":"dt-parentchild","_":"children"},"rfc2119":"MAY","_":"Element type declarations often constrain which element types can appear\nasof the element. At user\noption, an XML processorissue a warning when a declaration mentions an\nelement type for which no declaration is provided, but this is not an error."},{"termdef":{"term":"element\ntype declaration","$id":"dt-eldecl","$term":"Element Type declaration","_":"Antakes the form:"}},{"nt":{"$def":"NT-Name","_":"Name"},"_":"where thegives the element type being declared."},"Examples of element type declarations:"],"scrap":{"head":"Element Type Declaration","prodgroup":{"prod":[{"lhs":"elementdecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-contentspec","_":"contentspec"},{"$def":"NT-S","_":"S"}],"_":"'<!ELEMENT'?\n'>'"},"vc":{"$def":"EDUnique"},"$id":"NT-elementdecl","$num":"45"},{"lhs":"contentspec","rhs":{"nt":[{"$def":"NT-Mixed","_":"Mixed"},{"$def":"NT-children","_":"children"}],"_":"'EMPTY' | 'ANY' ||"},"$id":"NT-contentspec","$num":"46"}],"$pcw2":"5.5","$pcw4":"18","$pcw5":"9"},"$lang":"ebnf"},"vcnote":{"head":"Unique Element Type Declaration","p":{"rfc2119":"MUST NOT","_":"An element typebe declared more than once."},"$id":"EDUnique"},"eg":"<!ELEMENT br EMPTY>\n<!ELEMENT p (#PCDATA|emph)* >\n<!ELEMENT %name.para; %content.para; >\n<!ELEMENT container ANY>","div3":[{"head":"Element Content","p":[{"termdef":[{"termref":[{"$def":"dt-stag","_":"type"},{"$def":"dt-parentchild","_":"child"}],"term":"element content","rfc2119":"MUST","nt":{"$def":"NT-S","_":"S"},"$id":"dt-elemcontent","$term":"Element content","_":"An elementhaswhen elements\nof that typecontain onlyelements (no character data), optionally separated by white space (characters\nmatching the nonterminal)."},{"term":"content\nmodel","$id":"dt-content-model","$term":"Content model","_":"In this case, the constraint includes a, a simple grammar governing the allowed types of the\nchild elements and the order in which they are allowed to appear."}],"nt":{"$def":"NT-cp","_":"cp"},"_":"The grammar is built on content particles (s), which\nconsist of names, choice lists of content particles, or sequence lists of\ncontent particles:"},{"nt":{"$def":"NT-Name","_":"Name"},"termref":[{"$def":"dt-parentchild","_":"child"},{"$def":"dt-elemcontent","_":"element\ncontent"},{"$def":"dt-elemcontent","_":"element content"}],"rfc2119":["MUST","MUST"],"code":["+","*","?"],"_":"where eachis the type of an element which\nmay appear as a. Any content\nparticle in a choice list may appear in theat the location where the choice list appears in the grammar;\ncontent particles occurring in a sequence listeach appear in thein the order given in the list.\nThe optional character following a name or list governs whether the element\nor the content particles in the list may occur one or more (),\nzero or more (), or zero or one times (). The\nabsence of such an operator means that the element or content particleappear exactly once. This syntax and meaning are identical to those used in\nthe productions in this specification."},{"termref":{"$def":"dt-compat","_":"For\ncompatibility"},"specref":{"$ref":"determinism"},"_":"The content of an element matches a content model if and only if it is\npossible to trace out a path through the content model, obeying the sequence,\nchoice, and repetition operators and matching each element in the content\nagainst an element type in the content model., it is an error if the content model\nallows an element to match more than one occurrence of an element type in the\ncontent model. For more information, see."},"Examples of element-content models:"],"scrap":{"head":"Element-content Models","prodgroup":{"prod":[{"lhs":"children","rhs":{"nt":[{"$def":"NT-choice","_":"choice"},{"$def":"NT-seq","_":"seq"}],"_":"(|)\n('?' | '*' | '+')?"},"$id":"NT-children","$num":"47"},{"lhs":"cp","rhs":{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-choice","_":"choice"},{"$def":"NT-seq","_":"seq"}],"_":"(||) ('?' | '*' | '+')?"},"$id":"NT-cp","$num":"48"},{"lhs":"choice","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-cp","_":"cp"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-cp","_":"cp"},{"$def":"NT-S","_":"S"}],"_":"'('?(? '|'?)+? ')'"},"vc":{"$def":"vc-PEinGroup"},"$id":"NT-choice","$num":"49"},{"lhs":"seq","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-cp","_":"cp"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-cp","_":"cp"},{"$def":"NT-S","_":"S"}],"_":"'('?(? ','?)*? ')'"},"vc":{"$def":"vc-PEinGroup"},"$id":"NT-seq","$num":"50"}],"$pcw2":"5.5","$pcw4":"16","$pcw5":"11"},"$lang":"ebnf"},"vcnote":{"head":"Proper Group/PE Nesting","p":[{"termref":[{"$def":"dt-repltext","_":"replacement text"},{"$def":"dt-PERef","_":"parameter\nentity"}],"rfc2119":["MUST","MUST"],"nt":[{"$def":"NT-choice","_":"choice"},{"$def":"NT-seq","_":"seq"},{"$def":"NT-Mixed","_":"Mixed"}],"_":"Parameter-entitybe properly nested with parenthesized\ngroups. That is to say, if either of the opening or closing parentheses in\na,, orconstruct is contained in the replacement text for a, bothbe contained in the same replacement text."},{"termref":{"$def":"dt-interop","_":"For interoperability"},"nt":[{"$def":"NT-choice","_":"choice"},{"$def":"NT-seq","_":"seq"},{"$def":"NT-Mixed","_":"Mixed"}],"rfc2119":["SHOULD","SHOULD"],"code":["|",","],"_":", if a parameter-entity reference\nappears in a,, orconstruct, its replacement textcontain at\nleast one non-blank character, and neither the first nor last non-blank character\nof the replacement textbe a connector (or)."}],"$id":"vc-PEinGroup"},"eg":"<!ELEMENT spec (front, body, back?)>\n<!ELEMENT div1 (head, (p | list | note)*, div2*)>\n<!ELEMENT dictionary-body (%div.mix; | %dict.mix;)*>","$id":"sec-element-content"},{"head":"Mixed Content","p":[{"termdef":{"termref":[{"$def":"dt-stag","_":"type"},{"$def":"dt-parentchild","_":"child"}],"term":"mixed content","$id":"dt-mixed","$term":"Mixed Content","_":"An elementhaswhen elements of that type may contain character\ndata, optionally interspersed withelements."},"_":"In this case, the types of the child elements may be constrained,\nbut not their order or their number of occurrences:"},{"nt":{"$def":"NT-Name","_":"Name"},"kw":"#PCDATA","quote":"parsed\ncharacter data.","_":"where thes give the types of elements that\nmay appear as children. The\nkeywordderives historically from the term"},"Examples of mixed content declarations:"],"scrap":{"head":"Mixed-content Declaration","prodgroup":{"prod":{"lhs":"Mixed","rhs":[{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"}],"_":"'('? '#PCDATA' (?\n'|'?)*?\n')*'"},{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"}],"_":"| '('? '#PCDATA'? ')'"}],"vc":[{"$def":"vc-PEinGroup"},{"$def":"vc-MixedChildrenUnique"}],"$id":"NT-Mixed","$num":"51"},"$pcw2":"5.5","$pcw4":"16","$pcw5":"11"},"$lang":"ebnf"},"vcnote":{"head":"No Duplicate Types","p":{"rfc2119":"MUST NOT","_":"The\nsame nameappear more than once in a single mixed-content declaration."},"$id":"vc-MixedChildrenUnique"},"eg":"<!ELEMENT p (#PCDATA|a|ul|b|i|em)*>\n<!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* >\n<!ELEMENT b (#PCDATA)>","$id":"sec-mixed-content"}],"$id":"elemdecls"},{"head":"Attribute-List Declarations","p":[{"termref":[{"$def":"dt-attr","_":"Attributes"},{"$def":"dt-element","_":"elements"},{"$def":"dt-stag","_":"start-tags"},{"$def":"dt-eetag","_":"empty-element tags"}],"rfc2119":"MUST NOT","specref":{"$ref":"sec-starttags"},"_":"are used to associate name-value\npairs with. Attribute specificationsappear outside ofand; thus, the productions used to\nrecognize them appear in. Attribute-list declarations\nmay be used:"},{"termdef":{"term":"Attribute-list\ndeclarations","$id":"dt-attdecl","$term":"Attribute-List Declaration","_":"specify the name, data type, and default value (if any)\nof each attribute associated with a given element type:"}},{"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-AttlistDecl","_":"AttlistDecl"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-AttDef","_":"AttDef"}],"rfc2119":"MAY","_":"Thein therule is the type of an element. At user option, an XML processorissue\na warning if attributes are declared for an element type not itself declared,\nbut this is not an error. Thein therule is the name of the attribute."},{"nt":{"$def":"NT-AttlistDecl","_":"AttlistDecl"},"termref":{"$def":"dt-interop","_":"For interoperability,"},"rfc2119":"MAY","_":"When more than oneis provided\nfor a given element type, the contents of all those provided are merged. When\nmore than one definition is provided for the same attribute of a given element\ntype, the first declaration is binding and later declarations are ignored.writers of DTDs may choose\nto provide at most one attribute-list declaration for a given element type,\nat most one attribute definition for a given attribute name in an attribute-list\ndeclaration, and at least one attribute definition in each attribute-list\ndeclaration. For interoperability, an XML processorat user option\nissue a warning when more than one attribute-list declaration is provided\nfor a given element type, or more than one attribute definition is provided\nfor a given attribute, but this is not an error."}],"ulist":{"item":[{"p":"To define the set of attributes pertaining to a given element type."},{"p":"To establish type constraints for these attributes."},{"p":{"termref":{"$def":"dt-default","_":"default values"},"_":"To providefor\nattributes."}}]},"scrap":{"head":"Attribute-list Declaration","prod":[{"lhs":"AttlistDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-AttDef","_":"AttDef"},{"$def":"NT-S","_":"S"}],"_":"'<!ATTLIST'*? '>'"},"$id":"NT-AttlistDecl","$num":"52"},{"lhs":"AttDef","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-AttType","_":"AttType"},{"$def":"NT-S","_":"S"},{"$def":"NT-DefaultDecl","_":"DefaultDecl"}]},"$id":"NT-AttDef","$num":"53"}],"$lang":"ebnf"},"div3":[{"head":"Attribute Types","p":[{"specref":{"$ref":"AVNormalize"},"_":"XML attribute types are of three kinds: a string type, a set of tokenized\ntypes, and enumerated types. The string type may take any literal string as\na value; the tokenized types are more constrained.\nThe validity constraints noted in the grammar are applied after the attribute\nvalue has been normalized as described in."},{"termdef":{"term":"Enumerated attributes","$id":"dt-enumerated","$term":"Enumerated Attribute\nValues","_":"have a list of allowed values in their declaration"},"rfc2119":"MUST","_":". Theytake one of those values.  There are two kinds of enumerated attribute types:"},{"kw":"NOTATION","termref":{"$def":"dt-notation","_":"notation"},"_":"Aattribute identifies a,\ndeclared in the DTD with associated system and/or public identifiers, to be\nused in interpreting the element to which the attribute is attached."},{"termref":{"$def":"dt-interop","_":"For interoperability,"},"nt":{"$def":"NT-Nmtoken","_":"Nmtoken"},"rfc2119":"SHOULD NOT","_":"the sameoccur more than once in the enumerated\nattribute types of a single element type."}],"scrap":[{"head":"Attribute Types","prodgroup":{"prod":[{"lhs":"AttType","rhs":{"nt":[{"$def":"NT-StringType","_":"StringType"},{"$def":"NT-TokenizedType","_":"TokenizedType"},{"$def":"NT-EnumeratedType","_":"EnumeratedType"}],"_":"||"},"$id":"NT-AttType","$num":"54"},{"lhs":"StringType","rhs":"'CDATA'","$id":"NT-StringType","$num":"55"},{"lhs":"TokenizedType","rhs":["'ID'","| 'IDREF'","| 'IDREFS'","| 'ENTITY'","| 'ENTITIES'","| 'NMTOKEN'","| 'NMTOKENS'"],"vc":[{"$def":"id"},{"$def":"one-id-per-el"},{"$def":"id-default"},{"$def":"idref"},{"$def":"idref"},{"$def":"entname"},{"$def":"entname"},{"$def":"nmtok"},{"$def":"nmtok"}],"$id":"NT-TokenizedType","$num":"56"}],"$pcw4":"14","$pcw5":"11.5"},"$lang":"ebnf"},{"head":"Enumerated Attribute Types","prod":[{"lhs":"EnumeratedType","rhs":{"nt":[{"$def":"NT-NotationType","_":"NotationType"},{"$def":"NT-Enumeration","_":"Enumeration"}],"_":"|"},"$id":"NT-EnumeratedType","$num":"57"},{"lhs":"NotationType","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"}],"_":"'NOTATION''('?(? '|'?)*? ')'"},"vc":[{"$def":"notatn"},{"$def":"OneNotationPer"},{"$def":"NoNotationEmpty"},{"$def":"NoDuplicateTokens"}],"$id":"NT-NotationType","$num":"58"},{"lhs":"Enumeration","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Nmtoken","_":"Nmtoken"},{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Nmtoken","_":"Nmtoken"},{"$def":"NT-S","_":"S"}],"_":"'('?(? '|'?)*? ')'"},"vc":[{"$def":"enum"},{"$def":"NoDuplicateTokens"}],"$id":"NT-Enumeration","$num":"59"}],"$lang":"ebnf"}],"vcnote":[{"head":"ID","p":{"kw":"ID","rfc2119":["MUST","MUST NOT","MUST"],"nt":{"$def":"NT-Name","_":"Name"},"_":"Values of typematch theproduction. A nameappear more than once\nin an XML document as a value of this type; i.e., ID valuesuniquely\nidentify the elements which bear them."},"$id":"id"},{"head":"One ID per Element Type","p":{"rfc2119":"MUST NOT","_":"An element typehave more than one ID attribute specified."},"$id":"one-id-per-el"},{"head":"ID Attribute Default","p":{"rfc2119":"MUST","kw":["#IMPLIED","#REQUIRED"],"_":"An ID attributehave a declared default ofor."},"$id":"id-default"},{"head":"IDREF","p":{"kw":["IDREF","IDREFS","IDREF"],"rfc2119":["MUST","MUST","MUST","MUST"],"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-Names","_":"Names"},{"$def":"NT-Name","_":"Name"}],"_":"Values of typematch theproduction, and values of typematch; eachmatch the value of an ID attribute on some element in the XML document;\ni.e.valuesmatch the value of some ID attribute."},"$id":"idref"},{"head":"Entity Name","p":{"kw":["ENTITY","ENTITIES"],"rfc2119":["MUST","MUST","MUST"],"nt":[{"$def":"NT-Name","_":"Name"},{"$def":"NT-Names","_":"Names"},{"$def":"NT-Name","_":"Name"}],"termref":[{"$def":"dt-unparsed","_":"unparsed entity"},{"$def":"dt-doctype","_":"DTD"}],"_":"Values of typematch theproduction, values of typematch; eachmatch the name of andeclared in the."},"$id":"entname"},{"head":"Name Token","p":{"kw":["NMTOKEN","NMTOKENS"],"rfc2119":["MUST","MUST"],"nt":[{"$def":"NT-Nmtoken","_":"Nmtoken"},{"$def":"NT-Nmtokens","_":"Nmtokens"}],"_":"Values of typematch theproduction; values of typematch."},"$id":"nmtok"},{"head":"Notation Attributes","p":{"rfc2119":["MUST","MUST"],"titleref":{"$href":"#Notations","_":"notation"},"_":"Values of this typematch one of thenames\nincluded in the declaration; all notation names in the declarationbe\ndeclared."},"$id":"notatn"},{"head":"One Notation Per Element Type","p":{"rfc2119":"MUST NOT","kw":"NOTATION","_":"An element typehave more than oneattribute specified."},"$id":"OneNotationPer"},{"head":"No Notation on Empty Element","p":{"termref":{"$def":"dt-compat","_":"For compatibility"},"kw":["NOTATION","EMPTY"],"rfc2119":"MUST NOT","_":",\nan attribute of typebe declared on an element\ndeclared."},"$id":"NoNotationEmpty"},{"head":"No Duplicate Tokens","p":{"nt":[{"$def":"NT-NotationType","_":"NotationType"},{"$def":"NT-Nmtoken","_":"NmToken"},{"$def":"NT-Enumeration","_":"Enumeration"}],"rfc2119":"MUST","_":"The notation names in a singleattribute declaration, as well as thes in a singleattribute declaration,all be distinct."},"$id":"NoDuplicateTokens"},{"head":"Enumeration","p":{"rfc2119":"MUST","nt":{"$def":"NT-Nmtoken","_":"Nmtoken"},"_":"Values of this typematch\none of thetokens in the declaration."},"$id":"enum"}],"$id":"sec-attribute-types"},{"head":"Attribute Defaults","p":[{"termref":{"$def":"dt-attdecl","_":"attribute declaration"},"rfc2119":"REQUIRED","_":"Anprovides information\non whether the attribute's presence is, and if not, how an XML processor\nis to react if a declared attribute is absent in a document."},{"kw":["#REQUIRED","#IMPLIED"],"rfc2119":"MUST","termdef":{"kw":["#REQUIRED","#IMPLIED","#FIXED"],"nt":{"$def":"NT-AttValue","_":"AttValue"},"term":"default","rfc2119":["MUST","MUST"],"$id":"dt-default","$term":"Attribute Default","_":"If\nthe declaration is neithernor, then\nthevalue contains the declaredvalue; thekeyword states that the attributealways have\nthe default value.\nWhen an XML processor encounters\nan element\nwithout a specification for an attribute for which it has read a default\nvalue declaration, itreport the attribute with the declared default\nvalue to the application."},"_":"In an attribute declaration,means that the attributealways be provided,that no default value is provided."},"Examples of attribute-list declarations:"],"scrap":{"head":"Attribute Defaults","prodgroup":{"prod":{"lhs":"DefaultDecl","rhs":["'#REQUIRED' |¬†'#IMPLIED'",{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-AttValue","_":"AttValue"}],"_":"| (('#FIXED')?)"}],"vc":[{"$def":"RequiredAttr"},{"$def":"defattrvalid"},{"$def":"FixedAttr"}],"wfc":[{"$def":"CleanAttrVals"},{"$def":"NoExternalRefs"}],"$id":"NT-DefaultDecl","$num":"60"},"$pcw4":"14","$pcw5":"11.5"},"$lang":"ebnf"},"vcnote":[{"head":"Required Attribute","p":{"kw":"#REQUIRED","rfc2119":"MUST","_":"If the default\ndeclaration is the keyword, then the attributebe\nspecified for all elements of the type in the attribute-list declaration."},"$id":"RequiredAttr"},{"head":"Attribute Default Value Syntactically Correct","p":[{"rfc2119":"MUST","_":"The declared default valuemeet the syntactic\nconstraints of the declared attribute type. That is, the default value of an attribute:"},"Note that only the\nsyntactic constraints of the type are required here; other constraints (e.g.\nthat the value be the name of a declared unparsed entity, for an attribute of\ntype ENTITY) will be reported by a validating\nparser only if an element without a specification for this attribute\nactually occurs."],"ulist":{"item":[{"p":{"nt":{"$def":"NT-Name","_":"Name"},"_":"of type IDREF or ENTITY must match theproduction;"}},{"p":{"nt":{"$def":"NT-Names","_":"Names"},"_":"of type IDREFS or ENTITIES must match theproduction;"}},{"p":{"nt":{"$def":"NT-Nmtoken","_":"Nmtoken"},"_":"of type NMTOKEN must match theproduction;"}},{"p":{"nt":{"$def":"NT-Nmtokens","_":"Nmtokens"},"_":"of type NMTOKENS must match theproduction;"}},{"p":{"nt":[{"$def":"NT-EnumeratedType","_":"enumerated type"},{"$def":"NT-NotationType","_":"NOTATION"},{"$def":"NT-Enumeration","_":"enumeration"}],"_":"of an(either atype or an) must match one of the enumerated values."}}]},"$id":"defattrvalid"},{"head":"Fixed Attribute Default","p":{"kw":"#FIXED","rfc2119":"MUST","_":"If an attribute\nhas a default value declared with thekeyword, instances of\nthat attributematch the default value."},"$id":"FixedAttr"}],"eg":"<!ATTLIST termdef\n          id      ID      #REQUIRED\n          name    CDATA   #IMPLIED>\n<!ATTLIST list\n          type    (bullets|ordered|glossary)  \"ordered\">\n<!ATTLIST form\n          method  CDATA   #FIXED \"POST\">","$id":"sec-attr-defaults"},{"head":"Attribute-Value Normalization","p":[{"rfc2119":"MUST","_":"Before the value of an attribute is passed to the application or checked\nfor validity, the XML processornormalize the attribute value by applying\nthe algorithm below, or by using some other method such that the value passed\nto the application is the same as that produced by the algorithm."},{"rfc2119":"MUST","_":"If the attribute type is not CDATA, then the XML processorfurther\nprocess the normalized attribute value by discarding any leading and trailing\nspace (#x20) characters, and by replacing sequences of space (#x20) characters\nby a single space (#x20) character."},"Note that if the unnormalized attribute value contains a character reference\nto a white space character other than space (#x20), the normalized value contains\nthe referenced character itself (#xD, #xA or #x9). This contrasts with the\ncase where the unnormalized value contains a white space character (not a\nreference), which is replaced with a space character (#x20) in the normalized\nvalue and also contrasts with the case where the unnormalized value contains\nan entity reference whose replacement text contains a white space character;\nbeing recursively processed, the white space character is replaced with a\nspace character (#x20) in the normalized value.",{"rfc2119":"SHOULD","kw":"CDATA","_":"All attributes for which no declaration has been readbe treated\nby a non-validating processor as if declared."},{"termref":[{"$def":"dt-attrval","_":"attribute\nvalue"},{"$def":"dt-entref","_":"reference"}],"_":"It is an error if ancontains ato an\nentity for which no declaration has been read."},"Following are examples of attribute normalization. Given the following\ndeclarations:",{"att":["a","a"],"kw":["NMTOKENS","CDATA"],"_":"the attribute specifications in the left column below would be normalized\nto the character sequences of the middle column if the attributeis declaredand to those of the right columns ifis declared."},{"att":"a","kw":"NMTOKENS","_":"Note that the last example is invalid (but well-formed) ifis declared to be of type."}],"olist":{"item":[{"p":{"rfc2119":"MUST","specref":{"$ref":"sec-line-ends"},"_":"All line breakshave been normalized on input to #xA as described\nin, so the rest of this algorithm operates\non text normalized in this way."}},{"p":"Begin with a normalized value consisting of the empty string."},{"p":"For each character, entity reference, or character reference in the\nunnormalized attribute value, beginning with the first and continuing to the\nlast, do the following:","ulist":{"item":[{"p":"For a character reference, append the referenced character to the\nnormalized value."},{"p":"For an entity reference, recursively apply step 3 of this algorithm\nto the replacement text of the entity."},{"p":"For a white space character (#x20, #xD, #xA, #x9), append a space\ncharacter (#x20) to the normalized value."},{"p":"For another character, append the character to the normalized value."}]}}]},"eg":"<!ENTITY d \"&#xD;\">\n<!ENTITY a \"&#xA;\">\n<!ENTITY da \"&#xD;&#xA;\">","table":{"thead":{"tr":{"th":["Attribute specification","a is NMTOKENS","a is CDATA"]}},"tbody":{"tr":[{"td":[{"eg":"a=\"\n\nxyz\""},{"eg":"x y z"},{"eg":"#x20 #x20 x y z"}]},{"td":[{"eg":"a=\"&d;&d;A&a;&#x20;&a;B&da;\""},{"eg":"A #x20 B"},{"eg":"#x20 #x20 A #x20 #x20 #x20 B #x20 #x20"}]},{"td":[{"eg":"a=\n\"&#xd;&#xd;A&#xa;&#xa;B&#xd;&#xa;\""},{"eg":"#xD #xD A #xA #xA B #xD #xA"},{"eg":"#xD #xD A #xA #xA B #xD #xA"}]}]},"$border":"1","$frame":"border"},"$id":"AVNormalize"}],"$id":"attdecls"},{"head":"Conditional Sections","p":[{"termdef":{"term":"Conditional\nsections","termref":{"$def":"dt-doctype","_":"document type\ndeclaration external subset"},"$id":"dt-cond-section","$term":"conditional section","_":"are portions of theor\nof external parameter entities which are included in, or excluded from,\nthe logical structure of the DTD based on the keyword which governs them."}},"Like the internal and external DTD subsets, a conditional section may contain\none or more complete declarations, comments, processing instructions, or nested\nconditional sections, intermingled with white space.",{"kw":["INCLUDE","IGNORE","INCLUDE","IGNORE"],"rfc2119":["MUST","MUST","NOT","MUST","MUST","MUST NOT"],"code":["[","<![","]]>"],"_":"If the keyword of the conditional section is, then the\ncontents of the conditional sectionbe processed as part of the DTD. If the keyword of\nthe conditional section is, then the contents of the conditional\nsectionbe processed as part of the DTD.\nIf a conditional section with a keyword ofoccurs within\na larger conditional section with a keyword of, both the outer\nand the inner conditional sectionsbe ignored. The contents\nof an ignored conditional sectionbe parsed by ignoring all characters after\nthe \"\" following the keyword, except conditional section starts\n\"\" and ends \"\", until the matching conditional\nsection end is found. Parameter entity referencesbe recognized in this\nprocess."},{"rfc2119":"MUST","_":"If the keyword of the conditional section is a parameter-entity reference,\nthe parameter entitybe replaced by its content before the processor\ndecides whether to include or ignore the conditional section."},"An example:"],"scrap":{"head":"Conditional Section","prodgroup":{"prod":[{"lhs":"conditionalSect","rhs":{"nt":[{"$def":"NT-includeSect","_":"includeSect"},{"$def":"NT-ignoreSect","_":"ignoreSect"}],"_":"|"},"$id":"NT-conditionalSect","$num":"61"},{"lhs":"includeSect","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-extSubsetDecl","_":"extSubsetDecl"}],"_":"'<!['? 'INCLUDE'? '['']]>'"},"vc":{"$def":"condsec-nesting"},"$id":"NT-includeSect","$num":"62"},{"lhs":"ignoreSect","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-ignoreSectContents","_":"ignoreSectContents"}],"_":"'<!['? 'IGNORE'? '['*\n']]>'"},"vc":{"$def":"condsec-nesting"},"$id":"NT-ignoreSect","$num":"63"},{"lhs":"ignoreSectContents","rhs":{"nt":[{"$def":"NT-Ignore","_":"Ignore"},{"$def":"NT-ignoreSectContents","_":"ignoreSectContents"},{"$def":"NT-Ignore","_":"Ignore"}],"_":"('<!['']]>')*"},"$id":"NT-ignoreSectContents","$num":"64"},{"lhs":"Ignore","rhs":{"nt":[{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"},{"$def":"NT-Char","_":"Char"}],"_":"* - (*\n('<![' | ']]>')*)"},"$id":"NT-Ignore","$num":"65"}],"$pcw2":"9","$pcw4":"14.5"},"$lang":"ebnf"},"vcnote":{"head":"Proper Conditional Section/PE Nesting","p":{"code":["<![","[","]]>"],"rfc2119":"MUST","_":"If any of the \"\",\n\"\", or \"\" of a conditional section is contained\nin the replacement text for a parameter-entity reference, all of thembe contained in the same replacement text."},"$id":"condsec-nesting"},"eg":"<!ENTITY % draft 'INCLUDE' >\n<!ENTITY % final 'IGNORE' >\n\n<![%draft;[\n<!ELEMENT book (comments*, title, body, supplements?)>\n]]>\n<![%final;[\n<!ELEMENT book (title, body, supplements?)>\n]]>","$id":"sec-condition-sect"}],"$id":"sec-logical-struct"},{"head":"Physical Structures","p":[{"termdef":{"term":["entities","content","name"],"termref":[{"$def":"dt-docent","_":"document entity"},{"$def":"dt-doctype","_":"external DTD subset"}],"$id":"dt-entity","$term":"Entity","_":"An XML document may consist of one\nor many storage units. These\nare called; they all haveand are\nall (except for theand\nthe) identified by\nentity."},"termref":[{"$def":"dt-docent","_":"document entity"},{"$def":"dt-xml-proc","_":"XML processor"}],"_":"Each XML document has one entity\ncalled the, which serves\nas the starting point for theand may contain the whole document."},{"termdef":{"term":"parsed\nentity","termref":[{"$def":"dt-repltext","_":"replacement\ntext"},{"$def":"dt-text","_":"text"}],"$id":"dt-parsedent","$term":"Text Entity","_":"The contents of aare referred to as its; thisis considered an\nintegral part of the document."},"_":"Entities may be either parsed or unparsed."},{"termdef":{"term":"unparsed entity","termref":[{"$def":"dt-text","_":"text"},{"$def":"dt-notation","_":"notation"}],"$id":"dt-unparsed","$term":"Unparsed Entity","_":"Anis a resource whose contents may or may not be,\nand if text, may\nbe other than XML. Each unparsed entity has an associated, identified by name. Beyond a requirement\nthat an XML processor make the identifiers for the entity and notation available\nto the application, XML places no constraints on the contents of unparsed\nentities."}},{"kw":["ENTITY","ENTITIES"],"_":"Parsed entities are invoked by name using entity references; unparsed entities\nby name, given in the value oforattributes."},{"termdef":[{"term":"General entities","emph":"entity","$id":"gen-entity","$term":"general entity","_":"are entities for use within the document content. In this specification, general\nentities are sometimes referred to with the unqualified termwhen this leads to no ambiguity."},{"term":"Parameter\nentities","$id":"dt-PE","$term":"Parameter entity","_":"are parsed entities for use within the DTD."}],"_":"These two types of entities use different forms of reference and are recognized\nin different contexts. Furthermore, they occupy different namespaces; a parameter\nentity and a general entity with the same name are two distinct entities."}],"div2":[{"head":"Character and Entity References","p":[{"termdef":{"term":"character\nreference","$id":"dt-charref","$term":"Character Reference","_":"Arefers to a specific character in the ISO/IEC 10646 character\nset, for example one not directly accessible from available input devices."}},{"quote":[{"code":"&#x"},{"code":"&#"}],"code":[";",";"],"_":"If the character reference begins with,\nthe digits and letters up to the terminatingprovide a hexadecimal\nrepresentation of the character's code point in ISO/IEC 10646. If it begins\njust with, the digits up to the terminatingprovide a decimal representation of the character's code point."},{"termdef":[{"term":"entity reference","$id":"dt-entref","$term":"Entity Reference","_":"Anrefers to the content of a named entity."},{"code":["&",";"],"$id":"dt-GERef","$term":"General Entity Reference","_":"References to parsed general entities use\nampersand () and semicolon () as delimiters."},{"term":"Parameter-entity references","code":["%",";"],"$id":"dt-PERef","$term":"Parameter-entity reference","_":"use percent-sign () and semicolon () as delimiters."}]},"Examples of character and entity references:","Example of a parameter-entity reference:"],"scrap":[{"head":"Character Reference","prod":{"lhs":"CharRef","rhs":["'&#' [0-9]+ ';'","| '&#x' [0-9a-fA-F]+ ';'"],"wfc":{"$def":"wf-Legalchar"},"$id":"NT-CharRef","$num":"66"},"$lang":"ebnf"},{"head":"Entity Reference","prod":[{"lhs":"Reference","rhs":{"nt":[{"$def":"NT-EntityRef","_":"EntityRef"},{"$def":"NT-CharRef","_":"CharRef"}],"_":"|"},"$id":"NT-Reference","$num":"67"},{"lhs":"EntityRef","rhs":{"nt":{"$def":"NT-Name","_":"Name"},"_":"'&'';'"},"wfc":[{"$def":"wf-entdeclared"},{"$def":"textent"},{"$def":"norecursion"}],"vc":{"$def":"vc-entdeclared"},"$id":"NT-EntityRef","$num":"68"},{"lhs":"PEReference","rhs":{"nt":{"$def":"NT-Name","_":"Name"},"_":"'%'';'"},"vc":{"$def":"vc-entdeclared"},"wfc":[{"$def":"norecursion"},{"$def":"indtd"}],"$id":"NT-PEReference","$num":"69"}],"$lang":"ebnf"}],"wfcnote":[{"head":"Legal Character","p":{"rfc2119":"MUST","nt":{"$def":"NT-Char","_":"Char"},"_":"Characters referred\nto using character referencesmatch the production for."},"$id":"wf-Legalchar"},{"head":"Entity Declared","p":[{"quote":{"code":"standalone='yes'"},"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":["MUST","MUST"],"termref":{"$def":"dt-match","_":"match"},"titleref":{"$href":"#sec-entity-decl","_":"entity\ndeclaration"},"code":["amp","lt","gt","apos","quot"],"_":"In a document\nwithout any DTD, a document with only an internal DTD subset which contains\nno parameter entity references, or a document with, for\nan entity reference that does not occur within the external subset or a parameter\nentity, thegiven in the entity referencethat in anthat does not occur within the external subset or a\nparameter entity, except that well-formed documents need not declare\nany of the following entities:,,,,. The\ndeclaration of a general entityprecede any reference to it which appears\nin a default value in an attribute-list declaration."},{"titleref":[{"$href":"#include-if-valid","_":"not\nobligated to"},{"$href":"#sec-rmd","_":"standalone='yes'"}],"phrase":{"loc":{"$role":"erratumref","$href":"E03"},"$diff":"del","_":"to"},"_":"Note that non-validating processors areread and process entity declarations occurring in parameter entities or in\nthe external subset; for such documents,\nthe rule that an entity must be declared is a well-formedness constraint only\nif."}],"$id":"wf-entdeclared"},{"head":"Parsed Entity","p":{"rfc2119":"MUST\nNOT","termref":[{"$def":"dt-unparsed","_":"unparsed entity"},{"$def":"dt-attrval","_":"attribute\nvalues"}],"kw":["ENTITY","ENTITIES"],"_":"An entity referencecontain the name of an.\nUnparsed entities may be referred to only indeclared to be of typeor."},"$id":"textent"},{"head":"No Recursion","p":{"rfc2119":"MUST NOT","_":"A parsed entitycontain a recursive reference to itself, either directly or indirectly."},"$id":"norecursion"},{"head":"In DTD","p":{"rfc2119":"MUST NOT","termref":{"$def":"dt-doctype","_":"DTD"},"_":"Parameter-entity referencesappear outside\n the."},"$id":"indtd"}],"vcnote":{"head":"Entity Declared","p":{"phrase":{"loc":{"$role":"erratumref","$href":"E08"},"quote":{"code":"standalone='no'"},"$diff":"chg","_":",\n\t\t\t\t\t\tif the document is not standalone (eitheris specified or there is no standalone declaration), then"},"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":["MUST","SHOULD","MUST","MUST"],"termref":{"$def":"dt-match","_":"match"},"titleref":{"$href":"#sec-entity-decl","_":"entity\ndeclaration"},"code":["amp","lt","gt","apos","quot"],"specref":{"$ref":"sec-predefined-ent"},"_":"In a document with an external subset or parameter  entity referencesthegiven in the entity referencethat in an. For interoperability, valid documentsdeclare\nthe entities,,,,, in the form specified in.\nThe declaration of a parameter entityprecede any reference to it. Similarly,\nthe declaration of a general entityprecede any attribute-list\ndeclaration containing a default value with a direct or indirect reference\nto that general entity."},"$id":"vc-entdeclared"},"eg":["Type <key>less-than</key> (&#x3C;) to save options.\nThis document was prepared on &docdate; and\nis classified &security-level;.","<!-- declare the parameter entity \"ISOLat2\"... -->\n<!ENTITY % ISOLat2\n         SYSTEM \"http://www.xml.com/iso/isolat2-xml.entities\" >\n<!-- ... now reference it. -->\n%ISOLat2;"],"$id":"sec-references"},{"head":"Entity Declarations","p":[{"termdef":{"$id":"dt-entdecl","$term":"entity declaration","_":"Entities are declared\nthus:"}},{"nt":{"$def":"NT-Name","_":"Name"},"termref":{"$def":"dt-entref","_":"entity\nreference"},"kw":["ENTITY","ENTITIES"],"rfc2119":"MAY","_":"Theidentifies the entity in anor, in the case of an unparsed entity, in the value of\nanorattribute. If the same entity is declared\nmore than once, the first declaration encountered is binding; at user option,\nan XML processorissue a warning if entities are declared multiple times."}],"scrap":{"head":"Entity Declaration","prodgroup":{"prod":[{"lhs":"EntityDecl","rhs":{"nt":[{"$def":"NT-GEDecl","_":"GEDecl"},{"$def":"NT-PEDecl","_":"PEDecl"}],"_":"|"},"$id":"NT-EntityDecl","$num":"70"},{"lhs":"GEDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-EntityDef","_":"EntityDef"},{"$def":"NT-S","_":"S"}],"_":"'<!ENTITY'?\n'>'"},"$id":"NT-GEDecl","$num":"71"},{"lhs":"PEDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-PEDef","_":"PEDef"},{"$def":"NT-S","_":"S"}],"_":"'<!ENTITY''%'? '>'"},"$id":"NT-PEDecl","$num":"72"},{"lhs":"EntityDef","rhs":{"nt":[{"$def":"NT-EntityValue","_":"EntityValue"},{"$def":"NT-ExternalID","_":"ExternalID"},{"$def":"NT-NDataDecl","_":"NDataDecl"}],"_":"| (?)"},"$id":"NT-EntityDef","$num":"73"},{"lhs":"PEDef","rhs":{"nt":[{"$def":"NT-EntityValue","_":"EntityValue"},{"$def":"NT-ExternalID","_":"ExternalID"}],"_":"|"},"$id":"NT-PEDef","$num":"74"}],"$pcw2":"5","$pcw4":"18.5"},"$lang":"ebnf"},"div3":[{"head":"Internal Entities","p":[{"termdef":{"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"term":"internal entity","$id":"dt-internent","$term":"Internal Entity Replacement Text","_":"If the\nentity definition is an, the defined\nentity is called an. There is no separate physical\nstorage object, and the content of the entity is given in the declaration."},"termref":[{"$def":"dt-litentval","_":"literal entity value"},{"$def":"dt-repltext","_":"replacement text"}],"specref":{"$ref":"intern-replacement"},"_":"Note that some processing of entity and character references in themay be required to produce\nthe correct: see."},{"termref":{"$def":"dt-parsedent","_":"parsed entity"},"_":"An internal entity is a."},"Example of an internal entity declaration:"],"eg":"<!ENTITY Pub-Status \"This is a pre-release of the\n specification.\">","$id":"sec-internal-ent"},{"head":"External Entities","p":[{"termdef":{"term":"external entity","$id":"dt-extent","$term":"External Entity","_":"If the entity is not internal,\nit is an, declared as follows:"}},{"nt":{"$def":"NT-NDataDecl","_":"NDataDecl"},"termref":{"$def":"dt-unparsed","_":"unparsed entity"},"_":"If theis present, this is a general; otherwise it is a parsed entity."},{"termdef":{"nt":{"$def":"NT-SystemLiteral","_":"SystemLiteral"},"term":"system\nidentifier","bibref":{"$ref":"rfc3986"},"$id":"dt-sysid","$term":"System Identifier","_":"Theis called the entity's. It is meant to be converted to a URI reference\n(as defined in),\nas part of the\nprocess of dereferencing it to obtain input for the XML processor to construct the\nentity's replacement text."},"code":["#","Location:"],"termref":[{"$def":"dt-docent","_":"document\nentity"},{"$def":"dt-doctype","_":"external\nDTD subset"},{"$def":"dt-extent","_":"external parameter\nentity"}],"_":"It is an error for a fragment identifier\n(beginning with acharacter) to be part of a system identifier.\nUnless otherwise provided by information outside the scope of this specification\n(e.g. a special XML element type defined by a particular DTD, or a processing\ninstruction defined by a particular application specification), relative URIs\nare relative to the location of the resource within which the entity declaration\noccurs. This is defined to\nbe the external entity containing the '<' which starts the declaration, at the\npoint when it is parsed as a declaration.\nA URI might thus be relative to the, to the entity containing the, or to some other. Attempts to\nretrieve the resource identified by a URI may be redirected at the parser\nlevel (for example, in an entity resolver) or below (at the protocol level,\nfor example, via an HTTPheader). In the absence of additional\ninformation outside the scope of this specification within the resource,\nthe base URI of a resource is always the URI of the actual resource returned.\nIn other words, it is the URI of the resource retrieved after all redirection\nhas occurred."},{"bibref":{"$ref":"rfc3986"},"emph":"unwise","rfc2119":["MUST","SHOULD","MUST"],"_":"System\nidentifiers (and other XML strings meant to be used as URI references) may contain\ncharacters that, according to,\nmust be escaped before a URI can be used to retrieve the referenced resource. The\ncharacters to be escaped are the control characters #x0 to #x1F and #x7F (most of\nwhich cannot appear in XML), space #x20, the delimiters '<' #x3C, '>' #x3E and\n'\"' #x22, thecharacters '{' #x7B, '}' #x7D, '|' #x7C, '\\' #x5C, '^' #x5E and\n'`' #x60, as well as all characters above #x7F. Since escaping is not always a fully\nreversible process, itbe performed only when absolutely necessary and as late\nas possible in a processing chain. In particular, neither the process of converting\na relative URI to an absolute one nor the process of passing a URI reference to a\nprocess or software component responsible for dereferencing ittrigger escaping.\nWhen escaping does occur, itbe performed as follows:"},{"termdef":{"term":"public identifier","$id":"dt-pubid","$term":"Public identifier","_":"In addition to a system\nidentifier, an external identifier may include a."},"rfc2119":["MUST","MUST","MUST"],"_":"An XML processor attempting to retrieve the entity's content may use\nany combination of\nthe public and system identifiers as well as additional information outside the\nscope of this specification to try to generate an alternative URI reference.\nIf the processor is unable to do so, ituse the URI\nreference specified in the system literal. Before a match is attempted,\nall strings of white space in the public identifierbe normalized to\nsingle space characters (#x20), and leading and trailing white spacebe removed."},"Examples of external entity declarations:"],"scrap":{"head":"External Entity Declaration","prod":[{"lhs":"ExternalID","rhs":[{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-SystemLiteral","_":"SystemLiteral"}],"_":"'SYSTEM'"},{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-PubidLiteral","_":"PubidLiteral"},{"$def":"NT-S","_":"S"},{"$def":"NT-SystemLiteral","_":"SystemLiteral"}],"_":"| 'PUBLIC'"}],"$id":"NT-ExternalID","$num":"75"},{"lhs":"NDataDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"}],"_":"'NDATA'"},"vc":{"$def":"not-declared"},"$id":"NT-NDataDecl","$num":"76"}],"$lang":"ebnf"},"vcnote":{"head":"Notation Declared","p":{"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":"MUST","termref":{"$def":"dt-notation","_":"notation"},"_":"Thematch the declared name of a."},"$id":"not-declared"},"olist":{"item":[{"p":{"phrase":{"loc":{"$role":"erratumref","$href":"E11"},"bibref":{"$ref":"Unicode"},"$diff":"chg"},"_":"Each character to be escaped is represented in UTF-8as one or more bytes."}},{"p":{"code":"%","var":"HH","_":"The resulting bytes are escaped with\nthe URI escaping mechanism (that is, converted to,\nwhere HH is the hexadecimal notation of the byte value)."}},{"p":"The original character is replaced by the resulting character sequence."}]},"note":{"p":"In a future edition of this specification, the XML Core Working Group intends to replace the preceding paragraph\n\t\t\t\t\t\t\tand list of steps with a normative reference to an upcoming revision of IETF RFC 3987, which will define\n\t\t\t\t\t\t\t\"Legacy Extended IRIs (LEIRIs)\".  When this revision is available, it is the intent of the XML Core WG to use it to replace\n\t\t\t\t\t\t\tlanguage similar to the above in any future revisions of XML-related specifications under its purview.","$diff":"add"},"eg":"<!ENTITY open-hatch\n         SYSTEM \"http://www.textuality.com/boilerplate/OpenHatch.xml\">\n<!ENTITY open-hatch\n         PUBLIC \"-//Textuality//TEXT Standard open-hatch boilerplate//EN\"\n         \"http://www.textuality.com/boilerplate/OpenHatch.xml\">\n<!ENTITY hatch-pic\n         SYSTEM \"../grafix/OpenHatch.gif\"\n         NDATA gif >","$id":"sec-external-ent"}],"$id":"sec-entity-decl"},{"head":"Parsed Entities","div3":[{"head":"The Text Declaration","p":[{"rfc2119":"SHOULD","term":"text declaration","_":"External parsed entitieseach begin with a."},{"rfc2119":["MUST","MUST NOT"],"termref":{"$def":"dt-repltext","_":"replacement text"},"_":"The text declarationbe provided literally, not by reference\n\t\t\t\t\tto a parsed entity. The text declarationappear at any\n\t\t\t\t\tposition other than the beginning of an external parsed entity. The text declaration\n          in an external parsed entity is not considered part of its."}],"scrap":{"head":"Text Declaration","prodgroup":{"prod":{"lhs":"TextDecl","rhs":{"nt":[{"$def":"NT-VersionInfo","_":"VersionInfo"},{"$def":"NT-EncodingDecl","_":"EncodingDecl"},{"$def":"NT-S","_":"S"}],"_":"'<?xml'?? '?>'"},"$id":"NT-TextDecl","$num":"77"},"$pcw4":"12.5","$pcw5":"13"},"$lang":"ebnf"},"$id":"sec-TextDecl"},{"head":"Well-Formed Parsed Entities","p":[{"nt":[{"$def":"NT-document","_":"document"},{"$def":"NT-extParsedEnt","_":"extParsedEnt"}],"_":"The document entity is well-formed if it matches the production labeled. An external general parsed entity is well-formed\nif it matches the production labeled. All\nexternal parameter entities are well-formed by definition."},{"nt":{"$def":"NT-content","_":"content"},"_":"An internal general parsed entity is well-formed if its replacement text\nmatches the production labeled. All internal\nparameter entities are well-formed by definition."},{"termref":[{"$def":"dt-stag","_":"start-tag"},{"$def":"dt-etag","_":"end-tag"},{"$def":"dt-empty","_":"empty-element tag"},{"$def":"dt-element","_":"element"},{"$def":"dt-comment","_":"comment"},{"$def":"dt-pi","_":"processing instruction"},{"$def":"dt-charref","_":"character\nreference"},{"$def":"dt-entref","_":"entity reference"}],"_":"A consequence of well-formedness in general\nentities is that the logical and physical\nstructures in an XML document are properly nested; no,,,,,,, orcan begin in one entity and end in another."}],"note":{"p":"Only parsed entities that are referenced directly or indirectly within the document are required to be well-formed."},"scrap":{"head":"Well-Formed External Parsed Entity","prod":{"lhs":"extParsedEnt","rhs":{"nt":[{"$def":"NT-TextDecl","_":"TextDecl"},{"$def":"NT-content","_":"content"}],"_":"?"},"$id":"NT-extParsedEnt","$num":"78"},"$lang":"ebnf"},"$id":"wf-entities"},{"head":"Character Encoding in Entities","p":[{"rfc2119":"MUST","quote":["UTF-8","UTF-16"],"phrase":[{"loc":{"$role":"erratumref","$href":"E05"},"$diff":"del","_":"character encodings with any other labels, even if the encodings or labels are very similar to UTF-8 or UTF-16."},{"loc":{"$role":"erratumref","$href":"E05"},"$diff":"add","_":"related character encodings, including but not limited to UTF-16BE, UTF-16LE, or CESU-8."}],"_":"Each external parsed entity in an XML document may use a different encoding\nfor its characters. All XML processorsbe able to read entities in both\nthe UTF-8 and UTF-16 encodings. The termsandin this specification do not apply to"},{"rfc2119":["MUST","MAY","MUST"],"bibref":[{"$ref":"ISO10646-2000"},{"$ref":"Unicode"}],"phrase":[{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"chg","_":"16.8"},{"loc":{"$role":"erratumref","$href":"E11"},"bibref":{"$ref":"Unicode3"},"$diff":"del","_":", and section 2.7 of"}],"_":"Entities encoded in UTF-16and entities\nencoded in UTF-8begin with the Byte Order Mark described by\nAnnex H of, sectionof(the ZERO WIDTH NO-BREAK SPACE character, #xFEFF). This is an encoding signature,\nnot part of either the markup or the character data of the XML document. XML\nprocessorsbe able to use this character to differentiate between UTF-8\nand UTF-16 encoded documents."},{"loc":{"$role":"erratumref","$href":"E06"},"$diff":"add","_":"If the replacement text of an external entity is to\n\t\t\t\t\t\tbegin with the character U+FEFF, and no text declaration\n\t\t\t\t\t\tis present, then a Byte Order Mark MUST be present,\n\t\t\t\t\t\twhether the entity is encoded in UTF-8 or UTF-16."},{"rfc2119":"MUST","specref":{"$ref":"sec-TextDecl"},"_":"Although an XML processor is required to read only entities in the UTF-8\nand UTF-16 encodings, it is recognized that other encodings are used around\nthe world, and it may be desired for XML processors to read entities that\nuse them. In\nthe absence of external character encoding information (such as MIME headers),\nparsed entities which are stored in an encoding other than UTF-8 or UTF-16begin with a text declaration (see) containing\nan encoding declaration:"},{"termref":[{"$def":"dt-docent","_":"document entity"},{"$def":"dt-xmldecl","_":"XML declaration"}],"nt":{"$def":"NT-EncName","_":"EncName"},"_":"In the, the encoding\ndeclaration is part of the.\nTheis the name of the encoding used."},{"quote":[{"code":"UTF-8"},{"code":"UTF-16"},{"code":"ISO-10646-UCS-2"},{"code":"ISO-10646-UCS-4"},{"code":"ISO-8859-1"},{"code":"ISO-8859-2"},{"code":"ISO-8859-","var":"n"},{"code":"ISO-2022-JP"},{"code":"Shift_JIS"},{"code":"EUC-JP"},"x-"],"rfc2119":["SHOULD","SHOULD","SHOULD","RECOMMENDED","SHOULD","SHOULD","SHOULD"],"var":"n","emph":"charset","bibref":{"$ref":"IANA"},"_":"In an encoding declaration, the values,,, andbe used\nfor the various encodings and transformations of Unicode / ISO/IEC 10646,\nthe values,,\n...(whereis the part number)be used for the parts of ISO 8859, and\nthe values,,\nandbe used for the various encoded\nforms of JIS X-0208-1997. It\nisthat character encodings registered (ass)\nwith the Internet Assigned Numbers Authority,\nother than those just listed, be referred to using their registered names;\nother encodingsuse names starting with anprefix.\nXML processorsmatch character encoding names in a case-insensitive\nway andeither interpret an IANA-registered name as the encoding registered\nat IANA for that name or treat it as unknown (processors are, of course, not\nrequired to support all IANA-registered encodings)."},{"termref":{"$def":"dt-fatal","_":"fatal error"},"_":"In the absence of information provided by an external transport protocol\n(e.g. HTTP or MIME), it is afor\nan entity including an encoding declaration to be presented to the XML processor\nin an encoding other than that named in the declaration, or for an entity which\nbegins with neither a Byte Order Mark\nnor an encoding declaration to use an encoding other than UTF-8. Note that\nsince ASCII is a subset of UTF-8, ordinary ASCII entities do not strictly\nneed an encoding declaration."},{"termref":{"$def":"dt-fatal","_":"fatal error"},"nt":{"$def":"NT-TextDecl","_":"TextDecl"},"_":"It is afor ato occur other\nthan at the beginning of an external entity."},{"termref":[{"$def":"dt-fatal","_":"fatal error"},{"$def":"dt-fatal","_":"fatal error"},{"$def":"dt-fatal","_":"fatal error"}],"phrase":[{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"del","_":"irregular"},{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"add","_":"ill-formed"},{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"add","_":"section 3.9 of"},{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"del","_":"3.1"},{"loc":{"$role":"erratumref","$href":"E11"},"bibref":{"$ref":"Unicode"},"$diff":"chg"}],"_":"It is awhen an XML processor\nencounters an entity with an encoding that it is unable to process. It\nis aif an XML entity is determined (via default, encoding declaration,\nor higher-level protocol) to be in a certain encoding but contains byte\nsequences that are not legal in that encoding. Specifically, it is a\nfatal error if an entity encoded in UTF-8 contains anycode unit sequences,\nas defined inUnicode. Unless an encoding\nis determined by a higher-level protocol, it is also aif an XML entity\ncontains no encoding declaration and its content is not legal UTF-8 or UTF-16."},"Examples of text declarations containing encoding declarations:"],"scrap":{"head":"Encoding Declaration","prod":[{"lhs":"EncodingDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Eq","_":"Eq"},{"$def":"NT-EncName","_":"EncName"},{"$def":"NT-EncName","_":"EncName"}],"_":"'encoding'('\"''\"' | \"'\"\"'\" )"},"$id":"NT-EncodingDecl","$num":"80"},{"lhs":"EncName","rhs":"[A-Za-z] ([A-Za-z0-9._] | '-')*","com":"Encoding\nname contains only Latin characters","$id":"NT-EncName","$num":"81"}],"$lang":"ebnf"},"eg":"<?xml encoding='UTF-8'?>\n<?xml encoding='EUC-JP'?>","$id":"charencoding"}],"$id":"TextEntities"},{"head":"XML Processor Treatment of Entities and References","p":{"rfc2119":"REQUIRED","termref":{"$def":"dt-xml-proc","_":"XML processor"},"glist":{"gitem":[{"label":"Reference in Content","def":{"p":{"termref":[{"$def":"dt-stag","_":"start-tag"},{"$def":"dt-etag","_":"end-tag"}],"nt":{"$def":"NT-content","_":"content"},"_":"as a reference anywhere after theand before theof an element; corresponds\nto the nonterminal."}}},{"label":"Reference in Attribute Value","def":{"p":{"termref":[{"$def":"dt-stag","_":"start-tag"},{"$def":"dt-attdecl","_":"attribute declaration"}],"nt":{"$def":"NT-AttValue","_":"AttValue"},"_":"as a reference within either the value of an attribute in a,\nor a default value in an;\ncorresponds to the nonterminal."}}},{"label":"Occurs as Attribute Value","def":{"p":{"nt":{"$def":"NT-Name","_":"Name"},"kw":["ENTITY","ENTITIES"],"_":"as a, not a reference, appearing either as\nthe value of an attribute which has been declared as type,\nor as one of the space-separated tokens in the value of an attribute which\nhas been declared as type."}}},{"label":"Reference in Entity Value","def":{"p":{"termref":{"$def":"dt-litentval","_":"literal\nentity value"},"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"_":"as a reference within a parameter or internal entity'sin the entity's declaration; corresponds to the nonterminal."}}},{"label":"Reference in DTD","def":{"p":[{"termref":{"$def":"dt-doctype","_":"DTD"},"nt":[{"$def":"NT-EntityValue","_":"EntityValue"},{"$def":"NT-AttValue","_":"AttValue"},{"$def":"NT-PI","_":"PI"},{"$def":"NT-Comment","_":"Comment"},{"$def":"NT-SystemLiteral","_":"SystemLiteral"},{"$def":"NT-PubidLiteral","_":"PubidLiteral"}],"specref":{"$ref":"sec-condition-sect"},"_":"as a reference within either the internal or external subsets of the, but outside of an,,,,,,\nor the contents of an ignored conditional section (see)."},"."]}}]},"_":"The table below summarizes the contexts in which character references,\nentity references, and invocations of unparsed entities might appear and thebehavior of anin each case. The labels in the leftmost column describe the recognition context:"},"table":{"tbody":{"tr":[{"td":[{"$rowspan":"2","$colspan":"1"},{"$colspan":"4","$align":"center","$valign":"bottom","_":"Entity\nType"},{"$rowspan":"2","$align":"center","_":"Character"}]},{"td":["Parameter","Internal General","External Parsed\nGeneral","Unparsed"],"$align":"center","$valign":"bottom"},{"td":[{"$align":"right","_":"Reference\nin Content"},{"titleref":{"$href":"#not-recognized","_":"Not recognized"}},{"titleref":{"$href":"#included","_":"Included"}},{"titleref":{"$href":"#include-if-valid","_":"Included\nif validating"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#included","_":"Included"}}],"$align":"center","$valign":"middle"},{"td":[{"$align":"right","_":"Reference in Attribute Value"},{"titleref":{"$href":"#not-recognized","_":"Not recognized"}},{"titleref":{"$href":"#inliteral","_":"Included\nin literal"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#included","_":"Included"}}],"$align":"center","$valign":"middle"},{"td":[{"$align":"right","_":"Occurs as Attribute\nValue"},{"titleref":{"$href":"#not-recognized","_":"Not recognized"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#notify","_":"Notify"}},{"titleref":{"$href":"#not-recognized","_":"Not recognized"}}],"$align":"center","$valign":"middle"},{"td":[{"$align":"right","_":"Reference in EntityValue"},{"titleref":{"$href":"#inliteral","_":"Included in literal"}},{"titleref":{"$href":"#bypass","_":"Bypassed"}},{"titleref":{"$href":"#bypass","_":"Bypassed"}},{"titleref":{"$href":"#error","_":"Error"}},{"titleref":{"$href":"#included","_":"Included"}}],"$align":"center","$valign":"middle"},{"td":[{"$align":"right","_":"Reference in DTD"},{"titleref":{"$href":"#as-PE","_":"Included as PE"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}},{"titleref":{"$href":"#forbidden","_":"Forbidden"}}],"$align":"center","$valign":"middle"}],"$align":"center"},"$border":"1","$frame":"border","$cellpadding":"7"},"div3":[{"head":"Not Recognized","p":{"code":"%","nt":{"$def":"NT-content","_":"content"},"_":"Outside the DTD, thecharacter has no special significance;\nthus, what would be parameter entity references in the DTD are not recognized\nas markup in. Similarly, the names of unparsed\nentities are not recognized except when they appear in the value of an appropriately\ndeclared attribute."},"$id":"not-recognized"},{"head":"Included","p":{"termdef":{"term":"included","termref":{"$def":"dt-repltext","_":"replacement text"},"$id":"dt-include","$term":"Include","_":"An entity iswhen itsis retrieved\nand processed, in place of the reference itself, as though it were part of\nthe document at the location the reference was recognized."},"termref":[{"$def":"dt-chardata","_":"character data"},{"$def":"dt-markup","_":"markup"}],"rfc2119":"MUST","quote":[{"code":"AT&amp;T;"},{"code":"AT&T;"}],"term":"included","_":"The replacement\ntext may contain bothand (except for parameter entities),\nwhichbe recognized in the usual way. (The stringexpands toand the remaining ampersand\nis not recognized as an entity-reference delimiter.) A character reference\niswhen the indicated character is processed in place\nof the reference itself."},"$id":"included"},{"head":"Included If Validating","p":[{"termref":[{"$def":"dt-valid","_":"validate"},{"$def":"dt-include","_":"include"}],"rfc2119":["MUST","MAY","MUST"],"_":"When an XML processor recognizes a reference to a parsed entity, in order\ntothe document, the processorits replacement text. If\nthe entity is external, and the processor is not attempting to validate the\nXML document, the processor, but need\nnot, include the entity's replacement text. If a non-validating processor\ndoes not include the replacement text, itinform the application that\nit recognized, but did not read, the entity."},"This rule is based on the recognition that the automatic inclusion provided\nby the SGML and XML entity mechanism, primarily designed to support modularity\nin authoring, is not necessarily appropriate for other applications, in particular\ndocument browsing. Browsers, for example, when encountering an external parsed\nentity reference, might choose to provide a visual indication of the entity's\npresence and retrieve it for display only on demand."],"$id":"include-if-valid"},{"head":"Forbidden","p":{"termref":{"$def":"dt-fatal","_":"fatal\nerrors"},"_":"The following are forbidden, and constitute:"},"ulist":{"item":[{"p":{"termref":{"$def":"dt-unparsed","_":"unparsed\nentity"},"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"_":"the appearance of a reference to an, except in thein an entity declaration."}},{"p":{"nt":[{"$def":"NT-EntityValue","_":"EntityValue"},{"$def":"NT-AttValue","_":"AttValue"}],"_":"the appearance of any character or general-entity reference in the\nDTD except within anor."}},{"p":"a reference to an external entity in an attribute value."}]},"$id":"forbidden"},{"head":"Included in Literal","p":[{"termref":[{"$def":"dt-entref","_":"entity reference"},{"$def":"dt-repltext","_":"replacement text"}],"rfc2119":["MUST","MUST","MUST NOT"],"_":"When anappears in\nan attribute value, or a parameter entity reference appears in a literal entity\nvalue, itsbe processed\nin place of the reference itself as though it were part of the document at\nthe location the reference was recognized, except that a single or double\nquote character in the replacement textalways be treated as a normal data\ncharacter andterminate the literal. For example, this is well-formed:"},"while this is not:"],"eg":["<!ENTITY % YN '\"Yes\"' >\n<!ENTITY WhatHeSaid \"He said %YN;\" >","<!ENTITY EndAttr \"27'\" >\n<element attribute='a-&EndAttr;>"],"$id":"inliteral"},{"head":"Notify","p":{"termref":[{"$def":"dt-unparsed","_":"unparsed entity"},{"$def":"dt-sysid","_":"system"},{"$def":"dt-pubid","_":"public"},{"$def":"dt-notation","_":"notation"}],"kw":["ENTITY","ENTITIES"],"rfc2119":"MUST","_":"When the name of anappears as a token in the value of an attribute of declared typeor, a validating processorinform the application of\ntheand(if any) identifiers for both the entity and its associated."},"$id":"notify"},{"head":"Bypassed","p":{"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"rfc2119":"MUST","_":"When a general entity reference appears in thein an entity declaration, itbe bypassed and left as is."},"$id":"bypass"},{"head":"Included as PE","p":{"titleref":{"$href":"#include-if-valid","_":"included if validating"},"termref":{"$def":"dt-repltext","_":"replacement\ntext"},"rfc2119":["MUST","MUST NOT"],"specref":{"$ref":"inliteral"},"_":"Just as with external parsed entities, parameter entities need only be. When a parameter-entity\nreference is recognized in the DTD and included, itsbe enlarged by the attachment of one leading and one following\nspace (#x20) character; the intent is to constrain the replacement text of\nparameter entities to contain an integral number of grammatical tokens in\nthe DTD. This\nbehaviorapply to parameter entity references within entity values;\nthese are described in."},"$id":"as-PE"},{"head":"Error","p":{"termref":{"$def":"dt-error","_":"error"},"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"_":"It is anfor a reference to\n\t\tan unparsed entity to appear in thein an\n\t\tentity declaration."},"$id":"error"}],"$id":"entproc"},{"head":"Construction of Entity Replacement Text","p":[{"termdef":[{"term":"literal\nentity value","nt":{"$def":"NT-EntityValue","_":"EntityValue"},"$id":"dt-litentval","$term":"Literal Entity Value","_":"For an\ninternal entity, theis the quoted string actually present in the entity declaration,\ncorresponding to the non-terminal."},{"term":"literal\nentity value","$id":"dt-extlitentval","$term":"Literal Entity Value","_":"For an external entity, theis the exact text contained in the entity."},{"term":"replacement text","$id":"dt-repltext","$term":"Replacement Text","_":"For an\ninternal entity, theis the content of the entity, after replacement of character references and\nparameter-entity references."},{"term":"replacement text","$id":"dt-extrepltext","$term":"Replacement Text","_":"For\nan external entity, theis the content of the entity,\nafter stripping the text declaration (leaving any surrounding whitespace) if there\nis one but without any replacement of character references or parameter-entity\nreferences."}],"_":"In discussing the treatment of entities, it is useful to distinguish\ntwo forms of the entity's value."},{"nt":{"$def":"NT-EntityValue","_":"EntityValue"},"rfc2119":["MUST","MUST","MUST","MUST"],"termref":[{"$def":"dt-include","_":"included"},{"$def":"inliteral","_":"included in literal"}],"emph":"replacement\ntext","_":"The literal entity value as given in an internal entity declaration () may contain character, parameter-entity,\nand general-entity references. Such referencesbe contained entirely\nwithin the literal entity value. The actual replacement text that is(or) as described abovecontain theof any parameter entities referred to, andcontain the character\nreferred to, in place of any character references in the literal entity value;\nhowever, general-entity referencesbe left as-is, unexpanded. For example,\ngiven the following declarations:"},{"quote":{"code":"book"},"_":"then the replacement text for the entityis:"},{"quote":[{"code":"&rights;"},{"code":"&book;"}],"_":"The general-entity referencewould\nbe expanded should the referenceappear\nin the document's content or an attribute value."},{"specref":{"$ref":"sec-entexpand"},"_":"These simple rules may have complex interactions; for a detailed discussion\nof a difficult example, see."}],"eg":[{"$xml:lang":"fr","_":"<!ENTITY % pub    \"&#xc9;ditions Gallimard\" >\n<!ENTITY   rights \"All rights reserved\" >\n<!ENTITY   book   \"La Peste: Albert Camus,\n&#xA9; 1947 %pub;. &rights;\" >"},{"$xml:lang":"fr","_":"La Peste: Albert Camus,\n¬© 1947 √âditions Gallimard. &rights;"}],"$id":"intern-replacement"},{"head":"Predefined Entities","p":[{"termdef":{"term":"escape","code":["amp","lt","gt","apos","quot","<","&"],"rfc2119":"MUST","quote":[{"code":"&#60;"},{"code":"&#38;"}],"$id":"dt-escape","$term":"escape","_":"Entity and character references may\nboth be used tothe left angle bracket, ampersand, and\nother delimiters. A set of general entities (,,,,) is specified for\nthis purpose. Numeric character references may also be used; they are expanded\nimmediately when recognized andbe treated as character data, so the\nnumeric character referencesandmay be used to escapeandwhen they occur\nin character data."}},{"rfc2119":["MUST","SHOULD","MUST","REQUIRED","MUST","OPTIONAL"],"termref":{"$def":"dt-interop","_":"For interoperability"},"code":["lt","amp","gt","apos","quot"],"_":"All XML processorsrecognize these entities whether they are declared\nor not., valid XML\ndocumentsdeclare these entities, like any others, before using them. If\nthe entitiesorare declared, theybe\ndeclared as internal entities whose replacement text is a character reference\nto the respective\ncharacter (less-than sign or ampersand) being escaped; the double\nescaping isfor these entities so that references to them produce\na well-formed result. If the entities,,\norare declared, theybe declared as internal entities\nwhose replacement text is the single character being escaped (or a character\nreference to that character; the double escaping here isbut harmless).\nFor example:"}],"eg":"<!ENTITY lt     \"&#38;#60;\">\n<!ENTITY gt     \"&#62;\">\n<!ENTITY amp    \"&#38;#38;\">\n<!ENTITY apos   \"&#39;\">\n<!ENTITY quot   \"&#34;\">","$id":"sec-predefined-ent"},{"head":"Notation Declarations","p":[{"termdef":{"term":"Notations","termref":[{"$def":"dt-unparsed","_":"unparsed entities"},{"$def":"dt-pi","_":"processing instruction"}],"$id":"dt-notation","$term":"Notation","_":"identify\nby name the format of,\nthe format of elements which bear a notation attribute, or the application\nto which ais addressed."}},{"termdef":{"term":"Notation declarations","$id":"dt-notdecl","$term":"Notation Declaration","_":"provide a name for the notation, for use in entity and attribute-list declarations\nand in attribute specifications, and an external identifier for the notation\nwhich may allow an XML processor or its client application to locate a helper\napplication capable of processing data in the given notation."}},{"rfc2119":["MUST","MAY"],"termref":{"$def":"dt-sysid","_":"system identifier"},"_":"XML processorsprovide applications with the name and external identifier(s)\nof any notation declared and referred to in an attribute value, attribute\ndefinition, or entity declaration. Theyadditionally resolve the external\nidentifier into the, file\nname, or other information needed to allow the application to call a processor\nfor data in the notation described. (It is not an error, however, for XML\ndocuments to declare and refer to notations for which notation-specific applications\nare not available on the system where the XML processor or application is\nrunning.)"}],"scrap":{"head":"Notation Declarations","prod":[{"lhs":"NotationDecl","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-Name","_":"Name"},{"$def":"NT-S","_":"S"},{"$def":"NT-ExternalID","_":"ExternalID"},{"$def":"NT-PublicID","_":"PublicID"},{"$def":"NT-S","_":"S"}],"_":"'<!NOTATION'(|)? '>'"},"vc":{"$def":"UniqueNotationName"},"$id":"NT-NotationDecl","$num":"82"},{"lhs":"PublicID","rhs":{"nt":[{"$def":"NT-S","_":"S"},{"$def":"NT-PubidLiteral","_":"PubidLiteral"}],"_":"'PUBLIC'"},"$id":"NT-PublicID","$num":"83"}],"$lang":"ebnf"},"vcnote":{"head":"Unique Notation Name","p":{"nt":{"$def":"NT-Name","_":"Name"},"rfc2119":"MUST NOT","_":"A givenbe declared in more than one notation declaration."},"$id":"UniqueNotationName"},"$id":"Notations"},{"head":"Document Entity","p":{"termdef":{"term":"document entity","termref":{"$def":"dt-xml-proc","_":"XML processor"},"$id":"dt-docent","$term":"Document Entity","_":"Theserves as the root of the entity tree and a starting-point for an."},"_":"This specification does\nnot specify how the document entity is to be located by an XML processor;\nunlike other entities, the document entity has no name and might well appear\non a processor input stream without any identification at all."},"$id":"sec-doc-entity"}],"$id":"sec-physical-struct"},{"head":"Conformance","div2":[{"head":"Validating and Non-Validating Processors","p":[{"termref":{"$def":"dt-xml-proc","_":"XML processors"},"_":"Conformingfall into\ntwo classes: validating and non-validating."},{"rfc2119":"MUST","termref":[{"$def":"dt-docent","_":"document entity"},{"$def":"dt-parsedent","_":"parsed\nentities"}],"_":"Validating and non-validating processors alikereport violations of\nthis specification's well-formedness constraints in the content of theand any otherthat they read."},{"termdef":{"term":"Validating\nprocessors","rfc2119":"MUST","termref":{"$def":"dt-doctype","_":"DTD"},"$id":"dt-validating","$term":"Validating Processor","_":",\nat user option, report violations of the constraints expressed by\nthe declarations in the, and failures\nto fulfill the validity constraints given in this specification."},"rfc2119":"MUST","_":"To accomplish this, validating XML processorsread and process the entire\nDTD and all external parsed entities referenced in the document."},{"rfc2119":["REQUIRED","MUST NOT","MUST"],"termref":[{"$def":"dt-docent","_":"document\nentity"},{"$def":"dt-use-mdecl","_":"process"},{"$def":"dt-entdecl","_":"entity\ndeclarations"},{"$def":"dt-attdecl","_":"attribute-list declarations"}],"termdef":{"rfc2119":["REQUIRED","MUST"],"term":"process","emph":"not","titleref":[{"$href":"#AVNormalize","_":"normalize"},{"$href":"#included","_":"include"},{"$href":"#sec-attr-defaults","_":"default\nattribute values"}],"$id":"dt-use-mdecl","$term":"Process Declarations","_":"While they are not required\nto check the document for validity, they aretoall the declarations they read in the internal DTD subset and in any parameter\nentity that they read, up to the first reference to a parameter entity that\nthey doread; that is to say, theyuse the information\nin those declarations toattribute values,the replacement\ntext of internal entities, and supply."},"code":["standalone=\"yes\"","standalone=\"yes\""],"_":"Non-validating processors areto check only the, including the entire internal DTD subset, for well-formedness.Except when, theyorencountered after a reference to a parameter entity that is not read, since\nthe entity may have contained overriding declarations; when, processorsprocess these declarations."},"Note that when processing invalid documents with a non-validating\nprocessor the application may not be presented with consistent\ninformation.  For example, several requirements for uniqueness\nwithin the document may not be met, including more than one element\nwith the same id, duplicate declarations of elements or notations\nwith the same name, etc.  In these cases the behavior of the parser\nwith respect to reporting such information to the application is\nundefined."],"$id":"proc-types"},{"head":"Using XML Processors","p":["The behavior of a validating XML processor is highly predictable; it must\nread every piece of a document and report all well-formedness and validity\nviolations. Less is required of a non-validating processor; it need not read\nany part of the document other than the document entity. This has two effects\nthat may be important to users of XML processors:",{"rfc2119":["SHOULD NOT","SHOULD"],"_":"For maximum reliability in interoperating between different XML processors,\napplications which use non-validating processorsrely on any behaviors\nnot required of such processors. Applications which require DTD facilities not related to validation (such\nas the declaration of default attributes and internal entities that are or may be specified in\nexternal entities)use validating XML processors."}],"ulist":{"item":[{"p":{"titleref":[{"$href":"#wf-entdeclared","_":"Entity Declared"},{"$href":"#textent","_":"Parsed Entity"},{"$href":"#norecursion","_":"No\nRecursion"},{"$href":"#forbidden","_":"forbidden"}],"specref":{"$ref":"entproc"},"_":"Certain well-formedness errors, specifically those that require reading\nexternal entities, may fail to be detected by a non-validating processor. Examples\ninclude the constraints entitled,, and, as well as some of the cases described asin."}},{"p":{"titleref":[{"$href":"#AVNormalize","_":"normalize"},{"$href":"#included","_":"include"},{"$href":"#sec-attr-defaults","_":"default\nattribute values"}],"phrase":{"loc":{"$role":"erratumref","$href":"E04"},"$diff":"add","_":", or in the internal subset after an unread \nparameter entity reference"},"_":"The information passed from the processor to the application may\nvary, depending on whether the processor reads parameter and external entities.\nFor example, a non-validating processor may fail toattribute values,the replacement\ntext of internal entities, or supply, where doing so depends on having read declarations\nin external or parameter entities."}}]},"$id":"safe-behavior"}],"$id":"sec-conformance"},{"head":"Notation","p":["The formal grammar of XML is given in this specification using a simple\nExtended Backus-Naur Form (EBNF) notation. Each rule in the grammar defines\none symbol, in the form","Symbols are written with an initial capital letter if they are the\nstart symbol of a regular language, otherwise with an initial lowercase letter.\nLiteral strings are quoted.",{"glist":[{"gitem":[{"label":{"code":"#xN"},"def":{"p":{"code":["N","N","#xN"],"_":"whereis a hexadecimal integer, the expression matches the character\nwhose number\n(code point) in ISO/IEC 10646 is. The number of leading zeros in theform is insignificant."}}},{"label":{"code":["[a-zA-Z]","[#xN-#xN]"],"_":","},"def":{"p":{"nt":{"$def":"NT-Char","_":"Char"},"_":"matches anywith a value in the range(s) indicated (inclusive)."}}},{"label":{"code":["[abc]","[#xN#xN#xN]"],"_":","},"def":{"p":{"nt":{"$def":"NT-Char","_":"Char"},"_":"matches anywith a value among the characters\nenumerated. Enumerations and ranges can be mixed in one set of brackets."}}},{"label":{"code":["[^a-z]","[^#xN-#xN]"],"_":","},"def":{"p":{"nt":{"$def":"NT-Char","_":"Char"},"emph":"outside","_":"matches anywith a valuethe range\nindicated."}}},{"label":{"code":["[^abc]","[^#xN#xN#xN]"],"_":","},"def":{"p":{"nt":{"$def":"NT-Char","_":"Char"},"_":"matches anywith a value not among the characters given. Enumerations\nand ranges of forbidden values can be mixed in one set of brackets."}}},{"label":{"code":"\"string\""},"def":{"p":{"termref":{"$def":"dt-match","_":"matching"},"_":"matches a literal stringthat\ngiven inside the double quotes."}}},{"label":{"code":"'string'"},"def":{"p":{"termref":{"$def":"dt-match","_":"matching"},"_":"matches a literal stringthat\ngiven inside the single quotes."}}}]},{"gitem":[{"label":{"code":"expression","_":"()"},"def":{"p":{"code":"expression","_":"is treated as a unit and may be combined as described\nin this list."}}},{"label":{"code":"A?"},"def":{"p":{"code":["A","A"],"_":"matchesor nothing; optional."}}},{"label":{"code":"A B"},"def":{"p":{"code":["A","B","A B | C D","(A B) | (C D)"],"_":"matchesfollowed by. This\noperator has higher precedence than alternation; thusis identical to."}}},{"label":{"code":"A | B"},"def":{"p":{"code":["A","B"],"_":"matchesor."}}},{"label":{"code":"A - B"},"def":{"p":{"code":["A","B"],"_":"matches any string that matchesbut does not match."}}},{"label":{"code":"A+"},"def":{"p":{"code":["A","A+ | B+","(A+) | (B+)"],"_":"matches one or more occurrences of. Concatenation\nhas higher precedence than alternation; thusis identical\nto."}}},{"label":{"code":"A*"},"def":{"p":{"code":["A","A* | B*","(A*) | (B*)"],"_":"matches zero or more occurrences of. Concatenation\nhas higher precedence than alternation; thusis identical\nto."}}}]},{"gitem":[{"label":{"code":"/* ... */"},"def":{"p":"comment."}},{"label":{"code":"[ wfc: ... ]"},"def":{"p":{"termref":{"$def":"dt-wellformed","_":"well-formed"},"_":"well-formedness constraint; this identifies by name a constraint ondocuments associated with a production."}}},{"label":{"code":"[ vc: ... ]"},"def":{"p":{"termref":{"$def":"dt-valid","_":"valid"},"_":"validity constraint; this identifies by name a constraint ondocuments associated with a production."}}}]}],"code":["A","B"],"_":"Within the expression on the right-hand side of a rule, the following expressions\nare used to match strings of one or more characters:These symbols may be combined to match more complex patterns as follows,\nwhereandrepresent simple expressions:Other notations used in the productions are:"}],"eg":"symbol ::= expression","$id":"sec-notation"}]},"back":{"div1":[{"head":"References","div2":[{"head":"Normative References","blist":{"bibl":[{"titleref":"Official Names for Character Sets","$id":"IANA","$href":"http://www.iana.org/assignments/character-sets","$key":"IANA-CHARSETS","_":"(Internet\nAssigned Numbers Authority),\ned. Keld Simonsen et al."},{"titleref":"RFC 2119: Key words for use in RFCs to Indicate Requirement Levels","$id":"rfc2119","$href":"http://www.ietf.org/rfc/rfc2119.txt","$key":"IETF RFC 2119","_":"IETF\n(Internet Engineering Task Force)..\nScott Bradner, 1997."},{"loc":{"$role":"erratumref","$href":"E01"},"titleref":{"loc":[{"$href":"http://tools.ietf.org/html/rfc4646","_":"RFC 4646: Tags for Identifying Languages"},{"$href":"http://tools.ietf.org/html/rfc4647","_":"RFC 4647: Matching of Language Tags"}],"_":"BCP 47, consisting of, and"},"$id":"RFC1766","$key":"IETF BCP 47","$diff":"chg","_":"IETF\n                                          (Internet Engineering Task Force).,\n\t\t\t\t\t\tA. Phillips, M. Davis. 2006."},{"titleref":"RFC 3986: Uniform Resource Identifier (URI): Generic Syntax","$id":"rfc3986","$href":"http://www.ietf.org/rfc/rfc3986.txt","$key":"IETF RFC 3986","_":"IETF (Internet Engineering Task Force).. T. Berners-Lee, R. Fielding, L. Masinter. 2005."},{"titleref":["ISO/IEC 10646-1:2000. Information\ntechnology ‚Äî Universal Multiple-Octet Coded Character Set (UCS) ‚Äî\nPart 1: Architecture and Basic Multilingual Plane","ISO/IEC 10646-2:2001.\nInformation technology ‚Äî Universal Multiple-Octet Coded Character Set (UCS) ‚Äî Part 2:\nSupplementary Planes"],"loc":{"$href":"http://www.iso.org/iso/home.htm","_":"http://www.iso.org/iso/home.htm"},"$id":"ISO10646","$key":"ISO/IEC 10646","_":"ISO (International\nOrganization for Standardization).and, as, from time to time, amended, replaced by a new edition or\nexpanded by the addition of new parts. [Geneva]: International Organization for Standardization.\n(Seefor the latest version.)"},{"titleref":"ISO/IEC 10646-1:2000. Information\ntechnology ‚Äî Universal Multiple-Octet Coded Character Set (UCS) ‚Äî\nPart 1: Architecture and Basic Multilingual Plane.","$id":"ISO10646-2000","$key":"ISO/IEC 10646:2000","_":"ISO (International\nOrganization for Standardization).[Geneva]: International\nOrganization for Standardization, 2000."},{"emph":{"phrase":{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"chg","_":"5.0.0,"},"_":"The Unicode\nStandard, Version"},"phrase":[{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"del","_":"Reading, Mass.: Addison-Wesley Developers Press,\n1996"},{"loc":{"$role":"erratumref","$href":"E11"},"$diff":"add","_":"defined by: The Unicode Standard, Version 5.0 (Boston, MA,\nAddison-Wesley, 2007. ISBN 0-321-48091-0)"}],"$id":"Unicode","$key":"Unicode","_":"The Unicode Consortium.."},{"titleref":"Unicode normalization forms","$id":"unipart15","$key":"UnicodeNormal","$href":"http://unicode.org/reports/tr15/","_":"The Unicode\nConsortium..  Mark Davis and\nMartin Durst.  2008."},{"loc":[{"$role":"erratumref","$href":"E11"},{"$href":"http://www.unicode.org/reports/tr27/","_":"http://www.unicode.org/reports/tr27"},{"$href":"http://www.unicode.org/reports/tr28/","_":"http://www.unicode.org/reports/tr28"}],"emph":["The Unicode Standard, Version 3.2","The Unicode Standard, Version 3.0","Unicode\nStandard Annex #27: Unicode 3.1","Unicode Standard Annex #28: Unicode\n3.2"],"$id":"Unicode3","$key":"Unicode3","$diff":"del","_":"The Unicode\nConsortium., defined by:(Reading, MA,\nAddison-Wesley, 2000. ISBN 0-201-61633-5), as amended by the() and the()."}]},"$id":"sec-existing-stds"},{"head":"Other References","blist":{"bibl":[{"titleref":"Compilers: Principles, Techniques, and Tools","$id":"Aho","$key":"Aho/Ullman","_":"Aho, Alfred V., Ravi Sethi, and Jeffrey D.\nUllman..\nReading: Addison-Wesley, 1986, rpt. corr. 1988."},{"titleref":"Formal Models in Document Processing","$id":"ABK","$href":"ftp://ftp.informatik.uni-freiburg.de/documents/papers/brueggem/habil.ps","$key":"Br√ºggemann-Klein","_":"Br√ºggemann-Klein,\nAnne.. Habilitationsschrift. Faculty\nof Mathematics at the University of Freiburg, 1993."},{"titleref":["Deterministic Regular Languages","One-Unambiguous\nRegular Languages"],"$id":"ABKDW","$key":"Br√ºggemann-Klein and Wood","_":"Br√ºggemann-Klein,\nAnne, and Derick Wood..\nUniversit√§t Freiburg, Institut f√ºr Informatik, Bericht 38, Oktober 1991. Extended\nabstract in A. Finkel, M. Jantzen, Hrsg., STACS 1992, S. 173-184. Springer-Verlag,\nBerlin 1992. Lecture Notes in Computer Science 577. Full version titledin Information and Computation 140 (2): 229-253,\nFebruary 1998."},{"titleref":"Comparison of SGML and XML","$id":"Clark","$href":"http://www.w3.org/TR/NOTE-sgml-xml-971215","$key":"Clark","_":"James Clark.."},{"loc":{"$role":"erratumref","$href":"E01"},"titleref":"Registry of Language Tags","$id":"IANA-LANGCODES","$href":"http://www.iana.org/assignments/language-subtag-registry","$key":"IANA-LANGCODES","$diff":"chg","_":"(Internet\nAssigned Numbers Authority)"},{"titleref":"RFC 2141: URN Syntax","$id":"RFC2141","$href":"http://www.ietf.org/rfc/rfc2141.txt","$key":"IETF RFC 2141","_":"IETF\n(Internet Engineering Task Force)., ed.\nR. Moats. 1997."},{"titleref":"RFC 3023: XML Media Types","$id":"rfc2376","$href":"http://www.ietf.org/rfc/rfc3023.txt","$key":"IETF RFC 3023","_":"IETF\n(Internet Engineering Task Force)..\neds. M. Murata, S. St.Laurent, D. Kohn. 2001."},{"titleref":"RFC 2781: UTF-16, an encoding\nof ISO 10646","$id":"rfc2781","$href":"http://www.ietf.org/rfc/rfc2781.txt","$key":"IETF RFC 2781","_":"IETF\n(Internet Engineering Task Force)., ed. P. Hoffman, F. Yergeau. 2000."},{"titleref":"ISO 639:1988 (E).\nCode for the representation of names of languages.","$id":"ISO639","$key":"ISO 639","_":"(International Organization for Standardization).[Geneva]: International\nOrganization for Standardization, 1988."},{"titleref":"ISO 3166-1:1997\n(E). Codes for the representation of names of countries and their subdivisions ‚Äî\nPart 1: Country codes","$id":"ISO3166","$key":"ISO 3166","_":"(International Organization for Standardization).[Geneva]: International Organization for\nStandardization, 1997."},{"titleref":"ISO\n8879:1986(E). Information processing ‚Äî Text and Office Systems ‚Äî\nStandard Generalized Markup Language (SGML).","$id":"ISO8879","$key":"ISO 8879","_":"ISO (International Organization for Standardization).First edition ‚Äî\n1986-10-15. [Geneva]: International Organization for Standardization, 1986."},{"titleref":"ISO/IEC 10744-1992 (E). Information technology ‚Äî\nHypermedia/Time-based Structuring Language (HyTime).","emph":"Extended Facilities\nAnnexe.","$id":"ISO10744","$key":"ISO/IEC 10744","_":"ISO (International Organization for\nStandardization).[Geneva]:\nInternational Organization for Standardization, 1992.[Geneva]: International Organization for Standardization, 1996."},{"titleref":"ISO 8879:1986\nTC2. Information technology ‚Äî Document Description and Processing Languages","$id":"websgml","$href":"http://www.sgmlsource.com/8879/n0029.htm","$key":"WEBSGML","_":"ISO\n(International Organization for Standardization)..\n[Geneva]: International Organization for Standardization, 1998."},{"titleref":"Namespaces in XML","$id":"xml-names","$href":"http://www.w3.org/TR/xml-names/","$key":"XML Names","_":"Tim Bray,\nDave Hollander, and Andrew Layman, editors..\nTextuality, Hewlett-Packard, and Microsoft. World Wide Web Consortium, 1999."}]},"$id":"null"}],"$id":"sec-bibliography"},{"head":"Character Classes","p":[{"loc":[{"$role":"erratumref","$href":"E09"},{"$href":"http://www.w3.org/TR/2006/REC-xml-20060816/","_":"Fourth Edition"}],"nt":[{"$def":"NT-NameStartChar","_":"[4]"},{"$def":"NT-Name","_":"[5]"}],"$diff":"add","_":"Because of changes to productionsand, the productions in\n\t\t\t\tthis Appendix are now orphaned and not used anymore in determining\n\t\t\t\tname characters.  This Appendix may be removed in a future edition of \n\t\t\t\tthis specification; other specifications that wish to refer to the productions herein should\n\t\t\t\tdo so by means of a reference to the relevant production(s) in theof this specification."},"Following the characteristics defined in the Unicode standard, characters\nare classed as base characters (among others, these contain the alphabetic\ncharacters of the Latin alphabet), ideographic characters, and combining characters (among\nothers, this class contains most diacritics). Digits and extenders are also\ndistinguished.","The character classes defined here can be derived from the Unicode 2.0\ncharacter database as follows:"],"scrap":{"head":"Characters","prodgroup":{"prod":[{"lhs":"Letter","rhs":{"nt":[{"$def":"NT-BaseChar","_":"BaseChar"},{"$def":"NT-Ideographic","_":"Ideographic"}],"_":"|"},"$id":"NT-Letter","$num":"84"},{"lhs":"BaseChar","rhs":"[#x0041-#x005A] |¬†[#x0061-#x007A] |¬†[#x00C0-#x00D6]\n|¬†[#x00D8-#x00F6] |¬†[#x00F8-#x00FF] |¬†[#x0100-#x0131] |¬†[#x0134-#x013E]\n|¬†[#x0141-#x0148] |¬†[#x014A-#x017E] |¬†[#x0180-#x01C3] |¬†[#x01CD-#x01F0]\n|¬†[#x01F4-#x01F5] |¬†[#x01FA-#x0217] |¬†[#x0250-#x02A8] |¬†[#x02BB-#x02C1]\n|¬†#x0386 |¬†[#x0388-#x038A] |¬†#x038C |¬†[#x038E-#x03A1]\n|¬†[#x03A3-#x03CE] |¬†[#x03D0-#x03D6] |¬†#x03DA |¬†#x03DC\n|¬†#x03DE |¬†#x03E0 |¬†[#x03E2-#x03F3] |¬†[#x0401-#x040C]\n|¬†[#x040E-#x044F] |¬†[#x0451-#x045C] |¬†[#x045E-#x0481] |¬†[#x0490-#x04C4]\n|¬†[#x04C7-#x04C8] |¬†[#x04CB-#x04CC] |¬†[#x04D0-#x04EB] |¬†[#x04EE-#x04F5]\n|¬†[#x04F8-#x04F9] |¬†[#x0531-#x0556] |¬†#x0559 |¬†[#x0561-#x0586]\n|¬†[#x05D0-#x05EA] |¬†[#x05F0-#x05F2] |¬†[#x0621-#x063A] |¬†[#x0641-#x064A]\n|¬†[#x0671-#x06B7] |¬†[#x06BA-#x06BE] |¬†[#x06C0-#x06CE] |¬†[#x06D0-#x06D3]\n|¬†#x06D5 |¬†[#x06E5-#x06E6] |¬†[#x0905-#x0939] |¬†#x093D\n|¬†[#x0958-#x0961] |¬†[#x0985-#x098C] |¬†[#x098F-#x0990] |¬†[#x0993-#x09A8]\n|¬†[#x09AA-#x09B0] |¬†#x09B2 |¬†[#x09B6-#x09B9] |¬†[#x09DC-#x09DD]\n|¬†[#x09DF-#x09E1] |¬†[#x09F0-#x09F1] |¬†[#x0A05-#x0A0A] |¬†[#x0A0F-#x0A10]\n|¬†[#x0A13-#x0A28] |¬†[#x0A2A-#x0A30] |¬†[#x0A32-#x0A33] |¬†[#x0A35-#x0A36]\n|¬†[#x0A38-#x0A39] |¬†[#x0A59-#x0A5C] |¬†#x0A5E |¬†[#x0A72-#x0A74]\n|¬†[#x0A85-#x0A8B] |¬†#x0A8D |¬†[#x0A8F-#x0A91] |¬†[#x0A93-#x0AA8]\n|¬†[#x0AAA-#x0AB0] |¬†[#x0AB2-#x0AB3] |¬†[#x0AB5-#x0AB9] |¬†#x0ABD\n|¬†#x0AE0 |¬†[#x0B05-#x0B0C] |¬†[#x0B0F-#x0B10] |¬†[#x0B13-#x0B28]\n|¬†[#x0B2A-#x0B30] |¬†[#x0B32-#x0B33] |¬†[#x0B36-#x0B39] |¬†#x0B3D\n|¬†[#x0B5C-#x0B5D] |¬†[#x0B5F-#x0B61] |¬†[#x0B85-#x0B8A] |¬†[#x0B8E-#x0B90]\n|¬†[#x0B92-#x0B95] |¬†[#x0B99-#x0B9A] |¬†#x0B9C |¬†[#x0B9E-#x0B9F]\n|¬†[#x0BA3-#x0BA4] |¬†[#x0BA8-#x0BAA] |¬†[#x0BAE-#x0BB5] |¬†[#x0BB7-#x0BB9]\n|¬†[#x0C05-#x0C0C] |¬†[#x0C0E-#x0C10] |¬†[#x0C12-#x0C28] |¬†[#x0C2A-#x0C33]\n|¬†[#x0C35-#x0C39] |¬†[#x0C60-#x0C61] |¬†[#x0C85-#x0C8C] |¬†[#x0C8E-#x0C90]\n|¬†[#x0C92-#x0CA8] |¬†[#x0CAA-#x0CB3] |¬†[#x0CB5-#x0CB9] |¬†#x0CDE\n|¬†[#x0CE0-#x0CE1] |¬†[#x0D05-#x0D0C] |¬†[#x0D0E-#x0D10] |¬†[#x0D12-#x0D28]\n|¬†[#x0D2A-#x0D39] |¬†[#x0D60-#x0D61] |¬†[#x0E01-#x0E2E] |¬†#x0E30\n|¬†[#x0E32-#x0E33] |¬†[#x0E40-#x0E45] |¬†[#x0E81-#x0E82] |¬†#x0E84\n|¬†[#x0E87-#x0E88] |¬†#x0E8A |¬†#x0E8D |¬†[#x0E94-#x0E97]\n|¬†[#x0E99-#x0E9F] |¬†[#x0EA1-#x0EA3] |¬†#x0EA5 |¬†#x0EA7\n|¬†[#x0EAA-#x0EAB] |¬†[#x0EAD-#x0EAE] |¬†#x0EB0 |¬†[#x0EB2-#x0EB3]\n|¬†#x0EBD |¬†[#x0EC0-#x0EC4] |¬†[#x0F40-#x0F47] |¬†[#x0F49-#x0F69]\n|¬†[#x10A0-#x10C5] |¬†[#x10D0-#x10F6] |¬†#x1100 |¬†[#x1102-#x1103]\n|¬†[#x1105-#x1107] |¬†#x1109 |¬†[#x110B-#x110C] |¬†[#x110E-#x1112]\n|¬†#x113C |¬†#x113E |¬†#x1140 |¬†#x114C |¬†#x114E |¬†#x1150\n|¬†[#x1154-#x1155] |¬†#x1159 |¬†[#x115F-#x1161] |¬†#x1163\n|¬†#x1165 |¬†#x1167 |¬†#x1169 |¬†[#x116D-#x116E] |¬†[#x1172-#x1173]\n|¬†#x1175 |¬†#x119E |¬†#x11A8 |¬†#x11AB |¬†[#x11AE-#x11AF]\n|¬†[#x11B7-#x11B8] |¬†#x11BA |¬†[#x11BC-#x11C2] |¬†#x11EB\n|¬†#x11F0 |¬†#x11F9 |¬†[#x1E00-#x1E9B] |¬†[#x1EA0-#x1EF9]\n|¬†[#x1F00-#x1F15] |¬†[#x1F18-#x1F1D] |¬†[#x1F20-#x1F45] |¬†[#x1F48-#x1F4D]\n|¬†[#x1F50-#x1F57] |¬†#x1F59 |¬†#x1F5B |¬†#x1F5D |¬†[#x1F5F-#x1F7D]\n|¬†[#x1F80-#x1FB4] |¬†[#x1FB6-#x1FBC] |¬†#x1FBE |¬†[#x1FC2-#x1FC4]\n|¬†[#x1FC6-#x1FCC] |¬†[#x1FD0-#x1FD3] |¬†[#x1FD6-#x1FDB] |¬†[#x1FE0-#x1FEC]\n|¬†[#x1FF2-#x1FF4] |¬†[#x1FF6-#x1FFC] |¬†#x2126 |¬†[#x212A-#x212B]\n|¬†#x212E |¬†[#x2180-#x2182] |¬†[#x3041-#x3094] |¬†[#x30A1-#x30FA]\n|¬†[#x3105-#x312C] |¬†[#xAC00-#xD7A3]","$id":"NT-BaseChar","$num":"85"},{"lhs":"Ideographic","rhs":"[#x4E00-#x9FA5] |¬†#x3007 |¬†[#x3021-#x3029]","$id":"NT-Ideographic","$num":"86"},{"lhs":"CombiningChar","rhs":"[#x0300-#x0345] |¬†[#x0360-#x0361] |¬†[#x0483-#x0486]\n|¬†[#x0591-#x05A1] |¬†[#x05A3-#x05B9] |¬†[#x05BB-#x05BD] |¬†#x05BF\n|¬†[#x05C1-#x05C2] |¬†#x05C4 |¬†[#x064B-#x0652] |¬†#x0670\n|¬†[#x06D6-#x06DC] |¬†[#x06DD-#x06DF] |¬†[#x06E0-#x06E4] |¬†[#x06E7-#x06E8]\n|¬†[#x06EA-#x06ED] |¬†[#x0901-#x0903] |¬†#x093C |¬†[#x093E-#x094C]\n|¬†#x094D |¬†[#x0951-#x0954] |¬†[#x0962-#x0963] |¬†[#x0981-#x0983]\n|¬†#x09BC |¬†#x09BE |¬†#x09BF |¬†[#x09C0-#x09C4] |¬†[#x09C7-#x09C8]\n|¬†[#x09CB-#x09CD] |¬†#x09D7 |¬†[#x09E2-#x09E3] |¬†#x0A02\n|¬†#x0A3C |¬†#x0A3E |¬†#x0A3F |¬†[#x0A40-#x0A42] |¬†[#x0A47-#x0A48]\n|¬†[#x0A4B-#x0A4D] |¬†[#x0A70-#x0A71] |¬†[#x0A81-#x0A83] |¬†#x0ABC\n|¬†[#x0ABE-#x0AC5] |¬†[#x0AC7-#x0AC9] |¬†[#x0ACB-#x0ACD] |¬†[#x0B01-#x0B03]\n|¬†#x0B3C |¬†[#x0B3E-#x0B43] |¬†[#x0B47-#x0B48] |¬†[#x0B4B-#x0B4D]\n|¬†[#x0B56-#x0B57] |¬†[#x0B82-#x0B83] |¬†[#x0BBE-#x0BC2] |¬†[#x0BC6-#x0BC8]\n|¬†[#x0BCA-#x0BCD] |¬†#x0BD7 |¬†[#x0C01-#x0C03] |¬†[#x0C3E-#x0C44]\n|¬†[#x0C46-#x0C48] |¬†[#x0C4A-#x0C4D] |¬†[#x0C55-#x0C56] |¬†[#x0C82-#x0C83]\n|¬†[#x0CBE-#x0CC4] |¬†[#x0CC6-#x0CC8] |¬†[#x0CCA-#x0CCD] |¬†[#x0CD5-#x0CD6]\n|¬†[#x0D02-#x0D03] |¬†[#x0D3E-#x0D43] |¬†[#x0D46-#x0D48] |¬†[#x0D4A-#x0D4D]\n|¬†#x0D57 |¬†#x0E31 |¬†[#x0E34-#x0E3A] |¬†[#x0E47-#x0E4E]\n|¬†#x0EB1 |¬†[#x0EB4-#x0EB9] |¬†[#x0EBB-#x0EBC] |¬†[#x0EC8-#x0ECD]\n|¬†[#x0F18-#x0F19] |¬†#x0F35 |¬†#x0F37 |¬†#x0F39 |¬†#x0F3E\n|¬†#x0F3F |¬†[#x0F71-#x0F84] |¬†[#x0F86-#x0F8B] |¬†[#x0F90-#x0F95]\n|¬†#x0F97 |¬†[#x0F99-#x0FAD] |¬†[#x0FB1-#x0FB7] |¬†#x0FB9\n|¬†[#x20D0-#x20DC] |¬†#x20E1 |¬†[#x302A-#x302F] |¬†#x3099\n|¬†#x309A","$id":"NT-CombiningChar","$num":"87"},{"lhs":"Digit","rhs":"[#x0030-#x0039] |¬†[#x0660-#x0669] |¬†[#x06F0-#x06F9]\n|¬†[#x0966-#x096F] |¬†[#x09E6-#x09EF] |¬†[#x0A66-#x0A6F] |¬†[#x0AE6-#x0AEF]\n|¬†[#x0B66-#x0B6F] |¬†[#x0BE7-#x0BEF] |¬†[#x0C66-#x0C6F] |¬†[#x0CE6-#x0CEF]\n|¬†[#x0D66-#x0D6F] |¬†[#x0E50-#x0E59] |¬†[#x0ED0-#x0ED9] |¬†[#x0F20-#x0F29]","$id":"NT-Digit","$num":"88"},{"lhs":"Extender","rhs":"#x00B7 |¬†#x02D0 |¬†#x02D1 |¬†#x0387 |¬†#x0640\n|¬†#x0E46 |¬†#x0EC6 |¬†#x3005 |¬†[#x3031-#x3035] |¬†[#x309D-#x309E]\n|¬†[#x30FC-#x30FE]","$id":"NT-Extender","$num":"89"}],"$pcw3":"3","$pcw4":"15"},"$id":"CHARACTERS","$lang":"ebnf"},"ulist":{"item":[{"p":"Name start characters must have one of the categories Ll, Lu, Lo,\nLt, Nl."},{"p":"Name characters other than Name-start characters must have one of\nthe categories Mc, Me, Mn, Lm, or Nd."},{"p":"Characters in the compatibility area (i.e. with character code greater\nthan #xF900 and less than #xFFFE) are not allowed in XML names."},{"p":{"quote":["compatibility formatting tag","<"],"_":"Characters which have a font or compatibility decomposition (i.e.\nthose with ain field 5 of the\ndatabase -- marked by field 5 beginning with a) are not\nallowed."}},{"p":"The following characters are treated as name-start characters rather\nthan name characters, because the property file classifies them as Alphabetic:\n[#x02BB-#x02C1], #x0559, #x06E5, #x06E6."},{"p":"Characters #x20DD-#x20E0 are excluded (in accordance with Unicode 2.0,\nsection 5.14)."},{"p":"Character #x00B7 is classified as an extender, because the property\nlist so identifies it."},{"p":"Character #x0387 is added as a name character, because #x00B7 is\nits canonical equivalent."},{"p":"Characters ':' and '_' are allowed as name-start characters."},{"p":"Characters '-' and '.' are allowed as name characters."}]},"$id":"CharClasses"}],"inform-div1":[{"head":"XML and SGML","p":{"bibref":{"$ref":"Clark"},"_":"XML\nis designed to be a subset of SGML, in that every XML document should also\nbe a conforming SGML document. For a detailed comparison of the additional\nrestrictions that XML places on documents beyond those of SGML, see."},"$id":"sec-xml-and-sgml"},{"head":"Expansion of Entity and Character References","p":[{"specref":{"$ref":"entproc"},"_":"This appendix contains some examples illustrating the sequence of entity-\nand character-reference recognition and expansion, as specified in."},"If the DTD contains the declaration",{"quote":{"code":"example"},"_":"then the XML processor will recognize the character references when it\nparses the entity declaration, and resolve them before storing the following\nstring as the value of the entity:"},{"quote":{"code":"&example;"},"el":["p","p"],"_":"A reference in the document towill cause the text to be reparsed, at which time the start- and end-tags\nof theelement will be recognized and the three references will\nbe recognized and expanded, resulting in aelement with the following\ncontent (all data, no delimiters or markup):"},"A more complex example will illustrate the rules and their effects fully.\nIn the following example, the line numbers are solely for reference.","This produces the following:",{"loc":{"$role":"erratumref","$href":"E07"},"$diff":"add","_":"In the following example"},{"loc":{"$role":"erratumref","$href":"E07"},"titleref":{"$href":"#bypass","_":"bypassed"},"specref":{"$ref":"sec-predefined-ent"},"$diff":"add","_":"the replacement text of x is the four characters \"&lt;\" because\n\t\t\t\treferences to general entities in entity values are.\n\t\t\t\tThe replacement text of lt is a character reference to\n\t\t\t\tthe less-than character, for example the five characters \"&#60;\"\n\t\t\t\t(see).  Since neither of these contains a less-than character\n\t\t\t\tthe result is well-formed."},{"loc":{"$role":"erratumref","$href":"E07"},"$diff":"add","_":"If the definition of x had been"},{"loc":{"$role":"erratumref","$href":"E07"},"titleref":{"$href":"#CleanAttrVals","_":"WFC: No < in Attribute Values"},"$diff":"add","_":"then the document would not have been well-formed, because the\n\t\t\t\treplacement text of x would be the single character \"<\" which\n\t\t\t\tis not permitted in attribute values (see)."}],"eg":["<!ENTITY example \"<p>An ampersand (&#38;#38;) may be escaped\nnumerically (&#38;#38;#38;) or with a general entity\n(&amp;amp;).</p>\" >","<p>An ampersand (&#38;) may be escaped\nnumerically (&#38;#38;) or with a general entity\n(&amp;amp;).</p>","An ampersand (&) may be escaped\nnumerically (&#38;) or with a general entity\n(&amp;).","1 <?xml version='1.0'?>\n2 <!DOCTYPE test [\n3 <!ELEMENT test (#PCDATA) >\n4 <!ENTITY % xx '&#37;zz;'>\n5 <!ENTITY % zz '&#60;!ENTITY tricky \"error-prone\" >' >\n6 %xx;\n7 ]>\n8 <test>This sample shows a &tricky; method.</test>",{"loc":{"$role":"erratumref","$href":"E07"},"$diff":"add","_":"<!DOCTYPE foo [ \n<!ENTITY x \"&lt;\"> \n]> \n<foo attr=\"&x;\"/>"},{"loc":{"$role":"erratumref","$href":"E07"},"$diff":"add","_":"<!ENTITY x \"&#60;\">"}],"ulist":{"item":[{"p":{"quote":[{"code":"xx"},{"code":"%zz;"},{"code":"zz"},{"code":"zz"}],"_":"in line 4, the reference to character 37 is expanded immediately,\nand the parameter entityis stored in the symbol\ntable with the value. Since the replacement\ntext is not rescanned, the reference to parameter entityis not recognized. (And it would be an error if it were, sinceis not yet declared.)"}},{"p":{"quote":[{"code":"&#60;"},{"code":"zz"},{"code":"<!ENTITY tricky \"error-prone\"\n>"}],"_":"in line 5, the character referenceis expanded immediately and the parameter entityis stored with the replacement text, which is a well-formed entity declaration."}},{"p":{"quote":[{"code":"xx"},{"code":"xx"},{"code":"%zz;"},{"code":"zz"},{"code":"<!ENTITY tricky \"error-prone\"\n>"},{"code":"tricky"},{"code":"error-prone"}],"_":"in line 6, the reference tois recognized,\nand the replacement text of(namely)\nis parsed. The reference tois recognized in\nits turn, and its replacement text () is parsed. The general entityhas now been declared, with the replacement text."}},{"p":{"quote":{"code":"tricky"},"el":"test","emph":"This sample\nshows a error-prone method.","_":"in line 8, the reference to the general entityis recognized, and it is expanded, so the full content of theelement is the self-describing (and ungrammatical) string"}}],"$spacing":"compact"},"$id":"sec-entexpand"},{"head":"Deterministic Content Models","p":[{"specref":{"$ref":"sec-element-content"},"termref":{"$def":"dt-compat","_":"for compatibility"},"quote":"unambiguous","_":"As\nnoted in, it is required that content\nmodels in element type declarations be deterministic. This requirement iswith SGML (which calls deterministic\ncontent models); XML processors built\nusing SGML systems may flag non-deterministic content models as errors."},{"code":["((b, c) | (b, d))","(b,\n(c | d))"],"el":["b","b","b","b","b","c","d"],"_":"For example, the content modelis non-deterministic,\nbecause given an initialthe XML processor\ncannot know whichin the model is being matched without looking\nahead to see which element follows the. In this case, the two references\ntocan be collapsed into a single reference, making the model read. An initialnow clearly matches only a single name\nin the content model. The processor doesn't need to look ahead to see what follows; eitherorwould be accepted."},{"bibref":{"$ref":"Aho"},"_":"More formally: a finite state automaton may be constructed from the content\nmodel using the standard algorithms, e.g. algorithm 3.5 in section 3.9 of\nAho, Sethi, and Ullman. In many such algorithms, a follow\nset is constructed for each position in the regular expression (i.e., each\nleaf node in the syntax tree for the regular expression); if any position\nhas a follow set in which more than one following position is labeled with\nthe same element type name, then the content model is in error and may be\nreported as an error."},{"bibref":{"$ref":"ABK"},"_":"Algorithms exist which allow many but not all non-deterministic content\nmodels to be reduced automatically to equivalent deterministic models; see\nBr√ºggemann-Klein 1991."}],"$id":"determinism"},{"head":"Autodetection of Character Encodings","p":{"phrase":[{"loc":{"$role":"erratumref","$href":"E05"},"$diff":"add","_":"will"},{"loc":{"$role":"erratumref","$href":"E05"},"$diff":"del","_":"the first case first."},{"loc":{"$role":"erratumref","$href":"E05"},"$diff":"add","_":"these cases in turn."}],"_":"The XML encoding declaration functions as an internal label on each entity,\nindicating which character encoding is in use. Before an XML processor can\nread the internal label, however, it apparently has to know what character\nencoding is in use‚Äîwhich is what the internal label is trying to indicate.\nIn the general case, this is a hopeless situation. It is not entirely hopeless\nin XML, however, because XML limits the general case in two ways: each implementation\nis assumed to support only a finite set of character encodings, and the XML\nencoding declaration is restricted in position and content in order to make\nit feasible to autodetect the character encoding in use in each entity in\nnormal cases. Also, in many cases other sources of information are available\nin addition to the XML data stream itself. Two cases may be distinguished,\ndepending on whether the XML entity is presented to the processor without,\nor with, any accompanying (external) information. Weconsider"},"div2":[{"head":"Detection Without External Encoding Information","p":[{"code":"<?xml","quote":[{"code":"#x0000003C"},{"code":"#x0000003F"},{"code":"#xFEFF"}],"var":["##","##"],"_":"Because each XML entity not accompanied by external\nencoding information and not in UTF-8 or UTF-16 encoding must\nbegin with an XML encoding declaration, in which the first characters must\nbe '', any conforming processor can detect, after two\nto four octets of input, which of the following cases apply. In reading this\nlist, it may help to know that in UCS-4, '<' isand '?' is, and the Byte Order Mark\nrequired of UTF-16 data streams is. The notationis used to denote any byte value except that two consecutives cannot be both 00."},"With a Byte Order Mark:","Without a Byte Order Mark:","This level of autodetection is enough to read the XML encoding declaration\nand parse the character-encoding identifier, which is still necessary to distinguish\nthe individual members of each family of encodings (e.g. to tell UTF-8 from\n8859, and the parts of 8859 from each other, or to distinguish the specific\nEBCDIC code page in use, and so on).","Because the contents of the encoding declaration are restricted to characters\nfrom the ASCII repertoire (however encoded),\na processor can reliably read the entire encoding declaration as soon as it\nhas detected which family of encodings is in use. Since in practice, all widely\nused character encodings fall into one of the categories above, the XML encoding\ndeclaration allows reasonably reliable in-band labeling of character encodings,\neven when external sources of information at the operating-system or transport-protocol\nlevel are unreliable. Character encodings such as UTF-7\nthat make overloaded usage of ASCII-valued bytes may fail to be reliably detected.","Once the processor has detected the character encoding in use, it can act\nappropriately, whether by invoking a separate input routine for each case,\nor by calling the proper conversion function on each character of input.","Like any self-labeling system, the XML encoding declaration will not work\nif any software changes the entity's character set or encoding without updating\nthe encoding declaration. Implementors of character-encoding routines should\nbe careful to ensure the accuracy of the internal and external information\nused to label the entity."],"table":[{"tbody":{"tr":[{"td":[{"code":"00 00 FE\nFF"},"UCS-4, big-endian machine (1234 order)"]},{"td":[{"code":"FF\nFE 00 00"},"UCS-4, little-endian machine (4321 order)"]},{"td":[{"code":"00 00 FF FE"},"UCS-4, unusual octet order (2143)"]},{"td":[{"code":"FE FF 00 00"},"UCS-4, unusual octet order (3412)"]},{"td":[{"code":"FE FF ## ##"},"UTF-16, big-endian"]},{"td":[{"code":"FF FE ## ##"},"UTF-16, little-endian"]},{"td":[{"code":"EF BB BF"},"UTF-8"]}]},"$border":"1","$frame":"border"},{"tbody":{"tr":[{"td":[{"code":"00¬†00¬†00¬†3C"},{"$rowspan":"4","_":"UCS-4 or other encoding with a 32-bit code unit and ASCII\ncharacters encoded as ASCII values, in respectively big-endian (1234), little-endian\n(4321) and two unusual byte orders (2143 and 3412). The encoding declaration\nmust be read to determine which of UCS-4 or other supported 32-bit encodings\napplies."}]},{"td":{"code":"3C 00 00 00"}},{"td":{"code":"00 00 3C 00"}},{"td":{"code":"00 3C 00 00"}},{"td":[{"code":"00 3C 00 3F"},"UTF-16BE or big-endian ISO-10646-UCS-2\nor other encoding with a 16-bit code unit in big-endian order and ASCII characters\nencoded as ASCII values (the encoding declaration must be read to determine\nwhich)"]},{"td":[{"code":"3C 00 3F 00"},"UTF-16LE or little-endian\nISO-10646-UCS-2 or other encoding with a 16-bit code unit in little-endian\norder and ASCII characters encoded as ASCII values (the encoding declaration\nmust be read to determine which)"]},{"td":[{"code":"3C 3F 78 6D"},"UTF-8, ISO 646, ASCII, some part of ISO 8859, Shift-JIS, EUC, or any other\n7-bit, 8-bit, or mixed-width encoding which ensures that the characters of\nASCII have their normal positions, width, and values; the actual encoding\ndeclaration must be read to detect which of these applies, but since all of\nthese encodings use the same bit patterns for the relevant ASCII characters,\nthe encoding declaration itself may be read reliably"]},{"td":[{"code":"4C\n6F A7 94"},"EBCDIC (in some flavor; the full encoding declaration\nmust be read to tell which code page is in use)"]},{"td":["Other","UTF-8 without an encoding declaration, or else the data stream is mislabeled\n(lacking a required encoding declaration), corrupt, fragmentary, or enclosed\nin a wrapper of some kind"]}]},"$border":"1","$frame":"border"}],"note":{"p":"In cases above which do not require reading the encoding declaration to\ndetermine the encoding, section 4.3.3 still requires that the encoding declaration,\nif present, be read and that the encoding name be checked to match the actual\nencoding of the entity. Also, it is possible that new character encodings\nwill be invented that will make it necessary to use the encoding declaration\nto determine the encoding, in cases where this is not required at present."},"$id":"sec-guessing-no-ext-info"},{"head":"Priorities in the Presence of External Encoding Information","p":{"bibref":{"$ref":"rfc2376"},"code":["text/xml","application/xml"],"_":"The second possible case occurs when the XML entity is accompanied by encoding\ninformation, as in some file systems and some network protocols. When multiple\nsources of information are available, their relative priority and the preferred\nmethod of handling conflict should be specified as part of the higher-level\nprotocol used to deliver XML. In particular, please refer\ntoor its successor, which defines theandMIME types and provides some useful guidance.\nIn the interests of interoperability, however, the following rule is recommended."},"ulist":{"item":{"p":"If an XML entity is in a file, the Byte-Order Mark and encoding declaration are used\n(if present) to determine the character encoding."}},"$id":"sec-guessing-with-ext-info"}],"$id":"sec-guessing"},{"head":"W3C XML Working Group","p":"This specification was prepared and approved for publication by the W3C\nXML Working Group (WG). WG approval of this specification does not necessarily\nimply that all WG members voted for its approval. The current and former\nparticipants of the XML WG are:","orglist":{"member":[{"name":"Jon Bosak","affiliation":"Sun","role":"Chair"},{"name":"James Clark","role":"Technical Lead"},{"name":"Tim Bray","affiliation":"Textuality and Netscape","role":"XML Co-editor"},{"name":"Jean Paoli","affiliation":"Microsoft","role":"XML Co-editor"},{"name":"C. M. Sperberg-McQueen","affiliation":"U. of Ill.","role":"XML Co-editor"},{"name":"Dan Connolly","affiliation":"W3C","role":"W3C Liaison"},{"name":"Paula Angerstein","affiliation":"Texcel"},{"name":"Steve DeRose","affiliation":"INSO"},{"name":"Dave Hollander","affiliation":"HP"},{"name":"Eliot Kimber","affiliation":"ISOGEN"},{"name":"Eve Maler","affiliation":"ArborText"},{"name":"Tom Magliery","affiliation":"NCSA"},{"name":"Murray Maloney","affiliation":"SoftQuad, Grif SA, Muzmo and Veo Systems"},{"name":"MURATA Makoto (FAMILY Given)","affiliation":"Fuji Xerox Information Systems"},{"name":"Joel Nava","affiliation":"Adobe"},{"name":"Conleth O'Connell","affiliation":"Vignette"},{"name":"Peter Sharpe","affiliation":"SoftQuad"},{"name":"John Tigue","affiliation":"DataChannel"}]},"$id":"sec-xml-wg"},{"head":"W3C XML Core Working Group","p":{"phrase":{"$diff":"chg","_":"fifth"},"_":"Theedition of this specification was prepared by the W3C XML Core\nWorking Group (WG). The participants in the WG at the time of publication of this\nedition were:"},"orglist":{"member":[{"name":"John Cowan","affiliation":"Google"},{"name":"Andrew Fang","affiliation":"PTC-Arbortext"},{"name":"Paul Grosso","affiliation":"PTC-Arbortext","role":"Co-Chair"},{"name":"Konrad Lanz","affiliation":"A-SIT"},{"name":"Glenn Marcy","affiliation":"IBM"},{"name":"Henry Thompson","affiliation":"W3C","role":"Staff Contact"},{"name":"Richard Tobin","affiliation":"University of Edinburgh"},{"name":"Daniel Veillard"},{"name":"Norman Walsh","affiliation":"Mark Logic","role":"Co-Chair"},{"name":"Fran√ßois Yergeau"}]},"$id":"sec-core-wg"},{"head":"Production Notes","p":{"loc":[{"$href":"http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd","_":"XMLspec DTD, v2.10"},{"$href":"http://www.w3.org/2002/xmlspec/xhtml/1.13/xmlspec.xsl","_":"xmlspec.xsl"},{"$href":"http://www.w3.org/2002/xmlspec/xhtml/1.13/diffspec.xsl","_":"diffspec.xsl"},{"$href":"REC-xml.xsl","_":"REC-xml.xsl"}],"$diff":"chg","_":"This edition was encoded in a\nslightly modified version of the.\nThe XHTML versions were produced with a combination of the,,\nandXSLT stylesheets."},"$id":"prod-notes"},{"head":{"loc":{"$role":"erratumref","$href":"E09"},"_":"Suggestions for XML Names"},"p":[{"loc":{"$role":"erratumref","$href":"E09"},"_":"The following suggestions define what is believed to be best\n\t\t\t\tpractice in the construction of XML names used as element names,\n\t\t\t\tattribute names, processing instruction targets, entity names,\n\t\t\t\tnotation names, and the values of attributes of type ID, and are\n\t\t\t\tintended as guidance for document authors and schema designers.\n\t\t\t\tAll references to Unicode are understood with respect to\n\t\t\t\ta particular version of the Unicode Standard greater than or equal\n\t\t\t\tto 5.0; which version should be used is left to the discretion of\n\t\t\t\tthe document author or schema designer."},{"bibref":{"$ref":"Unicode"},"_":"The first two suggestions are directly derived from the rules\n\t\t\t\tgiven for identifiers in Standard Annex #31 (UAX #31) of the Unicode Standard, version 5.0, and\n\t\t\t\texclude all control characters, enclosing nonspacing marks,\n\t\t\t\tnon-decimal numbers, private-use characters, punctuation characters\n\t\t\t\t(with the noted exceptions), symbol characters, unassigned\n\t\t\t\tcodepoints, and white space characters. The other suggestions\n\t\t\t\tare mostly derived from Appendix B in previous editions of this specification."}],"olist":{"item":[{"p":"The first character of any name should have a Unicode property\n\t\t\t\t\t\tof ID_Start, or else be '_' #x5F."},{"p":"Characters other than the first should have a Unicode property\n\t\t\t\t\t\tof ID_Continue, or be one of the characters listed in the table\n\t\t\t\t\t\tentitled \"Characters for Natural Language Identifiers\" in UAX\n\t\t\t\t\t\t#31, with the exception of \"'\" #x27 and \"‚Äô\" #x2019."},{"p":{"bibref":{"$ref":"unipart15"},"_":"Characters in names should be expressed using\nNormalization Form C as defined in."}},{"p":"Ideographic characters which have a canonical decomposition\n\t\t\t\t\t\t(including those in the ranges [#xF900-#xFAFF] and\n\t\t\t\t\t\t[#x2F800-#x2FFFD], with 12 exceptions) should not be used in names."},{"p":"Characters which have a compatibility decomposition (those with\n\t\t\t\t\t\ta \"compatibility formatting tag\" in field 5 of the Unicode\n\t\t\t\t\t\tCharacter Database -- marked by field 5 beginning with a \"<\")\n\t\t\t\t\t\tshould not be used in names.  This suggestion does not apply\n\t\t\t\t\t\tto characters which\n\t\t\t\t\t\tdespite their compatibility decompositions are in regular use in\n\t\t\t\t\t\ttheir scripts, for\nexample #x0E33 THAI CHARACTER SARA AM or #x0EB3 LAO CHARACTER AM."},{"p":"Combining characters meant for use with symbols only (including\n\t\t\t\t\t\tthose in the ranges [#x20D0-#x20EF] and [#x1D165-#x1D1AD]) should\n\t\t\t\t\t\tnot be used in names."},{"p":"The interlinear annotation characters ([#xFFF9-#xFFFB]) should\n\t\t\t\t\t\tnot be used in names."},{"p":"Variation selector characters should not be used in names."},{"p":"Names which are nonsensical, unpronounceable, hard to read, or\n\t\t\t\t\t\teasily confusable with other names should not be employed."}]},"$id":"sec-suggested-names","$diff":"add"}]},"$w3c-doctype":"rec","$xml:lang":"en"}}