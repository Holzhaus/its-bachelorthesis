<ns0:article xmlns:ns0="http://docbook.org/ns/docbook"><ns0:bibliography><ns0:bibliomixed><ns0:abbrev>RNCTUT</ns0:abbrev><ns0:bibliomisc><ns0:link>None</ns0:link></ns0:bibliomisc><ns0:title>RELAX NG Compact Syntax Tutorial</ns0:title></ns0:bibliomixed><ns0:bibliomixed><ns0:abbrev>NVDLTUT</ns0:abbrev><ns0:bibliomisc><ns0:link>None</ns0:link></ns0:bibliomisc><ns0:title>NVDL Tutorial</ns0:title></ns0:bibliomixed><ns0:bibliomixed><ns0:abbrev>XMLID</ns0:abbrev><ns0:bibliomisc><ns0:link>None</ns0:link></ns0:bibliomisc><ns0:title>xml:id Version 1.0</ns0:title></ns0:bibliomixed><ns0:bibliomixed><ns0:abbrev>DB5SPEC</ns0:abbrev><ns0:bibliomisc><ns0:link>None</ns0:link></ns0:bibliomisc><ns0:title>The DocBook Schema</ns0:title></ns0:bibliomixed></ns0:bibliography><ns0:info><ns0:authorgroup><ns0:author><ns0:email>jirka@kosek.cz</ns0:email><ns0:personname>Jirka Kosek</ns0:personname></ns0:author><ns0:author><ns0:contrib>§convert4to5, proofreading</ns0:contrib><ns0:email>ndw@nwalsh.com</ns0:email><ns0:personname>Norman Walsh</ns0:personname></ns0:author><ns0:author><ns0:contrib>§changes-removed, customization, proofreading</ns0:contrib><ns0:email>rlhamilton@frii.com</ns0:email><ns0:personname>Dick Hamilton</ns0:personname></ns0:author><ns0:othercredit><ns0:contrib>§dbxsl-ns</ns0:contrib><ns0:email>smith@sideshowbarker.net</ns0:email><ns0:personname>Michael(tm) Smith</ns0:personname></ns0:othercredit></ns0:authorgroup><ns0:pubdate>2009-06-16</ns0:pubdate><ns0:pubdate>2008-02-06</ns0:pubdate><ns0:pubdate>2007-10-28</ns0:pubdate><ns0:pubdate>2006-10-22</ns0:pubdate><ns0:pubdate>2006-05-16</ns0:pubdate><ns0:pubdate>2006-03-01</ns0:pubdate><ns0:pubdate>2005-12-28</ns0:pubdate><ns0:pubdate>2005-10-27</ns0:pubdate><ns0:subtitle>The Transition Guide</ns0:subtitle><ns0:title>DocBook V5.0</ns0:title></ns0:info><ns0:para>This document is targeted at DocBook users who are considering
switching from DocBook V4.x to DocBook V5.0. It describes
differences between DocBook V4.x and V5.0 and provides some suggestions about
how to edit and process DocBook V5.0 documents. There is
also a section devoted to conversion of legacy documents from DocBook
4.x to DocBook V5.0.</ns0:para><ns0:para>At the time this was written the current version of DocBook V5.0
was 5.0. However, almost all of the information in this document is
general and applies to any newer version of DocBook V5.0.
</ns0:para><ns0:section><ns0:para><ns0:citation>DB5SPEC</ns0:citation></ns0:para><ns0:section><ns0:note><ns0:para><ns0:uri>http://docbook.org/ns/docbook</ns0:uri></ns0:para></ns0:note><ns0:para><ns0:acronym><ns0:alt>Extensible
Markup Language</ns0:alt></ns0:acronym><ns0:uri>http://docbook.org/ns/docbook</ns0:uri></ns0:para><ns0:para>The corresponding DocBook V5.0 article will look very similar:</ns0:para><ns0:para><ns0:code>xmlns="http://docbook.org/ns/docbook"</ns0:code></ns0:para><ns0:programlisting>&lt;article&gt;
  &lt;title&gt;Sample article&lt;/title&gt;
  &lt;para&gt;This is a really short article.&lt;/para&gt;
&lt;/article&gt;</ns0:programlisting><ns0:programlisting>&lt;article xmlns="http://docbook.org/ns/docbook" …&gt;
  &lt;title&gt;Sample article&lt;/title&gt;
  &lt;para&gt;This is a really short article.&lt;/para&gt;
&lt;/article&gt;</ns0:programlisting><ns0:title>Finally in a namespace</ns0:title></ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE article PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                         'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd'&gt;
&lt;article lang="en"&gt;
  &lt;title&gt;Sample article&lt;/title&gt;
  &lt;para&gt;This is a very short article.&lt;/para&gt;
&lt;/article&gt;</ns0:programlisting><ns0:title>DocBook V4.5 document</ns0:title></ns0:example><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;article xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"&gt;
  &lt;title&gt;Sample article&lt;/title&gt;
  &lt;para&gt;This is a very short article.&lt;/para&gt;
&lt;/article&gt;</ns0:programlisting><ns0:title>DocBook V5.0 document</ns0:title></ns0:example><ns0:note><ns0:para><ns0:xref>None</ns0:xref></ns0:para></ns0:note><ns0:para>For more than a decade, the DocBook schema was defined using a
DTD. However, DTDs have serious limitations, and DocBook V5.0 is thus
defined using a very powerful schema language called RELAX NG. Thanks
to RELAX NG, it is now much easier to create customized versions of
DocBook, and some content models are now cleaner and more
precise.</ns0:para><ns0:para>Using RELAX NG has an impact on the document prolog. The following
example shows the typical prolog of a DocBook V4.x document. The version of
the DocBook DTD (in this case 4.5) is indicated in the document type
declaration (!DOCTYPE) which points to a particular version of the
DTD.</ns0:para><ns0:para><ns0:tag>version</ns0:tag></ns0:para><ns0:para><ns0:tag>lang</ns0:tag><ns0:tag>xml:lang</ns0:tag></ns0:para><ns0:para>Another fundamental change is that there is no direct indication
of the schema used. Later in this document, you will learn how you can
specify a schema to be used for document validation.</ns0:para><ns0:title>Relaxing with DocBook</ns0:title></ns0:section><ns0:section><ns0:itemizedlist><ns0:listitem><ns0:para><ns0:emphasis>DocBook V4.x is feature frozen.</ns0:emphasis></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:emphasis>DocBook V5.0 offers new functionality.</ns0:emphasis><ns0:tag>info</ns0:tag></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:emphasis>DocBook V5.0 is more extensible.</ns0:emphasis></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:emphasis>DocBook V5.0 is easier to customize.</ns0:emphasis><ns0:xref>None</ns0:xref></ns0:para></ns0:listitem></ns0:itemizedlist><ns0:para><ns0:quote>because DocBook V5.0 is the
future</ns0:quote></ns0:para><ns0:title>Why switch to DocBook V5.0?</ns0:title></ns0:section><ns0:section><ns0:para><ns0:link>None</ns0:link><ns0:link>None</ns0:link><ns0:xref>None</ns0:xref></ns0:para><ns0:para>DTD and W3C XML Schema versions of the DocBook V5.0 grammar are provided
as a convenience for users who want to use DocBook V5.0 with legacy tools
that don't support RELAX NG. Authors are encouraged to switch to RELAX
NG based tools as soon as possible, or at least to validate documents
against the RELAX NG schema before further processing.</ns0:para><ns0:para>Some document constraints can't be expressed in schema languages
like RELAX NG or W3C XML Schema. To check for these additional
constraints DocBook V5.0 uses Schematron.  We recommend that you
validate your document against both the RELAX NG and
Schematron schemas.</ns0:para><ns0:section><ns0:para><ns0:link>None</ns0:link></ns0:para><ns0:para><ns0:link>None</ns0:link></ns0:para><ns0:title>Where to get the schemas</ns0:title><ns0:variablelist><ns0:varlistentry><ns0:listitem><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:listitem><ns0:term>RELAX NG schema</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:listitem><ns0:term>RELAX NG schema in compact syntax</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:listitem><ns0:term>DTD</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:listitem><ns0:term>W3C XML Schema</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:listitem><ns0:term>Schematron schema with additional checks</ns0:term></ns0:varlistentry></ns0:variablelist></ns0:section><ns0:section><ns0:note><ns0:para><ns0:citetitle>DocBook: The Definitive
Guide</ns0:citetitle></ns0:para></ns0:note><ns0:para><ns0:link><ns0:citetitle>DocBook: The Definitive Guide</ns0:citetitle></ns0:link></ns0:para><ns0:title>DocBook documentation</ns0:title></ns0:section><ns0:table><ns0:tgroup><ns0:colspec>None</ns0:colspec><ns0:colspec>None</ns0:colspec><ns0:colspec>None</ns0:colspec><ns0:colspec>None</ns0:colspec><ns0:colspec>None</ns0:colspec><ns0:colspec>None</ns0:colspec><ns0:tbody><ns0:row><ns0:entry>Basic document structure</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry>ID/IDREF datatypes</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:footnote><ns0:para><ns0:literal>0</ns0:literal><ns0:literal>1</ns0:literal></ns0:para><ns0:para>In general those datatypes can be also supported in
	  W3C XML Schema, but currently this schema is generated
	  from DTD which lacks datatype information.</ns0:para></ns0:footnote></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:footnote><ns0:para><ns0:tag>title</ns0:tag><ns0:tag>info</ns0:tag><ns0:tag>title</ns0:tag><ns0:tag>info</ns0:tag></ns0:para><ns0:para>On other places co-occurrences enforces particular
	content model based on presence of specific attribute or
	attribute value.</ns0:para><ns0:para>Please also note that in theory co-occurences can be
	validated using Schematron, but the current DocBook schema
	uses RELAX NG for these definitions. Schematron can be used
	only for validation, whereas grammar based schemas like
	RELAX NG are useful also for other purposes like guided editing.</ns0:para></ns0:footnote></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry>Hooks for MathML and SVG content</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:footnote><ns0:para><ns0:tag>footnoteref</ns0:tag><ns0:tag>footnote</ns0:tag></ns0:para></ns0:footnote></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>version</ns0:tag></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:footnote><ns0:para>For example consistency of segmented lists, only one
	term inside term definition etc.</ns0:para></ns0:footnote></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:footnote><ns0:para>Prevents improper nesting of elements, like admonition
	inside admonition.</ns0:para></ns0:footnote></ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry><ns0:entry>NO</ns0:entry><ns0:entry>YES</ns0:entry></ns0:row></ns0:tbody><ns0:thead><ns0:row><ns0:entry>Description</ns0:entry><ns0:entry>DTD</ns0:entry><ns0:entry>W3C XML Schema</ns0:entry><ns0:entry>W3C XML Schema + Schematron</ns0:entry><ns0:entry>RELAX NG</ns0:entry><ns0:entry>RELAX NG + Schematron/NVDL</ns0:entry></ns0:row></ns0:thead></ns0:tgroup><ns0:title>Schema Comparison</ns0:title></ns0:table><ns0:title>Schema jungle</ns0:title></ns0:section><ns0:title>Introduction</ns0:title></ns0:section><ns0:section><ns0:para>This section briefly describes tools and procedures to edit and
process content stored in DocBook V5.0.</ns0:para><ns0:section><ns0:para><ns0:quote>dumb</ns0:quote></ns0:para><ns0:section><ns0:figure><ns0:mediaobject><ns0:imageobject><ns0:imagedata>None</ns0:imagedata></ns0:imageobject><ns0:imageobject><ns0:imagedata>None</ns0:imagedata></ns0:imageobject></ns0:mediaobject><ns0:title>Emacs with nXML mode provides guided editing and validation</ns0:title></ns0:figure><ns0:note><ns0:para><ns0:filename>docbook.rnc</ns0:filename></ns0:para></ns0:note><ns0:para><ns0:application>GNU
Emacs</ns0:application><ns0:link>nXML
mode</ns0:link></ns0:para><ns0:para><ns0:filename>schemas.xml</ns0:filename><ns0:filename>site-lisp/nxml/schema</ns0:filename></ns0:para><ns0:para><ns0:filename>schemas.xml</ns0:filename></ns0:para><ns0:programlisting><ns0:replaceable>/path/to/</ns0:replaceable></ns0:programlisting><ns0:programlisting><ns0:replaceable>/path/to/</ns0:replaceable></ns0:programlisting><ns0:title>Emacs and nXML</ns0:title></ns0:section><ns0:section><ns0:figure><ns0:mediaobject><ns0:imageobject><ns0:imagedata>None</ns0:imagedata></ns0:imageobject></ns0:mediaobject><ns0:title>DocBook V5.0 document opened in oXygen</ns0:title></ns0:figure><ns0:figure><ns0:mediaobject><ns0:imageobject><ns0:imagedata>None</ns0:imagedata></ns0:imageobject></ns0:mediaobject><ns0:title>DocBook V5.0 document opened in oXygen in Author mode</ns0:title></ns0:figure><ns0:para><ns0:application>oXygen</ns0:application></ns0:para><ns0:title>oXygen</ns0:title></ns0:section><ns0:section><ns0:figure><ns0:mediaobject><ns0:imageobject><ns0:imagedata>None</ns0:imagedata></ns0:imageobject></ns0:mediaobject><ns0:title>XML Mind XML Editor – feels almost like MS Word but real DocBook V5.0 markup is created</ns0:title></ns0:figure><ns0:para><ns0:application>XML
Mind XML editor</ns0:application></ns0:para><ns0:para><ns0:guibutton>OK</ns0:guibutton><ns0:guilabel>DocBook
5 configuration</ns0:guilabel><ns0:menuchoice><ns0:guimenu>Options</ns0:guimenu><ns0:guimenuitem>Install
Add-ons…</ns0:guimenuitem></ns0:menuchoice></ns0:para><ns0:title>XML Mind XML editor</ns0:title></ns0:section><ns0:title>Editing DocBook V5.0</ns0:title></ns0:section><ns0:section><ns0:para>If you are not using a RELAX NG-based validating editor when you
create documents, we strongly recommend that you validate your
documents against RELAX NG and Schematron schemas before processing
them. Only after successful validation can you be sure that your
document is really DocBook V5.0 and that processing tools will be able
to process it correctly.</ns0:para><ns0:para>For validation you can use tools that support simultaneous RELAX NG and
Schematron validation, or you can use NVDL to orchestrate validation using
the two schemas.</ns0:para><ns0:section><ns0:para><ns0:link>None</ns0:link></ns0:para><ns0:para><ns0:application>Sun 
Multi-Schema XML Validator (MSV)</ns0:application></ns0:para><ns0:para><ns0:link>on-line DocBook V5.0
validator</ns0:link></ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:filename>relames.zip</ns0:filename><ns0:link>None</ns0:link></ns0:para></ns0:step><ns0:step><ns0:para>Unpack the downloaded file into an arbitrary directory.</ns0:para></ns0:step><ns0:step><ns0:note><ns0:para><ns0:option>-Xss512K</ns0:option></ns0:para></ns0:note><ns0:para>Validate your document using the following command:</ns0:para><ns0:screen><ns0:command>java</ns0:command><ns0:replaceable>/path/to/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen></ns0:step></ns0:procedure><ns0:title>Using RELAX NG and Schematron</ns0:title></ns0:section><ns0:section><ns0:para>NVDL is a meta-schema language which can validate a document 
against several schemas. DocBook V5.0 comes with a NVDL
schema which specifies that DocBook documents should be validated
against both RELAX NG and Schematron schemas.</ns0:para><ns0:para><ns0:application>oNVDL</ns0:application><ns0:application>JNVDL</ns0:application><ns0:link>None</ns0:link></ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:filename>onvdl-20070517.zip</ns0:filename></ns0:para></ns0:step><ns0:step><ns0:para>Unpack the downloaded file into an arbitrary directory.</ns0:para></ns0:step><ns0:step><ns0:para>Validate your document using the following command:</ns0:para><ns0:screen><ns0:command>java</ns0:command><ns0:replaceable>/path/to/oNVDL/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen></ns0:step><ns0:title>oNVDL installation and usage</ns0:title></ns0:procedure><ns0:procedure><ns0:step><ns0:para><ns0:link>None</ns0:link></ns0:para></ns0:step><ns0:step><ns0:para>Unpack the downloaded file into an arbitrary directory.</ns0:para></ns0:step><ns0:step><ns0:para><ns0:command>java</ns0:command><ns0:filename>jnvdl.bat</ns0:filename><ns0:filename>jnvdl.sh</ns0:filename><ns0:option>-Xss512K</ns0:option></ns0:para></ns0:step><ns0:step><ns0:para>On Windows systems, validate your document using the following command:</ns0:para><ns0:para>On Unix systems, validate your document using the following command:</ns0:para><ns0:screen><ns0:command>jnvdl</ns0:command><ns0:replaceable>/path/to/jnvdl/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen><ns0:screen><ns0:command>jnvdl.sh</ns0:command><ns0:replaceable>/path/to/jnvdl/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen></ns0:step><ns0:title>JNVDL installation and usage</ns0:title></ns0:procedure><ns0:title>Using NVDL</ns0:title></ns0:section><ns0:title>Validating DocBook V5.0</ns0:title></ns0:section><ns0:section><ns0:para>Part of DocBook's great success can be attributed to the
availability of free
tools that can be used to transform DocBook content into various
target formats including HTML and PDF. The DocBook XSL Stylesheets are
very popular tools.</ns0:para><ns0:section><ns0:itemizedlist><ns0:listitem><ns0:para>general annotations;</ns0:para></ns0:listitem><ns0:listitem><ns0:para>general XLink links on all elements.</ns0:para></ns0:listitem></ns0:itemizedlist><ns0:note><ns0:para><ns0:screen>WARNING: cannot add @xml:base to node set root element. Relative paths may not work.</ns0:screen></ns0:para></ns0:note><ns0:para>The DocBook stylesheets are designed to process content written in
different versions of DocBook (for example 3.1 and 4.2). Recent
versions of the stylesheets are also able to process DocBook V5.0
with some limitations.</ns0:para><ns0:para>You can process DocBook V5.0 documents with the DocBook XSL
stylesheets in exactly the same way you process DocBook V4.x documents.
You do not need special software; you can stick to your preferred
XSLT processor, be it Saxon, xsltproc, Xalan or whatever else (but see
the note about the lost base URI below).</ns0:para><ns0:para>During document processing, the stylesheets strip
namespaces from DocBook V5.0 to get a document which will be
very similar to DocBook V4.x. This is necessary because from the XSLT
point of view, elements from different namespaces are distinct and cannot 
be easily processed by the same set of templates. This process is
completely transparent to the user. If you are processing DocBook V5.0
documents, the only difference is that you will see the following
additional message:</ns0:para><ns0:para>Although you can successfully use the existing stylesheets to
process DocBook V5.0, there are some limitations and unsupported
features. The unsupported features include:</ns0:para><ns0:screen>Note: namesp. cut : stripped namespace before processing
Note: namesp. cut : processing stripped document</ns0:screen><ns0:title>DocBook XSL Stylesheets</ns0:title></ns0:section><ns0:section><ns0:para><ns0:link>XSL-NS stylesheets</ns0:link></ns0:para><ns0:para><ns0:link><ns0:package>docbook-xsl-ns</ns0:package></ns0:link></ns0:para><ns0:title>DocBook XSL-NS Stylesheets</ns0:title></ns0:section><ns0:section><ns0:itemizedlist><ns0:listitem><ns0:para>seamless integration of profiling (conditional
documents) with external bibliographies and
glossaries;</ns0:para></ns0:listitem><ns0:listitem><ns0:para>no need for (most) external extensions;</ns0:para></ns0:listitem><ns0:listitem><ns0:para>internationalized indexes;</ns0:para></ns0:listitem><ns0:listitem><ns0:para>easy to customize titlepage templates.</ns0:para></ns0:listitem></ns0:itemizedlist><ns0:para>XSLT 1.0 is missing some important features. To work around
these missing features, the current DocBook XSL stylesheets use some
implementation-specific extensions.
XSLT 2.0 adds many new and previously missing features into the language.
A new set of DocBook stylesheets is being implemented based on XSLT 2.0
to take advantage of these features and to fully support DocBook V5.0.
</ns0:para><ns0:para>The XSLT 2.0 based stylesheets have many new features, including:</ns0:para><ns0:para>The XSLT 2.0 based stylesheets are still under development.  At
this writing, they only support HTML and chunked HTML output.  As time
permits, the stylesheet developers will be adding other formats.  Since
the stylesheets are developed in the limited free time the developers
have, there's no specific schedule.</ns0:para><ns0:para><ns0:link>None</ns0:link><ns0:link>None</ns0:link></ns0:para><ns0:para>To transform a DocBook V5.0 document to a single HTML page use the command:</ns0:para><ns0:para>To transform a DocBook V5.0 document to a set of chunked HTML pages use the command:</ns0:para><ns0:screen><ns0:command>java</ns0:command><ns0:replaceable>/path/to/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen><ns0:screen><ns0:command>java</ns0:command><ns0:replaceable>/path/to/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen><ns0:title>XSLT 2.0 based re-implementation</ns0:title></ns0:section><ns0:title>Processing DocBook V5.0</ns0:title></ns0:section><ns0:title>Tool chain</ns0:title></ns0:section><ns0:section><ns0:para><ns0:citation>DB5SPEC</ns0:citation></ns0:para><ns0:section><ns0:para><ns0:citation>XMLID</ns0:citation><ns0:tag>id</ns0:tag><ns0:tag>xml:id</ns0:tag></ns0:para><ns0:para><ns0:tag>xref</ns0:tag><ns0:tag>link</ns0:tag></ns0:para><ns0:para>is written in DocBook V5.0 as:</ns0:para><ns0:para><ns0:tag>linkend</ns0:tag><ns0:tag>href</ns0:tag></ns0:para><ns0:para><ns0:tag>ulink</ns0:tag><ns0:tag>ulink</ns0:tag></ns0:para><ns0:para><ns0:tag>link</ns0:tag></ns0:para><ns0:para><ns0:tag>linkend</ns0:tag></ns0:para><ns0:para><ns0:tag>xml:id</ns0:tag><ns0:tag>linkend</ns0:tag></ns0:para><ns0:programlisting>&lt;section id="dir"&gt;
  &lt;title&gt;DIR command&lt;/title&gt;
  &lt;para&gt;...&lt;/para&gt;
&lt;/section&gt;

&lt;section id="ls"&gt;
  &lt;title&gt;LS command&lt;/title&gt;
  &lt;para&gt;This command is a synonym for &lt;link linkend="dir"&gt;&lt;command&gt;DIR&lt;/command&gt;&lt;/link&gt; command.&lt;/para&gt;
&lt;/section&gt;</ns0:programlisting><ns0:programlisting>&lt;section xml:id="dir"&gt;
  &lt;title&gt;DIR command&lt;/title&gt;
  &lt;para&gt;...&lt;/para&gt;
&lt;/section&gt;

&lt;section xml:id="ls"&gt;
  &lt;title&gt;LS command&lt;/title&gt;
  &lt;para&gt;This command is a synonym for &lt;command linkend="dir"&gt;DIR&lt;/command&gt; command.&lt;/para&gt;
&lt;/section&gt;</ns0:programlisting><ns0:programlisting>&lt;article xmlns="http://docbook.org/ns/docbook" 
         xmlns:xl="http://www.w3.org/1999/xlink" version="5.0"&gt;
  &lt;title&gt;Test article&lt;/title&gt;

  &lt;para&gt;&lt;application xl:href="http://www.gnu.org/software/emacs/emacs.html"&gt;Emacs&lt;/application&gt; 
    is my favourite text editor.&lt;/para&gt;
  …</ns0:programlisting><ns0:programlisting>&lt;ulink url="http://docbook.org"&gt;DocBook site&lt;/ulink&gt;</ns0:programlisting><ns0:programlisting>&lt;link xl:href="http://docbook.org"&gt;DocBook site&lt;/link&gt;</ns0:programlisting><ns0:programlisting>&lt;command xl:href="#dir"&gt;DIR&lt;/command&gt;</ns0:programlisting><ns0:title>Improved cross-referencing and linking</ns0:title></ns0:section><ns0:section><ns0:para>Some elements were renamed to better express their meaning or to
reduce the total number of elements available in DocBook.</ns0:para><ns0:table><ns0:tgroup><ns0:tbody><ns0:row><ns0:entry><ns0:tag>sgmltag</ns0:tag></ns0:entry><ns0:entry><ns0:tag>tag</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>bookinfo</ns0:tag><ns0:tag>articleinfo</ns0:tag><ns0:tag>chapterinfo</ns0:tag><ns0:tag>*info</ns0:tag></ns0:entry><ns0:entry><ns0:tag>info</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>authorblurb</ns0:tag></ns0:entry><ns0:entry><ns0:tag>personblurb</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>collabname</ns0:tag><ns0:tag>corpauthor</ns0:tag><ns0:tag>corpcredit</ns0:tag><ns0:tag>corpname</ns0:tag></ns0:entry><ns0:entry><ns0:tag>orgname</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>isbn</ns0:tag><ns0:tag>issn</ns0:tag><ns0:tag>pubsnumber</ns0:tag></ns0:entry><ns0:entry><ns0:tag>biblioid</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>lot</ns0:tag><ns0:tag>lotentry</ns0:tag><ns0:tag>tocback</ns0:tag><ns0:tag>tocchap</ns0:tag><ns0:tag>tocfront</ns0:tag><ns0:tag>toclevel1</ns0:tag><ns0:tag>toclevel2</ns0:tag><ns0:tag>toclevel3</ns0:tag><ns0:tag>toclevel4</ns0:tag><ns0:tag>toclevel5</ns0:tag><ns0:tag>tocpart</ns0:tag></ns0:entry><ns0:entry><ns0:tag>tocdiv</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>graphic</ns0:tag><ns0:tag>graphicco</ns0:tag><ns0:tag>inlinegraphic</ns0:tag><ns0:tag>mediaobjectco</ns0:tag></ns0:entry><ns0:entry><ns0:tag>mediaobject</ns0:tag><ns0:tag>inlinemediaobject</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>ulink</ns0:tag></ns0:entry><ns0:entry><ns0:tag>link</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>ackno</ns0:tag></ns0:entry><ns0:entry><ns0:tag>acknowledgements</ns0:tag></ns0:entry></ns0:row></ns0:tbody><ns0:thead><ns0:row><ns0:entry>Old name</ns0:entry><ns0:entry>New name</ns0:entry></ns0:row></ns0:thead></ns0:tgroup><ns0:title>Renamed elements</ns0:title></ns0:table><ns0:title>Renamed elements</ns0:title></ns0:section><ns0:section><ns0:para><ns0:tag>action</ns0:tag><ns0:tag>beginpage</ns0:tag><ns0:tag>highlights</ns0:tag><ns0:tag>interface</ns0:tag><ns0:tag>invpartnumber</ns0:tag><ns0:tag>medialabel</ns0:tag><ns0:tag>modespec</ns0:tag><ns0:tag>structfield</ns0:tag><ns0:tag>structname</ns0:tag></ns0:para><ns0:table><ns0:tgroup><ns0:tbody><ns0:row><ns0:entry><ns0:tag>action</ns0:tag></ns0:entry><ns0:entry><ns0:computeroutput><ns0:tag>phrase</ns0:tag></ns0:computeroutput></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>beginpage</ns0:tag></ns0:entry><ns0:entry><ns0:tag>beginpage</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>highlights</ns0:tag></ns0:entry><ns0:entry><ns0:tag>abstract</ns0:tag><ns0:tag>highlights</ns0:tag><ns0:tag>para</ns0:tag><ns0:tag>abstract</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>interface</ns0:tag></ns0:entry><ns0:entry><ns0:quote>gui*</ns0:quote><ns0:tag>guibutton</ns0:tag><ns0:tag>guiicon</ns0:tag><ns0:tag>guilabel</ns0:tag><ns0:tag>guimenu</ns0:tag><ns0:tag>guimenuitem</ns0:tag><ns0:tag>guisubmenu</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>invpartnumber</ns0:tag></ns0:entry><ns0:entry><ns0:computeroutput><ns0:tag>biblioid</ns0:tag></ns0:computeroutput><ns0:tag>productnumber</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>medialabel</ns0:tag></ns0:entry><ns0:entry><ns0:computeroutput><ns0:replaceable>mediatype</ns0:replaceable><ns0:tag>citetitle</ns0:tag></ns0:computeroutput><ns0:replaceable>mediatype</ns0:replaceable><ns0:tag>cdrom</ns0:tag><ns0:tag>dvd</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>modespec</ns0:tag></ns0:entry><ns0:entry><ns0:tag>olink</ns0:tag><ns0:tag>modespec</ns0:tag></ns0:entry></ns0:row><ns0:row><ns0:entry><ns0:tag>structfield</ns0:tag><ns0:tag>structname</ns0:tag></ns0:entry><ns0:entry><ns0:computeroutput><ns0:replaceable>structname or
structfield</ns0:replaceable><ns0:tag>varname</ns0:tag></ns0:computeroutput><ns0:tag>varname</ns0:tag><ns0:tag>property</ns0:tag><ns0:tag>structfield</ns0:tag></ns0:entry></ns0:row></ns0:tbody><ns0:thead><ns0:row><ns0:entry>Old name</ns0:entry><ns0:entry>Recommended mapping</ns0:entry></ns0:row></ns0:thead></ns0:tgroup><ns0:title>Recommended mapping for removed elements</ns0:title></ns0:table><ns0:title>Removed elements</ns0:title></ns0:section><ns0:title>Markup changes</ns0:title></ns0:section><ns0:section><ns0:para>The DocBook V5.0 schema ships with an XSLT 1.0 stylesheet that
is designed to transform valid DocBook V4.x documents to valid
DocBook V5.0 documents.</ns0:para><ns0:para><ns0:filename>doc.xml</ns0:filename></ns0:para><ns0:para>In the vast majority of cases, the resulting document should
be valid and your conversion process is finished.</ns0:para><ns0:para>If the document is not valid, please report the problem.
(Over time, we'll have more experience with the sorts of things
that can go wrong and we'll update this document to reflect that
experience.)</ns0:para><ns0:procedure><ns0:step><ns0:para>Check the validity of your DocBook XML V4.x document. The
conversion tool assumes that the input document is valid. If the input
document contains markup errors, the results will be unpredictable at
best.</ns0:para></ns0:step><ns0:step><ns0:para><ns0:filename>doc.xml</ns0:filename><ns0:filename>newdoc.xml</ns0:filename><ns0:filename>db4-upgrade.xsl</ns0:filename></ns0:para></ns0:step><ns0:step><ns0:para>Check the validity of your DocBook XML V5.0 document against
the DocBook V5.0 RELAX NG grammar.</ns0:para></ns0:step></ns0:procedure><ns0:section><ns0:para>Using XSLT to transform existing documents to DocBook V5.0 has
one potential disadvantage: it removes all entity references from 
your document.</ns0:para><ns0:para>If preserving entities is an important aspect of your production
work flow, you will have to engage in a semi-manual process to
preserve them.</ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:emphasis>is not</ns0:emphasis></ns0:para></ns0:step><ns0:step><ns0:para><ns0:literal>&amp;Product;</ns0:literal><ns0:literal>[[[Product]]]</ns0:literal><ns0:literal>[[[Product]]]</ns0:literal></ns0:para></ns0:step><ns0:step><ns0:para><ns0:literal>&lt;!DOCTYPE</ns0:literal><ns0:literal>]&gt;</ns0:literal></ns0:para></ns0:step><ns0:step><ns0:para><ns0:xref>None</ns0:xref></ns0:para></ns0:step><ns0:step><ns0:para>Open the new document using your favorite editing tool. Replace
all occurrences of the unique string you used to save the entity references
with the corresponding entity references.</ns0:para></ns0:step><ns0:step><ns0:para>Paste the document type declaration that you saved onto the top
of your new document.</ns0:para></ns0:step><ns0:step><ns0:para><ns0:literal>PUBLIC</ns0:literal><ns0:literal>SYSTEM</ns0:literal></ns0:para><ns0:para>is perfectly well-formed. If you don't remove the references to
the DTD, then your parser will likely try to validate against DocBook
V4.0 and that's not going to work. Alternatively, you could refer
to the DocBook V5.0 DTD.</ns0:para><ns0:programlisting>&lt;!DOCTYPE book [
&lt;!ENTITY someEntity "some replacement text"&gt;
]&gt;</ns0:programlisting></ns0:step></ns0:procedure><ns0:section><ns0:para>External parsed entities, entities which load part of a document
from another file, are a special case. These can often be replaced
with XInclude elements.</ns0:para><ns0:para><ns0:filename>db4-entities.pl</ns0:filename></ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:filename>db4-entities.pl</ns0:filename></ns0:para></ns0:step><ns0:step><ns0:para><ns0:xref>None</ns0:xref></ns0:para></ns0:step></ns0:procedure><ns0:title>External Parsed Entities</ns0:title></ns0:section><ns0:tip><ns0:para><ns0:link>cloak
script</ns0:link></ns0:para></ns0:tip><ns0:title>What About Entities?</ns0:title></ns0:section><ns0:title>Converting DocBook V4.x documents to DocBook V5.0</ns0:title></ns0:section><ns0:section><ns0:para><ns0:citation>RNCTUT</ns0:citation></ns0:para><ns0:section><ns0:para><ns0:quote>hooks</ns0:quote></ns0:para><ns0:para><ns0:tag>imagedata</ns0:tag><ns0:tag>videodata</ns0:tag><ns0:tag>align</ns0:tag><ns0:varname>db.halign.enumeration</ns0:varname><ns0:varname>db.videodata.align.enumeration</ns0:varname><ns0:varname>db.imagedata.align.enumeration</ns0:varname><ns0:varname>db.videodata.align.attribute</ns0:varname><ns0:varname>db.imagedata.align.attribute</ns0:varname></ns0:para><ns0:section><ns0:para><ns0:itemizedlist><ns0:listitem><ns0:para><ns0:quote>.</ns0:quote></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:quote>db</ns0:quote></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:replaceable>Context</ns0:replaceable><ns0:tag>info</ns0:tag><ns0:tag>figure</ns0:tag><ns0:varname><ns0:replaceable>elementname</ns0:replaceable></ns0:varname><ns0:varname><ns0:replaceable>context.elementname</ns0:replaceable></ns0:varname><ns0:varname>db.figure.info</ns0:varname><ns0:varname>db.cals.entrytbl.thead</ns0:varname></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:tag>localinfo</ns0:tag><ns0:tag>olink</ns0:tag><ns0:varname><ns0:replaceable>attributename</ns0:replaceable></ns0:varname><ns0:varname><ns0:replaceable>context.attributename</ns0:replaceable></ns0:varname><ns0:varname>db.olink.localinfo.attribute</ns0:varname><ns0:varname>db.effectivity.attributes</ns0:varname></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:tag>table</ns0:tag><ns0:tag>table</ns0:tag><ns0:varname><ns0:replaceable>elementname</ns0:replaceable></ns0:varname><ns0:varname><ns0:replaceable>context.elementname</ns0:replaceable></ns0:varname><ns0:varname>db.html.table.attlist</ns0:varname><ns0:varname>db.cals.table.attlist</ns0:varname></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:tag>continuation</ns0:tag><ns0:tag>screen</ns0:tag><ns0:tag>class</ns0:tag><ns0:varname><ns0:replaceable>[context.]attributename</ns0:replaceable></ns0:varname><ns0:varname>db.verbatim.continuation.enumeration</ns0:varname><ns0:varname>db.class.enumeration</ns0:varname></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:variablelist><ns0:varlistentry><ns0:listitem><ns0:para><ns0:varname>db.error.inlines</ns0:varname><ns0:varname>db.errorcode</ns0:varname><ns0:varname>db.errortext</ns0:varname></ns0:para></ns0:listitem><ns0:term>inlines</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:varname>db.verbatim.blocks</ns0:varname><ns0:varname>db.programlisting</ns0:varname><ns0:varname>db.screen</ns0:varname></ns0:para></ns0:listitem><ns0:term>blocks</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:tag>arch</ns0:tag><ns0:tag>condition</ns0:tag><ns0:tag>conformance</ns0:tag><ns0:varname>db.effectivity.attributes</ns0:varname></ns0:para></ns0:listitem><ns0:term>attributes</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:tag>chapter</ns0:tag><ns0:tag>appendix</ns0:tag><ns0:tag>preface</ns0:tag><ns0:varname>db.navigation.components</ns0:varname><ns0:varname>db.glossary</ns0:varname><ns0:varname>db.bibliography</ns0:varname><ns0:varname>db.index</ns0:varname><ns0:varname>db.toc</ns0:varname></ns0:para></ns0:listitem><ns0:term>components</ns0:term></ns0:varlistentry><ns0:varlistentry><ns0:listitem><ns0:para><ns0:tag>tip</ns0:tag><ns0:tag>warning</ns0:tag><ns0:tag>note</ns0:tag><ns0:varname>db.admonition.contentmodel</ns0:varname></ns0:para></ns0:listitem><ns0:term>contentmodel</ns0:term></ns0:varlistentry></ns0:variablelist></ns0:para><ns0:para>
            There are a couple of other groupings designed to minimize
            duplication, but these are the most important.
          </ns0:para></ns0:listitem></ns0:itemizedlist></ns0:para><ns0:title>Pattern Names</ns0:title></ns0:section><ns0:title>DocBook RELAX NG schema organization</ns0:title></ns0:section><ns0:section><ns0:para>
    Creating a customized schema is similar to
    creating a customization layer for XSL.  The schema customization
    layer is a new RELAX NG schema that defines your changes and
    includes the standard docbook schema.  You then validate using
    the schema customization as your schema.
  </ns0:para><ns0:para><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;

  &lt;!-- redefinitions of named patterns --&gt;

&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db
# redefinitions of named patterns</ns0:programlisting><ns0:title>Empty customization file</ns0:title></ns0:example><ns0:footnote><ns0:para><ns0:filename>docbook.rng</ns0:filename><ns0:link>XML
    catalogs</ns0:link><ns0:uri>http://docbook.org/xml/5.0/rng/docbook.rng</ns0:uri></ns0:para></ns0:footnote><ns0:tag>href</ns0:tag><ns0:tag>include</ns0:tag><ns0:xref>None</ns0:xref></ns0:para><ns0:title>General customization considerations</ns0:title></ns0:section><ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;
  &lt;!-- define the new element --&gt;
  &lt;define name="dbx.person"&gt;
    &lt;element name="person"&gt;
        &lt;ref name="db.author.attlist"/&gt;
        &lt;ref name="db.credit.contentmodel"/&gt;
    &lt;/element&gt;
  &lt;/define&gt;
  &lt;!-- redefine the db.author pattern to allow db.person in
       the same places as db.author --&gt;
  &lt;define name="db.author" combine="choice"&gt;
    &lt;ref name="dbx.person"/&gt;
  &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>default namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc"
# define the new element
dbx.person =
  element person { db.author.attlist, db.credit.contentmodel }
# redefine the db.author pattern to allow db.person in
# the same places as db.author
db.author |= dbx.person</ns0:programlisting><ns0:title>Adding a new element by duplicating an existing one</ns0:title></ns0:example><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;
  &lt;!-- define the new elements --&gt;
  &lt;define name="dbx.register"&gt;
    &lt;element name="register"&gt;
      &lt;text/&gt;
    &lt;/element&gt;
  &lt;/define&gt;
  &lt;define name="dbx.instruction"&gt;
    &lt;element name="instruction"&gt;
      &lt;text/&gt;
    &lt;/element&gt;
  &lt;/define&gt;
  &lt;!-- create a new pattern that contains the new inlines --&gt;
  &lt;define name="dbx.asm.inlines"&gt;
    &lt;choice&gt;
      &lt;ref name="dbx.register"/&gt;
      &lt;ref name="dbx.instruction"/&gt;
    &lt;/choice&gt;
  &lt;/define&gt;
  &lt;!-- add the new inlines to programming and os inlines --&gt;
    &lt;define name="db.programming.inlines" combine="choice"&gt;
      &lt;ref name="dbx.asm.inlines"/&gt;
    &lt;/define&gt;
    &lt;define name="db.os.inlines" combine="choice"&gt;
      &lt;ref name="dbx.asm.inlines"/&gt;
    &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>default namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc"
# define the new elements
dbx.register = element register { text }
dbx.instruction = element instruction { text }
# create a new pattern that contains the new inlines
dbx.asm.inlines = dbx.register | dbx.instruction
# add the new inlines to programming and os inlines
db.programming.inlines |= dbx.asm.inlines
db.os.inlines |= dbx.asm.inlines</ns0:programlisting><ns0:title>Adding new inline elements</ns0:title></ns0:example><ns0:para>
        Adding an element typically takes two definitions.
        The first defines the new element and
        its content model, and the second adds the
        new element into the schema.  We'll show two examples.
      </ns0:para><ns0:para><ns0:tag>person</ns0:tag><ns0:tag>author</ns0:tag><ns0:tag>author</ns0:tag><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:quote>choice</ns0:quote><ns0:tag>person</ns0:tag><ns0:tag>combine</ns0:tag><ns0:tag>combine</ns0:tag><ns0:varname>db.author</ns0:varname><ns0:varname>dbx.person</ns0:varname><ns0:varname>db.author</ns0:varname><ns0:varname>dbx.person</ns0:varname></ns0:para><ns0:para><ns0:tag>author</ns0:tag><ns0:tag>person</ns0:tag></ns0:para><ns0:para><ns0:quote>clone</ns0:quote><ns0:tag>register</ns0:tag><ns0:tag>instruction</ns0:tag><ns0:varname>dbx.asm.inlines</ns0:varname><ns0:varname>db.programming.inlines</ns0:varname><ns0:varname>db.os.inlines</ns0:varname><ns0:xref>None</ns0:xref><ns0:xref>None</ns0:xref><ns0:xref>None</ns0:xref></ns0:para><ns0:title>Adding elements</ns0:title></ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"&gt;
    &lt;!-- redefine important element as notAllowed --&gt;
    &lt;define name="db.important"&gt;
      &lt;notAllowed/&gt;
    &lt;/define&gt;
  &lt;/include&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db {
  # redefine important element as notAllowed
  db.important = notAllowed
}</ns0:programlisting><ns0:title>Deleting an element</ns0:title></ns0:example><ns0:para><ns0:tag>important</ns0:tag><ns0:tag>include</ns0:tag><ns0:varname>notAllowed</ns0:varname><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:tag>title</ns0:tag><ns0:tag>book</ns0:tag><ns0:tag>book</ns0:tag><ns0:tag>title</ns0:tag></ns0:para><ns0:title>Deleting elements</ns0:title></ns0:section><ns0:section><ns0:para><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;

  &lt;define name="db.person.author.contentmodel" combine="interleave"&gt;
    &lt;interleave&gt;
      &lt;optional&gt;
        &lt;element name="born"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/element&gt;
      &lt;/optional&gt;
      &lt;optional&gt;
        &lt;element name="died"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/element&gt;
      &lt;/optional&gt;
    &lt;/interleave&gt;
  &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>default namespace = "http://docbook.org/ns/docbook"
namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc"

db.person.author.contentmodel &amp;=
  element born { db.date.contentmodel }?
  &amp; element died { db.date.contentmodel }?</ns0:programlisting><ns0:title>Modifying the content model of an element</ns0:title></ns0:example><ns0:tag>author</ns0:tag><ns0:tag>born</ns0:tag><ns0:tag>died</ns0:tag><ns0:tag>author</ns0:tag><ns0:varname>db.person.author.contentmodel</ns0:varname><ns0:varname>db.org.author.contentmodel</ns0:varname><ns0:varname>db.person.author.contentmodel</ns0:varname><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:programlisting>&lt;author&gt;
  &lt;personname&gt;Babe Ruth&lt;/personname&gt;
  &lt;born&gt;02/06/1895&lt;/born&gt;
  &lt;died&gt;08/16/1948&lt;/died&gt;
&lt;/author&gt;</ns0:programlisting><ns0:programlisting>&lt;!-- INVALID --&gt;
&lt;author&gt;
  &lt;orgname&gt;Boston Red Sox&lt;/orgname&gt;
  &lt;died&gt;1919&lt;/died&gt;
  &lt;born&gt;2004&lt;/born&gt;
&lt;/author&gt;</ns0:programlisting><ns0:varname>db.org.author.contentmodel</ns0:varname></ns0:para><ns0:title>Customizing the content model of existing elements</ns0:title></ns0:section><ns0:title>Elements</ns0:title></ns0:section><ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;

  &lt;define name="db.author.attlist" combine="interleave"&gt;
    &lt;interleave&gt;
      &lt;optional&gt;
        &lt;attribute name="born"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/attribute&gt;
      &lt;/optional&gt;
      &lt;optional&gt;
        &lt;attribute name="died"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/attribute&gt;
      &lt;/optional&gt;
    &lt;/interleave&gt;
  &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db

db.author.attlist &amp;=
  attribute born { db.date.contentmodel }?
  &amp; attribute died { db.date.contentmodel }?</ns0:programlisting><ns0:title>Adding attributes</ns0:title></ns0:example><ns0:para><ns0:quote>interleave</ns0:quote><ns0:tag>born</ns0:tag><ns0:tag>died</ns0:tag><ns0:tag>author</ns0:tag><ns0:tag>combine</ns0:tag><ns0:varname>db.author.attlist</ns0:varname><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:tag>author</ns0:tag><ns0:xref>None</ns0:xref><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;
  &lt;!-- redefinitions of named patterns --&gt;
  &lt;define name="db.person.author.contentmodel" combine="interleave"&gt;
    &lt;interleave&gt;
      &lt;optional&gt;
        &lt;attribute name="born"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/attribute&gt;
      &lt;/optional&gt;
      &lt;optional&gt;
        &lt;attribute name="died"&gt;
          &lt;ref name="db.date.contentmodel"/&gt;
        &lt;/attribute&gt;
      &lt;/optional&gt;
    &lt;/interleave&gt;
  &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db
# redefinitions of named patterns
db.person.author.contentmodel &amp;=
  attribute born { db.date.contentmodel }?
  &amp; attribute died { db.date.contentmodel }?</ns0:programlisting><ns0:title>Adding attributes; alternate method</ns0:title></ns0:example><ns0:tag>interleave</ns0:tag><ns0:varname>db.person.author.contentmodel</ns0:varname><ns0:xref>None</ns0:xref><ns0:xref>None</ns0:xref></ns0:para><ns0:title>Adding attributes</ns0:title></ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"&gt;
    &lt;define name="db.common.linking.attributes"&gt;
      &lt;empty/&gt;
    &lt;/define&gt;
  &lt;/include&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db {
  db.common.linking.attributes = empty
}</ns0:programlisting><ns0:title>Deleting an attribute</ns0:title></ns0:example><ns0:para><ns0:varname>empty</ns0:varname><ns0:varname>notAllowed</ns0:varname><ns0:varname>db.common.linking.attributes</ns0:varname><ns0:varname>empty</ns0:varname><ns0:xref>None</ns0:xref></ns0:para><ns0:para><ns0:varname>empty</ns0:varname><ns0:varname>notAllowed</ns0:varname></ns0:para><ns0:title>Deleting attributes</ns0:title></ns0:section><ns0:section><ns0:example><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns:db="http://docbook.org/ns/docbook"
         ns="http://docbook.org/ns/docbook"
         xmlns="http://relaxng.org/ns/structure/1.0"&gt;
  &lt;include href="docbook.rng"/&gt;
  &lt;!-- add value to an enumeration --&gt;
  &lt;define name="db.spacing.enumeration" combine="choice"&gt;
    &lt;value&gt;large&lt;/value&gt;
  &lt;/define&gt;
&lt;/grammar&gt;</ns0:programlisting><ns0:programlisting>namespace db = "http://docbook.org/ns/docbook"

include "docbook.rnc" inherit = db
# add value to an enumeration
db.spacing.enumeration |= "large"</ns0:programlisting><ns0:title>Deleting an attribute</ns0:title></ns0:example><ns0:para><ns0:quote>large</ns0:quote><ns0:varname>db.spacing.enumeration</ns0:varname><ns0:xref>None</ns0:xref></ns0:para><ns0:title>Changing permitted content of attributes</ns0:title></ns0:section><ns0:title>Attributes</ns0:title></ns0:section><ns0:section><ns0:para><ns0:tag>version</ns0:tag><ns0:uri>http://docbook.org/ns/docbook</ns0:uri></ns0:para><ns0:para>Future versions of DocBook documents will start with the same
markup, except the version number will be raised, for example to 5.1
or 6.0.
The namespace will remain the same until the semantics of the elements
change in a backward incompatible way, which is very unlikely to happen.</ns0:para><ns0:para><ns0:quote>official</ns0:quote><ns0:tag>version</ns0:tag></ns0:para><ns0:para>When you customize the schema, use the following syntax to
identify your DocBook derivation:</ns0:para><ns0:para>For example:</ns0:para><ns0:para>The first part of the version identifier is the version number of the
DocBook schema from which you derived your customization.</ns0:para><ns0:para><ns0:literal>subset</ns0:literal><ns0:literal>extension</ns0:literal><ns0:literal>variant</ns0:literal></ns0:para><ns0:para>After these keywords you may add a whitespace separated list of
customization identifiers. Each name may be optionally followed by its
version number.</ns0:para><ns0:programlisting>&lt;book xmlns="http://docbook.org/ns/docbook"
      version="5.0"&gt;
  …
&lt;/book&gt;</ns0:programlisting><ns0:programlisting><ns0:replaceable>base_version</ns0:replaceable><ns0:replaceable>name</ns0:replaceable><ns0:replaceable>version</ns0:replaceable></ns0:programlisting><ns0:programlisting>5.0-subset simplified-1.0
5.0-variant ASMBook
5.0-variant ASMBook-2006
5.0-extension MathML-2.0 SVG-1.1</ns0:programlisting><ns0:title>Naming and versioning DocBook customizations</ns0:title></ns0:section><ns0:title>Customizing DocBook V5.0</ns0:title></ns0:section><ns0:section><ns0:qandaset><ns0:qandadiv><ns0:qandaentry><ns0:answer><ns0:para>There is no standard way of associating a RELAX NG schema with a
document. Most tools provide some mechanism for performing this
association, consult the documentation for your application. In some
tools you must specify schema manually each time you want to
edit/process your document.</ns0:para></ns0:answer><ns0:question><ns0:para>How do I attach a schema to a DocBook V5.0 document when I do not
want to use DTDs and !DOCTYPE?</ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:para>Modern schema languages (including RELAX NG and W3X XML Schema)
do not provide any means to define entities that can be used for easier
typing of special characters. Some editors provide functions or
special toolbars that allow you to easily pick necessary character
and insert it into document as a raw Unicode character or a numeric
character reference.</ns0:para><ns0:para><ns0:link>Entity definition
files</ns0:link></ns0:para><ns0:para>For your convenience there is also flattened entity definition
file which contains all entity definitions.</ns0:para><ns0:programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE article [
&lt;!ENTITY % isopub SYSTEM "http://www.w3.org/2003/entities/iso8879/isopub.ent"&gt;
%isopub;
]&gt;
&lt;article xmlns="http://docbook.org/ns/docbook" version="5.0"&gt;
&lt;title&gt;DocBook V5.0 &amp;ndash; the superb documentation format&lt;/title&gt;
…</ns0:programlisting><ns0:programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE article [
&lt;!ENTITY % allent SYSTEM "http://www.w3.org/2003/entities/2007/w3centities-f.ent"&gt;
%allent;
]&gt;
&lt;article xmlns="http://docbook.org/ns/docbook" version="5.0"&gt;
&lt;title&gt;DocBook V5.0 &amp;ndash; the superb documentation format&lt;/title&gt;
…</ns0:programlisting></ns0:answer><ns0:question><ns0:para><ns0:tag>ndash</ns0:tag></ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:para><ns0:filename>docbookxi.rnc</ns0:filename><ns0:filename>docbook.rnc</ns0:filename><ns0:link>XInclude</ns0:link><ns0:quote>xi</ns0:quote></ns0:para></ns0:answer><ns0:question><ns0:para>How to modularize documents?</ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:para>If you are using XIncludes you should make sure that the final
document after resolving all inclusions is valid DocBook V5.0
instance. This means that all XIncludes should be processed before
validation takes place. The following command can be used to enable
XInclude processing in oNVDL.</ns0:para><ns0:para><ns0:option>-xi</ns0:option></ns0:para><ns0:screen><ns0:command>java</ns0:command><ns0:replaceable>/path/to/oNVDL/</ns0:replaceable><ns0:replaceable>/path/to/</ns0:replaceable></ns0:screen></ns0:answer><ns0:question><ns0:para>How to validate documents which are composed by XInclude?</ns0:para></ns0:question></ns0:qandaentry><ns0:title>Authoring</ns0:title></ns0:qandadiv><ns0:qandadiv><ns0:qandaentry><ns0:answer><ns0:para>Yes, the current stylesheets (like 1.73.x) will be supported and
improved further because they are very widely deployed and work with
many existing XSLT processors.</ns0:para><ns0:para>Surely there will be a point in a future when all new development
will be switched to the XSLT 2.0 based implementation. But this
will not happen until all features of the current stylesheets are
implemented in the new stylesheets, and until there is more than
one usable XSLT 2.0 processor available.</ns0:para></ns0:answer><ns0:question><ns0:para>Will the current DocBook XSL stylesheets (XSLT 1.0 based
implementation) be maintained and improved in the future since work on
a new XSLT 2.0 based implementation has started?</ns0:para></ns0:question></ns0:qandaentry><ns0:title>Stylesheets</ns0:title></ns0:qandadiv><ns0:qandadiv><ns0:qandaentry><ns0:answer><ns0:para><ns0:tag>equation</ns0:tag></ns0:para><ns0:para>If you need strict validation of MathML content or guided
editing for MathML, you can easily extend the base DocBook schema with
the MathML schema.</ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:filename>mathml</ns0:filename><ns0:link>None</ns0:link></ns0:para></ns0:step><ns0:step><ns0:para><ns0:filename>dbmathml.rnc</ns0:filename></ns0:para><ns0:para><ns0:filename>dbmathml.rng</ns0:filename></ns0:para><ns0:programlisting>namespace html = "http://www.w3.org/1999/xhtml"
namespace mml = "http://www.w3.org/1998/Math/MathML"
namespace db = "http://docbook.org/ns/docbook"

include "/path/to/docbook.rnc" {
  db._any.mml = external "mathml/mathml2.rnc"
  db._any =
    element * - (db:* | html:* | mml:*) {
      (attribute * { text }
       | text
       | db._any)*
    }
}</ns0:programlisting><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns="http://relaxng.org/ns/structure/1.0"&gt;

&lt;include href="/path/to/docbook.rng"&gt;
  &lt;define name="db._any.mml"&gt;
    &lt;externalRef href="mathml/mathml2.rng"/&gt;
  &lt;/define&gt;

  &lt;define name="db._any"&gt;
    &lt;element&gt;
      &lt;anyName&gt;
        &lt;except&gt;
          &lt;nsName ns="http://docbook.org/ns/docbook"/&gt;
          &lt;nsName ns="http://www.w3.org/1999/xhtml"/&gt;
          &lt;nsName ns="http://www.w3.org/1998/Math/MathML"/&gt;
        &lt;/except&gt;
      &lt;/anyName&gt;
      &lt;zeroOrMore&gt;
        &lt;choice&gt;
          &lt;attribute&gt;
            &lt;anyName/&gt;
          &lt;/attribute&gt;
          &lt;text/&gt;
          &lt;ref name="db._any"/&gt;
        &lt;/choice&gt;
      &lt;/zeroOrMore&gt;
    &lt;/element&gt;
  &lt;/define&gt;
&lt;/include&gt;

&lt;/grammar&gt;</ns0:programlisting></ns0:step><ns0:step><ns0:para><ns0:filename>dbmathml.rnc</ns0:filename><ns0:filename>dbmathml.rng</ns0:filename></ns0:para></ns0:step><ns0:title>Extending the DocBook schema with the MathML schema</ns0:title></ns0:procedure></ns0:answer><ns0:question><ns0:para>How can I extend the DocBook schema with MathML elements?</ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:para><ns0:tag>imageobject</ns0:tag></ns0:para><ns0:procedure><ns0:step><ns0:para><ns0:filename>svg</ns0:filename><ns0:link>None</ns0:link></ns0:para></ns0:step><ns0:step><ns0:para><ns0:filename>dbsvg.rnc</ns0:filename></ns0:para><ns0:para><ns0:filename>dbsvg.rng</ns0:filename></ns0:para><ns0:programlisting>namespace html = "http://www.w3.org/1999/xhtml"
namespace db = "http://docbook.org/ns/docbook"
namespace svg = "http://www.w3.org/2000/svg"

include "/path/to/docbook.rnc" {
  db._any.svg = external "svg/svg11.rnc"
  db._any =
    element * - (db:* | html:* | svg:*) {
      (attribute * { text }
       | text
       | db._any)*
    }
}</ns0:programlisting><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns="http://relaxng.org/ns/structure/1.0"&gt;

&lt;include href="/path/to/docbook.rng"&gt;
  &lt;define name="db._any.svg"&gt;
    &lt;externalRef href="svg/svg11.rng"/&gt;
  &lt;/define&gt;

  &lt;define name="db._any"&gt;
    &lt;element&gt;
      &lt;anyName&gt;
        &lt;except&gt;
          &lt;nsName ns="http://docbook.org/ns/docbook"/&gt;
          &lt;nsName ns="http://www.w3.org/1999/xhtml"/&gt;
          &lt;nsName ns="http://www.w3.org/2000/svg"/&gt;
        &lt;/except&gt;
      &lt;/anyName&gt;
      &lt;zeroOrMore&gt;
        &lt;choice&gt;
          &lt;attribute&gt;
            &lt;anyName/&gt;
          &lt;/attribute&gt;
          &lt;text/&gt;
          &lt;ref name="db._any"/&gt;
        &lt;/choice&gt;
      &lt;/zeroOrMore&gt;
    &lt;/element&gt;
  &lt;/define&gt;
&lt;/include&gt;

&lt;/grammar&gt;</ns0:programlisting></ns0:step><ns0:step><ns0:para><ns0:filename>dbsvg.rnc</ns0:filename><ns0:filename>dbsvg.rng</ns0:filename></ns0:para></ns0:step><ns0:title>Extending the DocBook schema with the SVG schema</ns0:title></ns0:procedure></ns0:answer><ns0:question><ns0:para>How can I extend the DocBook schema with SVG elements?</ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:para>Yes, you can create a special schema customization that combines
both MathML and SVG with the DocBook schema. In compact syntax, the merged
schema is:</ns0:para><ns0:para>Or alternatively in the full RELAX NG syntax:</ns0:para><ns0:programlisting>namespace html = "http://www.w3.org/1999/xhtml"
namespace mml = "http://www.w3.org/1998/Math/MathML"
namespace db = "http://docbook.org/ns/docbook"
namespace svg = "http://www.w3.org/2000/svg"

include "/path/to/docbook.rnc" {
  db._any.mml = external "mahtml/mathml2.rnc"
  db._any.svg = external "svg/svg11.rnc"
  db._any =
    element * - (db:* | html:* | mml:* | svg:*) {
      (attribute * { text }
       | text
       | db._any)*
    }
}</ns0:programlisting><ns0:programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;grammar xmlns="http://relaxng.org/ns/structure/1.0"&gt;

&lt;include href="/path/to/docbook.rng"&gt;
  &lt;define name="db._any.mml"&gt;
    &lt;externalRef href="mathml/mathml2.rng"/&gt;
  &lt;/define&gt;

  &lt;define name="db._any.svg"&gt;
    &lt;externalRef href="svg/svg11.rng"/&gt;
  &lt;/define&gt;

  &lt;define name="db._any"&gt;
    &lt;element&gt;
      &lt;anyName&gt;
        &lt;except&gt;
          &lt;nsName ns="http://docbook.org/ns/docbook"/&gt;
          &lt;nsName ns="http://www.w3.org/1999/xhtml"/&gt;
          &lt;nsName ns="http://www.w3.org/1998/Math/MathML"/&gt;
          &lt;nsName ns="http://www.w3.org/2000/svg"/&gt;
        &lt;/except&gt;
      &lt;/anyName&gt;
      &lt;zeroOrMore&gt;
        &lt;choice&gt;
          &lt;attribute&gt;
            &lt;anyName/&gt;
          &lt;/attribute&gt;
          &lt;text/&gt;
          &lt;ref name="db._any"/&gt;
        &lt;/choice&gt;
      &lt;/zeroOrMore&gt;
    &lt;/element&gt;
  &lt;/define&gt;
&lt;/include&gt;

&lt;/grammar&gt;</ns0:programlisting></ns0:answer><ns0:question><ns0:para>Is it possible to use the previous two customizations for MathML
and SVG together?</ns0:para></ns0:question></ns0:qandaentry><ns0:qandaentry><ns0:answer><ns0:itemizedlist><ns0:listitem><ns0:para><ns0:link>Sample
customization of ITS and DocBook</ns0:link></ns0:para></ns0:listitem><ns0:listitem><ns0:para><ns0:link>Examples on
DocBook WiKi</ns0:link></ns0:para></ns0:listitem></ns0:itemizedlist><ns0:para>Sure. Some of the are listed bellow:</ns0:para></ns0:answer><ns0:question><ns0:para>Are there any other examples of schema customization
available?</ns0:para></ns0:question></ns0:qandaentry><ns0:title>Schema customizations</ns0:title></ns0:qandadiv><ns0:qandadiv><ns0:qandaentry><ns0:answer><ns0:para><ns0:filename>xml.xsd</ns0:filename><ns0:filename>xml.xsd</ns0:filename><ns0:tag>xml:id</ns0:tag></ns0:para></ns0:answer><ns0:question><ns0:para><ns0:filename>docbook.xsd</ns0:filename><ns0:tag>xml:id</ns0:tag></ns0:para></ns0:question></ns0:qandaentry><ns0:title>Tool specific problems</ns0:title></ns0:qandadiv></ns0:qandaset><ns0:title>FAQ</ns0:title></ns0:section></ns0:article>