%
% XML / JSON format specifications
%

@techreport{maler2008xml,
  author       = {Maler, Eve and Paoli, Jean and Yergeau, Fran\c{c}ois and Bray, Tim and Sperberg-McQueen, Michael},
  title        = {Extensible Markup Language ({XML}) 1.0 (Fifth Edition)},
  note         = {http://www.w3.org/TR/2008/REC-xml-20081126/},
  date         = {2008-11-26},
  year         = {2008},
  month        = nov,
  day          = 26,
  bibsource    = {http://w2.syronex.com/jmr/w3c-biblio},
  type         = {W3C Recommendation},
  institution  = {W3C},
  url          = {https://www.w3.org/TR/2008/REC-xml-20081126/},
}

@techreport{rfc7139,
  author       = {Bray, Tim},
  title        = {The JavaScript Object Notation (JSON) Data Interchange Format},
  howpublished = {Internet Requests for Comments},
  type         = {RFC},
  number       = {7159},
  year         = {2014},
  month        = mar,
  issn         = {2070-1721},
  publisher    = {Internet Society (ISOC)},
  institution  = {RFC Editor},
  url          = {http://www.rfc-editor.org/rfc/rfc7159.txt},
}

@TechReport{boyer01canonicalization,
  author       = {John Boyer},
  title        = {Canonical {XML} Version 1.0},
  note         = {http://www.w3.org/TR/2001/REC-xml-c14n-20010315},
  date         = {2001-03-15},
  year         = {2001},
  month        = mar,
  day          = 15,
  bibsource    = {http://w2.syronex.com/jmr/w3c-biblio},
  type         = {W3C Recommendation},
  institution  = {W3C},
  url          = {http://www.w3.org/TR/2001/REC-xml-c14n-20010315},
}

%
% Comparison between XML and JSON
%

@inproceedings{lin2012comparison,
  author       = {Lin, Boci and Chen, Yan and Chen, Xu and Yu, Yingying},
  booktitle    = {2012 International Conference on Computer Science and Service System},
  title        = {Comparison between JSON and XML in Applications Based on AJAX},
  year         = {2012},
  pages        = {1174-1177},
  abstract     = {As the core technology of Web 2.0, Ajax has caught more and more attention. Xml, as the traditional data load format, needs to be resolved by DOM (Document Object Model ) both in client-side and server-side, which wastes system resource and makes a great reduction of user-friendliness. In this paper, a light-weightdata-interchanging format-JSON (Java Script Object Notation) will be introduced, which provides a higher level of flexibility and efficiency. We make a comparison between JSON and XML through expriment, then use JSON as data-transfering format in an actual project. Results show that JSON is more suitable as a data-loading tool for Ajax applications.},
  keywords     = {Java;XML;document handling;electronic data interchange;AJAX;DOM;JSON;JavaScript object notation;Web 2.0;XML;client-side;data load format;data-loading tool;data-transfering format;document object model;light-weightdata-interchanging format;server-side;user-friendliness;Educational institutions;Reactive power;Servers;Standards;XML;Ajax;J2EE;JSON;XML},
  doi          = {10.1109/CSSS.2012.297},
  month        = aug,
  url          = {http://ieeexplore.ieee.org/abstract/document/6394535/},
}
@inproceedings{wang2011efficiency,
  author       = {Wang, Peng and Wu, Xiaodong and Yang, Huamin},
  booktitle    = {2011 International Conference of Information Technology, Computer Engineering and Management Sciences},
  title        = {Analysis of the Efficiency of Data Transmission Format Based on Ajax Applications},
  year         = {2011},
  volume       = {4},
  pages        = {265-268},
  abstract     = {In order to shorten the response time from Ajax real-time applications as far as possible, the client can get data from server timely and users can obtain timelier and more quickly real-time information. Choosing proper data transmission format can effectively shorten the analyzing time, reduce data file redundancy, and bring much convenience to system development and maintenance. Experiments show that when analyzing JSON type data objects, the computer spend less time than XML data type and more time than HTML fragments, but with low file redundancy and more convenience for programming and maintaining. So in some cases, use JSON data type as transmission type will bring faster user experience, and cost on development and maintenance also can be reduced.},
  keywords     = {Java;XML;client-server systems;electronic data interchange;redundancy;systems analysis;Ajax real-time applications;JSON type data objects;asynchronous JavaScript and XML;client-server system;data file redundancy reduction;data transmission format;response time;system development;system maintenance;Computers;Data communication;HTML;Real time systems;Redundancy;Servers;XML;Ajax;Comparison;Data Transmission Format;Efficiency},
  doi          = {10.1109/ICM.2011.199},
  month        = sep,
  url          = {http://ieeexplore.ieee.org/abstract/document/6113744/},
}

@article{ying2013refactoring,
  title        = {Refactoring legacy AJAX applications to improve the efficiency of the data exchange component},
  author       = {Ying, Ming and Miller, James},
  journal      = {Journal of Systems and Software},
  volume       = {86},
  number       = {1},
  pages        = {72 - 88},
  year         = {2013},
  issn         = {0164-1212},
  doi          = {10.1016/j.jss.2012.07.019},
  url          = {http://www.sciencedirect.com/science/article/pii/S0164121212002129},
  keywords     = {XML;JSON;JavaScript;AJAX;Efficiency;Refactoring},
  abstract     = {The AJAX paradigm encodes data exchange XML formats. Recently, JSON has also become a popular data exchange format. XML has numerous benefits including human-readable structures and self-describing data. However, JSON provides significant performance gains over XML due to its light weight nature and native support for JavaScript. This is especially important for Rich Internet Applications (RIA). Therefore, it is necessary to change the data format from XML to JSON for efficiency purposes. This paper presents a refactoring system (XtoJ) to safely assist programmers migrate existing AJAX-based applications utilizing XML into functionally equivalent AJAX-based applications utilizing JSON. We empirically demonstrate that our transformation system significantly improves the efficiency of AJAX applications.},
  url          = {http://www.sciencedirect.com/science/article/pii/S0164121212002129},
}

@article{nurseitov2009comparison,
  title        = {Comparison of JSON and XML Data Interchange Formats: A Case Study.},
  author       = {Nurseitov, Nurzhan and Paulson, Michael and Reynolds, Randall and Izurieta, Clemente},
  journal      = {Caine},
  volume       = {2009},
  pages        = {157--162},
  year         = {2009},
  url          = {https://pdfs.semanticscholar.org/8432/1e662b24363e032d680901627aa1bfd6088f.pdf},
}


%
% Translating between XML and JSON
%

@inproceedings{wang2011improving,
  author       = {Wang, Guanhua},
  booktitle    = {2011 Third International Conference on Communications and Mobile Computing},
  title        = {Improving Data Transmission in Web Applications via the Translation between XML and JSON},
  year         = {2011},
  pages        = {182-185},
  abstract     = {This paper analyzes the form of two data serializing approaches used in web applications, XML and JSON. Considering that though both widely used, highly-efficient data transmission between these two methods is still a problem in application development. The features of these two data objects were analyzed and it was point out that how to translate correctly between these two objects. A recursive algorithm used to translate between these two types of data serializing forms was given based on the multi-tree data structure of XML and JSON objects. The efficiency of this algorithm was proved by translation experiments. When applied in web applications, this paper gives how to add the translation method in system structures of the applications. It gives how this method can improve system structure and the performance of the web applications.},
  keywords     = {Internet;XML;tree data structures;JSON;Web applications;XML;data transmission;multi-tree data structure;recursive algorithm;Arrays;Data communication;Data processing;Servers;Web services;XML;AJAX;JSON;Web Service;XML;data structure;recursive;translate},
  doi          = {10.1109/CMC.2011.25},
  month        = apr,
  url          = {http://ieeexplore.ieee.org/abstract/document/5931189/},
}

@inproceedings{boyer2011experiences,
  title        = {Experiences with JSON and XML Transformations},
  author       = {Boyer, John and Gao, Sandy and Malaika, Susan and Maximilien, Michael and Salz, Rich and Simeon, Jerome},
  booktitle    = {W3C Workshop on Data and Services Integration},
  year         = {2011},
  url          = {http://www.w3.org/2011/10/integration-workshop/s/ExperienceswithJSONandXMLTransformations.v08.pdf},
}

@inproceedings{lee2011jxon,
  title        = {JXON: an architecture for schema and annotation driven JSON/XML bidirectional transformations},
  author       = {Lee, David},
  booktitle    = {Proceedings of Balisage: The Markup Conference},
  year         = {2011},
  url          = {http://www.calldei.com/pubs/Balisage2011/JXON.pdf},
}


%
% Attacks on XML / JSON parsers
%

@techreport{morgan2014xml,
  title        = {XML Schema, DTD, and Entity Attacks: A Compendium of Known Techniques},
  author       = {Morgan, Timothy D. and Al Ibrahim, Omar},
  year         = {2014},
  date         = {2014-05-19},
  month        = may,
  day          = 19,
  institution  = {Virtual Security Research LLC},
  url          = {https://www.vsecurity.com//download/publications/XMLDTDEntityAttacks.pdf},
}

@inproceedings{spaeth2016sok,
  title        = {SoK: XML parser vulnerabilities},
  author       = {Sp{\"a}th, Christopher and Mainka, Christian and Mladenov, Vladislav and Schwenk, J{\"o}rg},
  booktitle    = {10th {USENIX} Workshop on Offensive Technologies, {WOOT} 16, Austin, TX, August 8-9, 2016.},
  year         = {2016},
  url          = {http://www.nds.ruhr-uni-bochum.de/media/nds/veroeffentlichungen/2016/07/22/woot16-sok_xml_parser_vulnerabilities.pdf},
  timestamp    = {Mon, 05 Sep 2016 15:55:02 +0200},
  biburl       = {http://dblp.uni-trier.de/rec/bib/conf/woot/SpathMMS16},
  bibsource    = {dblp computer science bibliography, http://dblp.org},
}

@online{steuck2002xxe,
  title        = {XXE (Xml eXternal Entity) Attack},
  author       = {Steuck, Gregory},
  organization = {SecurityFocus Bugtraq Mailing list},
  date         = {2002-10-29},
  year         = {2002},
  month        = oct,
  day          = 29,
  url          = {http://www.securityfocus.com/archive/1/297714},
  urldate      = {2017-03-03},
}

@online{manico2012handling,
  title        = {Handling Untrusted JSON Safely},
  author       = {Manico, Jim},
  organization = {WhiteHat Security Blog},
  date         = {2012-01-11},
  year         = {2012},
  month        = jan,
  day          = 11,
  url          = {https://www.whitehatsec.com/blog/handling-untrusted-json-safely/},
  urldate      = {2017-03-03},
}

@online{duvander2013convergence,
  title        = {JSON's Eight Year Convergence With XML},
  author       = {DuVander, Adam},
  organization = {ProgrammableWeb News},
  date         = {2013-12-26},
  year         = {2013},
  month        = dec,
  day          = 26,
  url          = {https://www.programmableweb.com/news/jsons-eight-year-convergence-xml/2013/12/26},
  urldate      = {2017-03-06},
}
